{"version":3,"sources":["api/user.js","components/NotFound/index.js","socket/socket.js","axios/auth.instance.js","features/App/pages/Login/index.js","features/App/pages/ForgotPassword/index.js","features/App/pages/Home/index.js","components/PrivateRoute/index.js","components/MainMenu/index.js","components/Loading/index.js","store.js","features/App/pages/VerifyScreen/index.js","components/NotificationLink/index.js","features/App/index.js","serviceWorker.js","permission/ability.js","index.js","utils/localstorage.js","features/App/slice.js","api/authentication.js","api/notification.js","permission/can.js"],"names":["getUsersApi","data","Promise","resolve","reject","token","checkToken","console","log","axios","get","params","then","res","catch","error","response","getAccountDetailApi","deleteUsersApi","delete","insertUsersApi","post","updateUsersApi","id","put","updateAccountApi","updateAccountPassApi","forgotPasswordApi","email","acdeacListUsersApi","NotFound","props","socket","io","process","query","localStorage","getItem","instance","create","baseURL","interceptors","request","use","req","headers","Authorization","layout","labelCol","span","wrapperCol","tailLayout","offset","LoginPage","dispatch","useDispatch","history","useHistory","className","style","border","padding","src","window","location","origin","height","alt","name","initialValues","remember","onFinish","values","onLogin","username","password","message","success","push","onFinishFailed","errorInfo","Item","label","initialValue","rules","required","Password","type","htmlType","width","onClick","ForgotPasswordPage","HomePage","content","PrivateRoute","Component","component","rest","render","to","pathname","state","from","MainMenu","useSelector","app","avatar","useLocation","ability","useAbility","AbilityContext","theme","mode","selectedKeys","key","icon","marginRight","UserOutlined","can","AuditOutlined","CloudServerOutlined","CrownOutlined","Loading","size","createReducer","asyncReducers","combineReducers","appReducer","store","configureStore","reducer","devTools","getStore","VerifyAcc","useState","loading","setLoading","isSuccess","setIsSuccess","useEffect","a","match","verifyToken","display","backgroundColor","alignItems","justifyContent","flexDirection","color","fontSize","href","alignContent","NotificationLink","link","onReadNotification","Header","Layout","Content","Sider","ManageUser","React","lazy","module","slide","default","injectReducer","UserSetting","ManageRequest","ManageServer","ManageCustomer","App","notifications","userId","numberNewNotif","collapsed","setCollapsed","role","login","access_token","setua","UserName","AvatarPath","handleLogout","getNotifications","once","setNotification","onLogout","lstNotifies","overflowY","map","val","index","Id","Link","IsRead","CreatedDate","fallback","minHeight","trigger","collapsible","createElement","MenuUnfoldOutlined","MenuFoldOutlined","overlay","count","NotificationOutlined","float","margin","danger","path","exact","Router","Boolean","hostname","currentAuth","Ability","subjectName","item","__type","subscribe","getState","update","auth","AbilityBuilder","defineRulesFor","require","config","ReactDOM","asyncReducer","replaceReducer","Provider","value","document","getElementById","navigator","serviceWorker","ready","registration","unregister","deleteAllLocalStorageItem","clear","setAccessToken","setLocalStorageItem","setItem","initialState","userInfo","exp","fullName","slice","createSlice","reducers","action","payload","logout","stopLoading","actions","loginApi","finally","err","length","TotalNew","putReadNotificationApi","createContext","Can","createContextualCan","Consumer"],"mappings":"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","file":"static/js/main.c17a38e8.chunk.js","sourcesContent":["import axios from \"axios/auth.instance\";\r\nimport { checkToken } from \"utils/localstorage\";\r\n\r\nexport const listUserApi = () => {\r\n  return new Promise((resolve, reject) => {\r\n    return axios({\r\n      method: \"get\",\r\n      url: \"/unknown\",\r\n    })\r\n      .then((res) => {\r\n        resolve(res.data);\r\n      })\r\n      .catch((error) => {\r\n        reject(error.response);\r\n      });\r\n  });\r\n};\r\n\r\nexport const getUsersApi = (data) => {\r\n  return new Promise((resolve, reject) => {\r\n    const token = checkToken();\r\n    console.log(\"data: \", data);\r\n    console.log(\"check token get userAPI\", token);\r\n    return axios\r\n      .get(\"/api/users/list\", { params: data })\r\n      .then((res) => {\r\n        resolve(res);\r\n      })\r\n      .catch((error) => {\r\n        reject(error.response);\r\n      });\r\n  });\r\n};\r\n\r\nexport const getAccountDetailApi = () => {\r\n  return new Promise((resolve, reject) => {\r\n    const token = checkToken();\r\n    console.log(\"check token get userAPI\", token);\r\n    return axios\r\n      .get(\"/api/users/profile\")\r\n      .then((res) => {\r\n        console.log(\"res\", res);\r\n        resolve(res);\r\n      })\r\n      .catch((error) => {\r\n        reject(error.response);\r\n      });\r\n  });\r\n};\r\n\r\nexport const deleteUsersApi = (data) => {\r\n  return new Promise((resolve, reject) => {\r\n    return axios\r\n      .delete(\"/api/users/\" + data)\r\n      .then((res) => {\r\n        resolve(res);\r\n      })\r\n      .catch((error) => {\r\n        reject(error.response);\r\n      });\r\n  });\r\n};\r\n\r\nexport const insertUsersApi = (data) => {\r\n  return new Promise((resolve, reject) => {\r\n    return axios\r\n      .post(\"/api/users/insert\", { ...data })\r\n      .then((res) => {\r\n        resolve(res);\r\n      })\r\n      .catch((error) => {\r\n        reject(error.response);\r\n      });\r\n  });\r\n};\r\n\r\nexport const updateUsersApi = (id, data) => {\r\n  return new Promise((resolve, reject) => {\r\n    console.log(\"id\", id);\r\n    console.log(\"data\", data);\r\n    return axios\r\n      .put(`/api/users/${id}`, { ...data })\r\n      .then((res) => {\r\n        resolve(res);\r\n      })\r\n      .catch((error) => {\r\n        reject(error.response);\r\n      });\r\n  });\r\n};\r\n\r\nexport const updateAccountApi = (data) => {\r\n  return new Promise((resolve, reject) => {\r\n    // console.log(\"id\", id);\r\n    console.log(\"data\", data);\r\n    return axios\r\n      .put(`/api/users/account/update`, { ...data })\r\n      .then((res) => {\r\n        resolve(res);\r\n      })\r\n      .catch((error) => {\r\n        reject(error.response);\r\n      });\r\n  });\r\n};\r\n\r\nexport const updateAccountPassApi = (data) => {\r\n  return new Promise((resolve, reject) => {\r\n    // console.log(\"id\", id);\r\n    console.log(\"data\", data);\r\n    return axios\r\n      .put(`/api/users/password/update`, { ...data })\r\n      .then((res) => {\r\n        resolve(res);\r\n      })\r\n      .catch((error) => {\r\n        reject(error.response);\r\n      });\r\n  });\r\n};\r\n\r\nexport const forgotPasswordApi = (email) => {\r\n  return new Promise((resolve, reject) => {\r\n    return axios\r\n      .get(`/api/users/forgot/${email}`)\r\n      .then((res) => {\r\n        resolve(res.data);\r\n      })\r\n      .catch((error) => {\r\n        reject(error);\r\n      });\r\n  });\r\n};\r\n\r\nexport const acdeacListUsersApi = (data) => {\r\n  console.log(\"data list\", data);\r\n  return new Promise((resolve, reject) => {\r\n    return axios\r\n      .put(`/api/users`, { ...data })\r\n      .then((res) => {\r\n        resolve(res);\r\n      })\r\n      .catch((error) => {\r\n        reject(error.response);\r\n      });\r\n  });\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nNotFound.propTypes = {};\r\n\r\nfunction NotFound(props) {\r\n  return <div>Oopss ... Not Found</div>;\r\n}\r\n\r\nexport default NotFound;\r\n","import io from \"socket.io-client\";\r\n\r\nconst socket = io(process.env.REACT_APP_BASE_URL, {\r\n  query: {\r\n    token: localStorage.getItem(\"token\"),\r\n  },\r\n});\r\n\r\nexport default socket;\r\n","import axios from \"axios\";\r\nimport { checkToken } from \"utils/localstorage\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: process.env.REACT_APP_BASE_URL,\r\n});\r\n\r\ninstance.interceptors.request.use(\r\n  (req) => {\r\n    const token = checkToken();\r\n    // console.log(\"token\", token);\r\n    // console.log(token);\r\n    req.headers.Authorization = \"Bearer \" + token;\r\n    return req;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\ninstance.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default instance;\r\n","import React from \"react\";\r\nimport { Form, Input, Button, message, Checkbox, Row, Col, Card, Space } from \"antd\";\r\nimport \"./index.scss\";\r\nimport PropTypes from \"prop-types\";\r\nimport { logout, onLogin } from \"features/App/slice\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst layout = {\r\n  labelCol: { span: 8 },\r\n  wrapperCol: { span: 16 },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: { offset: 8, span: 16 },\r\n};\r\n\r\nLoginPage.propTypes = {};\r\n\r\nfunction LoginPage(props) {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const onFinish = (values) => {\r\n    dispatch(onLogin(values.username, values.password))\r\n      .then(() => {\r\n        message.success(\"login successfully\");\r\n        history.push(\"/\");\r\n      })\r\n      .catch((error) => {\r\n        message.error(\"login fail\");\r\n      });\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <div className=\"login-form-container\" style={{ width: \"23vw\"},{ border: \"1px solid gray\" }}>\r\n        <Card className=\"login-form\" style={{ padding: \"15px 27px 15px 0px\" }}>\r\n          <div className=\"header\">\r\n            <img\r\n              src={window.location.origin + \"/logo.png\"}\r\n              height=\"100px\"\r\n              alt=\"React Starter\"\r\n            />\r\n            {/* <h1>GDPR</h1> */}\r\n            {/* <h1>GDPR System</h1> */}\r\n          </div>\r\n\r\n          <Form\r\n            {...layout}\r\n            name=\"basic\"\r\n            initialValues={{ remember: true }}\r\n            onFinish={onFinish}\r\n            onFinishFailed={onFinishFailed}\r\n          >\r\n            <Form.Item\r\n              label=\"Username\"\r\n              name=\"username\"\r\n              initialValue=\"obythelli\"\r\n              rules={[\r\n                { required: true, message: \"Please input your username!\" },\r\n              ]}\r\n            >\r\n              <Input />\r\n            </Form.Item>\r\n            <Form.Item\r\n              label=\"Password\"\r\n              name=\"password\"\r\n              initialValue=\"u7Rg2KBu\"\r\n              rules={[\r\n                { required: true, message: \"Please input your password!\" },\r\n                // { min: 5, message: \"Password must be minimum 5 characters.\" },\r\n                // {\r\n                //   pattern: \"(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])\",\r\n                //   message:\r\n                //     \"Password must include number, uppercase and lowercase character\",\r\n                // },\r\n              ]}\r\n            >\r\n              <Input.Password />\r\n            </Form.Item>\r\n            <Form.Item {...tailLayout}>\r\n              <Button id=\"loginbtn\" type=\"primary\" htmlType=\"submit\" style={{ width: \"35%\" }}>\r\n                Submit\r\n              </Button>\r\n              <Button\r\n              type=\"link\" htmlType=\"button\"\r\n                className=\"login-form-forgot\"\r\n                onClick={() => {\r\n                  history.push(\"/forgotpassword\");\r\n                }}\r\n                style={{ width: \"65%\" }}\r\n              >\r\n                Forgot password?\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n    // <div class=\"container\">\r\n    //   <div class=\"card card-container\">\r\n    //     <img\r\n    //       src={window.location.origin + \"/logo.png\"}\r\n    //       height=\"100px\"\r\n    //       alt=\"React Starter\"\r\n    //     />\r\n    //     <h1 class=\"text-center\">Login Page</h1>\r\n    //     <p id=\"profile-name\" class=\"profile-name-card\"></p>\r\n    //     <form action=\"./RequestList.html\" class=\"form-signin\">\r\n    //       <span id=\"reauth-email\" class=\"reauth-email\"></span>\r\n    //       <input\r\n    //         type=\"username\"\r\n    //         id=\"inputEmail\"\r\n    //         class=\"form-control\"\r\n    //         placeholder=\"Username\"\r\n    //         required\r\n    //         autofocus\r\n    //       />\r\n    //       <input\r\n    //         type=\"password\"\r\n    //         id=\"inputPassword\"\r\n    //         class=\"form-control\"\r\n    //         placeholder=\"Password\"\r\n    //         required\r\n    //       />\r\n    //       {/* <div id=\"remember\" class=\"checkbox\">\r\n    //         <label>\r\n    //           <input type=\"checkbox\" value=\"remember-me\" /> Remember me\r\n    //         </label>\r\n    //       </div> */}\r\n    //       <button class=\"btn btn-block btn-signin\" type=\"submit\">\r\n    //         Sign in\r\n    //       </button>\r\n    //     </form>\r\n    //     <script type=\"text/javascript\" src=\"./js/login.js\"></script>\r\n    //     <a href=\"#\" class=\"forgot-password\">\r\n    //       Forgot the password?\r\n    //     </a>\r\n    //   </div>\r\n    // </div>\r\n  );\r\n}\r\n\r\nLoginPage.propTypes = {\r\n  account: PropTypes.object,\r\n  emailMessages: PropTypes.object,\r\n  error: PropTypes.string,\r\n  idToken: PropTypes.string,\r\n};\r\nexport default LoginPage;\r\n","import React from \"react\";\r\nimport { Form, Input, Button, message, Checkbox, Space } from \"antd\";\r\nimport \"./index.scss\";\r\nimport PropTypes from \"prop-types\";\r\nimport { forgotPasswordApi } from \"../../../../api/user\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst layout = {\r\n  labelCol: { span: 8 },\r\n  wrapperCol: { span: 16 },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: { offset: 8, span: 16 },\r\n};\r\n\r\nfunction ForgotPasswordPage() {\r\n  const history = useHistory();\r\n  const onFinish = (values) => {\r\n    forgotPasswordApi(values.email)\r\n      .then(() => {\r\n        message.success(\r\n          \"Successfully! Check your email for more information!\",\r\n          9\r\n        );\r\n        history.push(\"/\");\r\n      })\r\n      .catch((error) => {\r\n        message.error(\"Error!\");\r\n        message.error(\r\n          \"Tips: Please make sure that you have entered the correct email one!\"\r\n        );\r\n        // message.error(error.data.message);\r\n        console.log(error.message);\r\n      });\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <div style={{ width: \"33%\" }}>\r\n        <Form\r\n          {...layout}\r\n          name=\"basic\"\r\n          initialValues={{ remember: true }}\r\n          onFinish={onFinish}\r\n          onFinishFailed={onFinishFailed}\r\n        >\r\n          <Form.Item\r\n            name=\"email\"\r\n            label=\"E-mail\"\r\n            rules={[\r\n              {\r\n                type: \"email\",\r\n                message: \"The input is not valid E-mail!\",\r\n              },\r\n              {\r\n                required: true,\r\n                message: \"Please input your E-mail!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item {...tailLayout}>\r\n            <Space>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Submit\r\n            </Button>\r\n            <Button type=\"primary\" onClick={()=>{history.push(\"/\");}}>\r\n              Return\r\n            </Button>\r\n            </Space>\r\n          </Form.Item>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ForgotPasswordPage;\r\n","import React from \"react\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nHomePage.propTypes = {};\r\n\r\nfunction HomePage(props) {\r\n  return (\r\n    <div>\r\n      <Helmet>\r\n        <title>Home</title>\r\n        <meta\r\n          name=\"description\"\r\n          content=\"A very simple app for the internship program at NP\"\r\n        />\r\n      </Helmet>\r\n      Home welcome!!\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n","import React from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport { checkToken } from \"../../utils/localstorage\";\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props) =>\r\n      checkToken() !== null ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect\r\n          to={{\r\n            pathname: \"/login\",\r\n            state: { from: props.location },\r\n          }}\r\n        />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nexport default PrivateRoute;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useLocation, Link } from \"react-router-dom\";\r\nimport { Menu, Avatar, Badge } from \"antd\";\r\nimport {\r\n  UserOutlined,\r\n  VideoCameraOutlined,\r\n  CloudServerOutlined,\r\n  AuditOutlined,\r\n  CrownOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { AbilityContext } from \"permission/can\";\r\nimport { useAbility } from \"@casl/react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nMainMenu.propTypes = {};\r\n\r\nfunction MainMenu(props) {\r\n  const { username, avatar } = useSelector((state) => state.app);\r\n  const location = useLocation();\r\n  const ability = useAbility(AbilityContext);\r\n  return (\r\n    <Menu theme=\"dark\" mode=\"inline\" selectedKeys={[location.pathname]}>\r\n      {\r\n        <Menu.Item\r\n          key=\"/user-setting\"\r\n          icon={\r\n            <Avatar\r\n              style={{ marginRight: \"0.82em\" }}\r\n              icon={<UserOutlined />}\r\n              src={`${process.env.REACT_APP_BASE_URL}/api/users/${avatar}`}\r\n            />\r\n          }\r\n        >\r\n          <b>{`Hi ${username}!`}</b>\r\n          <Link to=\"/user-setting\" />\r\n        </Menu.Item>\r\n      }\r\n      {ability.can(\"access\", \"manage-user\") && (\r\n        <Menu.Item key=\"/user-management\" icon={<UserOutlined />}>\r\n          Manage User\r\n          <Link to=\"/user-management\" />\r\n        </Menu.Item>\r\n      )}\r\n      {ability.can(\"access\", \"manage-request\") && (\r\n        <Menu.Item key=\"/request-management\" icon={<AuditOutlined />}>\r\n          Manage Request\r\n          <Link to=\"/request-management\" />\r\n        </Menu.Item>\r\n      )}\r\n      {ability.can(\"access\", \"manage-server\") && (\r\n        <Menu.Item key=\"/server-management\" icon={<CloudServerOutlined />}>\r\n          Manage Server\r\n          <Link to=\"/server-management\" />\r\n        </Menu.Item>\r\n      )}\r\n      {ability.can(\"access\", \"manage-customer\") && (\r\n        <Menu.Item key=\"/customer-management\" icon={<CrownOutlined />}>\r\n          Manage Customer\r\n          <Link to=\"/customer-management\" />\r\n        </Menu.Item>\r\n      )}\r\n    </Menu>\r\n  );\r\n}\r\n\r\nexport default MainMenu;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Spin } from 'antd';\r\n\r\nimport './index.scss';\r\n\r\nLoading.propTypes = {};\r\n\r\nfunction Loading(props) {\r\n  return (\r\n    <div className=\"loading-container\">\r\n      <Spin size=\"large\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Loading;\r\n","import { configureStore, combineReducers } from \"@reduxjs/toolkit\";\r\nimport appReducer from \"features/App/slice\";\r\n\r\nfunction createReducer(asyncReducers) {\r\n  return combineReducers({\r\n    app: appReducer,\r\n    ...asyncReducers,\r\n  });\r\n}\r\n\r\nconst store = configureStore({\r\n  reducer: createReducer(),\r\n  devTools: true,\r\n});\r\n\r\nexport function configureAppStore() {\r\n  store.asyncReducers = {};\r\n  store.injectReducer = (key, asyncReducer) => {\r\n    store.asyncReducers[key] = asyncReducer;\r\n    store.replaceReducer(createReducer(store.asyncReducers));\r\n  };\r\n  return store;\r\n}\r\n\r\nexport function getStore() {\r\n  return store;\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Loading from \"components/Loading\";\r\nimport axios from \"axios/auth.instance\";\r\nimport \"./index.scss\";\r\n\r\nexport const VerifyAcc = (props) => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [isSuccess, setIsSuccess] = useState(false);\r\n  useEffect(() => {\r\n    (async function () {\r\n      try {\r\n        const res = await axios.get(\r\n          `/api/users/confirm/${props.match.params.verifyToken}`\r\n        );\r\n        if (res.data.success) {\r\n          setLoading(false);\r\n          setIsSuccess(true);\r\n        } else {\r\n          setLoading(false);\r\n          setIsSuccess(false);\r\n        }\r\n      } catch (error) {\r\n        setLoading(false);\r\n        setIsSuccess(false);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <Loading />;\r\n  }\r\n  if (isSuccess) {\r\n    return (\r\n      <div>\r\n        <div\r\n          className=\"swal2-icon swal2-success swal2-animate-success-icon\"\r\n          style={{ display: \"flex\" }}\r\n        >\r\n          <div\r\n            className=\"swal2-success-circular-line-left\"\r\n            style={{ backgroundColor: \"rgb(255, 255, 255)\" }}\r\n          ></div>\r\n          <span className=\"swal2-success-line-tip\"></span>\r\n          <span className=\"swal2-success-line-long\"></span>\r\n          <div className=\"swal2-success-ring\"></div>\r\n          <div\r\n            className=\"swal2-success-fix\"\r\n            style={{ backgroundColor: \"rgb(255, 255, 255)\" }}\r\n          ></div>\r\n          <div\r\n            className=\"swal2-success-circular-line-right\"\r\n            style={{ backgroundColor: \"rgb(255, 255, 255)\" }}\r\n          ></div>\r\n        </div>\r\n        <div\r\n          style={{\r\n            width: \"100%\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-around\",\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n          }}\r\n        >\r\n          <div className=\"container\">\r\n            <div className=\"row text-center\">\r\n              <div className=\"col-sm-12 col-sm-offset-3\">\r\n                <h2 style={{ color: \"#0fad00\" }}>Success</h2>\r\n\r\n                <p style={{ fontSize: \"20px\", color: \"#5C5C5C\" }}>\r\n                  Thank you for verifying the registration. Hope our service\r\n                  will be valued to you.\r\n                </p>\r\n                <p style={{ fontSize: \"20px\", color: \"#5C5C5C\" }}>\r\n                  Please go back now and login.\r\n                </p>\r\n                <a href=\"/login\" className=\"btn btn-outline-success\">\r\n                  Log in\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div>\r\n      <div\r\n        className=\"swal2-icon swal2-error swal2-animate-error-icon\"\r\n        style={{ display: \"flex\" }}\r\n      >\r\n        <span className=\"swal2-x-mark\">\r\n          <span className=\"swal2-x-mark-line-left\"></span>\r\n          <span className=\"swal2-x-mark-line-right\"></span>\r\n        </span>\r\n      </div>\r\n      <div\r\n        style={{\r\n          width: \"100%\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"space-around\",\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n        }}\r\n      >\r\n        <div className=\"container\">\r\n          <div className=\"row text-center\">\r\n            <div\r\n              className=\"col-sm-12 col-sm-offset-3\"\r\n              style={{ alignContent: \"center\" }}\r\n            >\r\n              <h2 style={{ color: \"red\" }}>Fail</h2>\r\n\r\n              <p style={{ fontSize: \"20px\", color: \"#5C5C5C\" }}>\r\n                Something went wrong, we can not verify your account.\r\n              </p>\r\n              <p style={{ fontSize: \"20px\", color: \"#5C5C5C\" }}>\r\n                Please go back now and try again.\r\n              </p>\r\n              <a href=\"/login\" className=\"btn btn-outline-danger\">\r\n                Log in\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { onReadNotification } from \"features/App/slice\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst NotificationLink = (props) => {\r\n  const dispatch = useDispatch();\r\n  // useEffect(() => {\r\n  //   readNotification(props.id);\r\n  // }, [props.id]);\r\n  function readNotification(id) {\r\n    dispatch(onReadNotification(id));\r\n  }\r\n  return (\r\n    <Link to={props.link} onClick={() => readNotification(props.id)}>\r\n      {props.content}\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default NotificationLink;\r\n","import React, { Suspense, useEffect, useState } from \"react\";\r\nimport {\r\n  BrowserRouter,\r\n  Route,\r\n  Switch,\r\n  Link,\r\n  Redirect,\r\n  useLocation,\r\n} from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Layout, Button, message, Dropdown, Menu, Badge } from \"antd\";\r\nimport {\r\n  MenuUnfoldOutlined,\r\n  MenuFoldOutlined,\r\n  NotificationOutlined,\r\n} from \"@ant-design/icons\";\r\nimport \"./index.scss\";\r\nimport { checkToken } from \"utils/localstorage\";\r\nimport PropTypes from \"prop-types\";\r\nimport LoginPage from \"features/App/pages/Login\";\r\nimport ForgotPasswordPage from \"features/App/pages/ForgotPassword\";\r\nimport HomePage from \"features/App/pages/Home\";\r\nimport NotFound from \"components/NotFound\";\r\nimport PrivateRoute from \"components/PrivateRoute\";\r\nimport MainMenu from \"components/MainMenu\";\r\nimport Loading from \"components/Loading\";\r\nimport { getStore } from \"store\";\r\nimport { getNotifications, login, onLogout, setNotification } from \"./slice\";\r\nimport { AbilityContext } from \"permission/can\";\r\nimport { useAbility } from \"@casl/react\";\r\nimport { VerifyAcc } from \"./pages/VerifyScreen\";\r\nimport { setua } from \"features/App/slice\";\r\nimport { getAccountDetailApi } from \"api/user\";\r\nimport socket from \"socket/socket\";\r\nimport NotificationLink from \"components/NotificationLink\";\r\n\r\nconst store = getStore();\r\nconst { Header, Content, Sider } = Layout;\r\n\r\nconst ManageUser = React.lazy(() =>\r\n  import(\"features/ManageUser\").then(async (module) => {\r\n    const reducer = await import(\"features/ManageUser/slice\").then(\r\n      (slide) => slide.default\r\n    );\r\n    store.injectReducer(\"userManagement\", reducer);\r\n    return module;\r\n  })\r\n);\r\n\r\nconst UserSetting = React.lazy(() =>\r\n  import(\"features/UserSetting\").then(async (module) => {\r\n    const reducer = await import(\"features/UserSetting/slice\").then(\r\n      (slide) => slide.default\r\n    );\r\n    store.injectReducer(\"userSetting\", reducer);\r\n    return module;\r\n  })\r\n);\r\n\r\nconst ManageRequest = React.lazy(() =>\r\n  import(\"features/ManageRequest\").then(async (module) => {\r\n    const reducer = await import(\"features/ManageRequest/slice\").then(\r\n      (slide) => slide.default\r\n    );\r\n    store.injectReducer(\"requestManagement\", reducer);\r\n    return module;\r\n  })\r\n);\r\n\r\nconst ManageServer = React.lazy(() =>\r\n  import(\"features/ManageServer\").then(async (module) => {\r\n    const reducer = await import(\"features/ManageServer/slice\").then(\r\n      (slide) => slide.default\r\n    );\r\n    store.injectReducer(\"serverManagement\", reducer);\r\n    return module;\r\n  })\r\n);\r\n\r\nconst ManageCustomer = React.lazy(() =>\r\n  import(\"features/ManageCustomer\").then(async (module) => {\r\n    const reducer = await import(\"features/ManageCustomer/slice\").then(\r\n      (slide) => slide.default\r\n    );\r\n    store.injectReducer(\"customerManagement\", reducer);\r\n    return module;\r\n  })\r\n);\r\n\r\nfunction App(props) {\r\n  const dispatch = useDispatch();\r\n  const { loading, notifications, userId, numberNewNotif } = useSelector(\r\n    (state) => state.app\r\n  );\r\n  const [collapsed, setCollapsed] = useState(false);\r\n  const ability = useAbility(AbilityContext);\r\n  const location = useLocation();\r\n  console.log(notifications);\r\n\r\n  useEffect(() => {\r\n    const token = checkToken();\r\n    const role = localStorage.getItem(\"role\");\r\n    const userId = localStorage.getItem(\"userId\");\r\n    if (token)\r\n      dispatch(login({ access_token: token, role: role, userId: userId }));\r\n    getAccountDetailApi()\r\n      .then((res) => {\r\n        dispatch(\r\n          setua({\r\n            username: res.data.UserName,\r\n            avatar: res.data.AvatarPath,\r\n          })\r\n        );\r\n      })\r\n      .catch((error) => {\r\n        handleLogout();\r\n        message.error(error.data.message);\r\n      });\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetchNotification();\r\n  }, []);\r\n\r\n  socket.once(userId, (data) => {\r\n    console.log(\"here \", data);\r\n    dispatch(\r\n      setNotification({\r\n        notifications: [data, ...notifications],\r\n        numberNewNotif: numberNewNotif + 1,\r\n      })\r\n    );\r\n  });\r\n\r\n  function fetchNotification() {\r\n    dispatch(getNotifications());\r\n  }\r\n\r\n  const handleLogout = () => {\r\n    dispatch(onLogout());\r\n  };\r\n  const toggle = () => setCollapsed(!collapsed);\r\n\r\n  const lstNotifies = (\r\n    <Menu\r\n      selectedKeys={[location.pathname]}\r\n      style={{ overflowY: \"auto\", height: \"500px\" }}\r\n    >\r\n      {notifications.map((val, index) => {\r\n        return (\r\n          <Menu.Item key={val.Id}>\r\n            <NotificationLink\r\n              link={val.Link}\r\n              content={val.Content}\r\n              id={val.Id}\r\n            />\r\n            {val.IsRead ? (\r\n              <p style={{ color: \"black\" }}>Read</p>\r\n            ) : (\r\n              <p style={{ color: \"blue\" }}>New</p>\r\n            )}\r\n            <p>{val.CreatedDate}</p>\r\n          </Menu.Item>\r\n        );\r\n      })}\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <Suspense fallback={<div>Loading ...</div>}>\r\n        <Layout>\r\n          <Sider\r\n            style={{ minHeight: \"100vh\" }}\r\n            trigger={null}\r\n            collapsible\r\n            collapsed={collapsed}\r\n          >\r\n            <Link to=\"/\">\r\n              <div className=\"logo\" />\r\n            </Link>\r\n            <MainMenu />\r\n          </Sider>\r\n          <Layout className=\"site-layout\">\r\n            <Header className=\"site-layout-background\" style={{ padding: 0 }}>\r\n              {React.createElement(\r\n                collapsed ? MenuUnfoldOutlined : MenuFoldOutlined,\r\n                {\r\n                  className: \"trigger\",\r\n                  onClick: toggle,\r\n                }\r\n              )}\r\n\r\n              <Dropdown overlay={lstNotifies}>\r\n                <Badge count={numberNewNotif}>\r\n                  <NotificationOutlined />\r\n                </Badge>\r\n              </Dropdown>\r\n\r\n              <Button\r\n                onClick={handleLogout}\r\n                style={{ float: \"right\", margin: 14 }}\r\n                type=\"dashed\"\r\n                danger\r\n              >\r\n                Logout\r\n              </Button>\r\n            </Header>\r\n\r\n            <Content\r\n              className=\"site-layout-background\"\r\n              style={{\r\n                margin: \"24px 16px\",\r\n                padding: 24,\r\n                minHeight: 280,\r\n              }}\r\n            >\r\n              <Switch>\r\n                {ability.can(\"access\", \"manage-user\") && (\r\n                  <PrivateRoute\r\n                    path=\"/user-management\"\r\n                    component={ManageUser}\r\n                  />\r\n                )}\r\n                {<PrivateRoute path=\"/user-setting\" component={UserSetting} />}\r\n\r\n                {ability.can(\"access\", \"manage-request\") && (\r\n                  <PrivateRoute\r\n                    path=\"/request-management\"\r\n                    component={ManageRequest}\r\n                  />\r\n                )}\r\n                {ability.can(\"access\", \"manage-server\") && (\r\n                  <PrivateRoute\r\n                    path=\"/server-management\"\r\n                    component={ManageServer}\r\n                  />\r\n                )}\r\n                {ability.can(\"access\", \"manage-customer\") && (\r\n                  <PrivateRoute\r\n                    path=\"/customer-management\"\r\n                    component={ManageCustomer}\r\n                  />\r\n                )}\r\n                <PrivateRoute path=\"/\" exact component={HomePage} />\r\n                <Route component={NotFound} />\r\n              </Switch>\r\n            </Content>\r\n          </Layout>\r\n        </Layout>\r\n      </Suspense>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Router(props) {\r\n  const { loading } = useSelector((state) => state.app);\r\n  return (\r\n    <Suspense fallback={<div>Loading ...</div>}>\r\n      {loading && <Loading />}\r\n      <BrowserRouter>\r\n        <Switch>\r\n          <Route exact path=\"/login\" component={LoginPage} />\r\n          <Route exact path=\"/forgotpassword\" component={ForgotPasswordPage} />\r\n          <Route path=\"/confirm/:verifyToken\" component={VerifyAcc} />\r\n          <PrivateRoute path=\"/\" component={App} />\r\n\r\n          <Route component={NotFound} />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </Suspense>\r\n  );\r\n}\r\n\r\nexport default Router;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { Ability, AbilityBuilder } from \"@casl/ability\";\r\nimport { getStore } from \"store\";\r\n\r\nconst store = getStore();\r\n// Defines how to detect object's type\r\nfunction subjectName(item) {\r\n  if (!item || typeof item === \"string\") {\r\n    return item;\r\n  }\r\n  return item.__type;\r\n}\r\n\r\nconst ability = new Ability([], { subjectName });\r\n\r\nlet currentAuth;\r\nstore.subscribe(() => {\r\n  const prevAuth = currentAuth;\r\n  currentAuth = store.getState().app.role;\r\n  if (prevAuth !== currentAuth) {\r\n    ability.update(defineRulesFor(currentAuth));\r\n  }\r\n});\r\n\r\nfunction defineRulesFor(auth) {\r\n  const { can, rules } = new AbilityBuilder();\r\n  if (auth === \"admin\") {\r\n    can(\"access\", \"manage-user\");\r\n    can(\"access\", \"manage-request\");\r\n    can(\"access\", \"manage-server\");\r\n    can(\"access\", \"manage-customer\");\r\n    can(\"approve-cancel\", \"request\");\r\n    can(\"export\", \"request\");\r\n  } else if (auth === \"normal-user\") {\r\n    can(\"access\", \"manage-request\");\r\n  } else if (auth === \"dc-member\") {\r\n    can(\"access\", \"manage-request\");\r\n    can(\"access\", \"manage-server\");\r\n    can(\"approve-cancel\", \"request\");\r\n    can(\"export\", \"request\");\r\n  } else if (auth === \"contact-point\") {\r\n    can(\"access\", \"manage-customer\");\r\n    can(\"access\", \"manage-request\");\r\n  }\r\n  return rules;\r\n}\r\n\r\nexport default ability;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { HelmetProvider } from \"react-helmet-async\";\r\nimport { Provider } from \"react-redux\";\r\nimport App from \"features/App\";\r\n\r\nimport \"./index.scss\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { configureAppStore } from \"./store\";\r\nimport { AbilityContext } from \"permission/can\";\r\nimport ability from \"permission/ability\";\r\nrequire(\"dotenv\").config();\r\nReactDOM.render(\r\n  <Provider store={configureAppStore()}>\r\n    <HelmetProvider>\r\n      <AbilityContext.Provider value={ability}>\r\n        <App />\r\n      </AbilityContext.Provider>\r\n    </HelmetProvider>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","export function deleteAccessToken() {\r\n  localStorage.removeItem(\"token\");\r\n}\r\n\r\nexport function deleteAllLocalStorageItem() {\r\n  localStorage.clear();\r\n}\r\n\r\nexport function setAccessToken(token) {\r\n  setLocalStorageItem(\"token\", token);\r\n}\r\n\r\nexport function setLocalStorageItem(name, value) {\r\n  localStorage.setItem(name, value);\r\n}\r\n\r\nexport function getLocalStorageItem(name) {\r\n  localStorage.getItem(name);\r\n}\r\n\r\nexport function checkToken() {\r\n  const token = localStorage.getItem(\"token\");\r\n  if (token !== \"\") {\r\n    return token;\r\n  }\r\n  return null;\r\n}\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport {\r\n  setAccessToken,\r\n  setLocalStorageItem,\r\n  deleteAllLocalStorageItem,\r\n} from \"utils/localstorage\";\r\nimport { loginApi } from \"api/authentication\";\r\nimport { getAllNotifications, putReadNotificationApi } from \"api/notification\";\r\n\r\nconst initialState = {\r\n  userInfo: {\r\n    exp: null,\r\n    fullName: null,\r\n    email: null,\r\n  },\r\n  role: null,\r\n  token: null,\r\n  loading: false,\r\n  userId: null,\r\n  username: null,\r\n  avatar: null,\r\n  notifications: [],\r\n  numberNewNotif: 0,\r\n};\r\n\r\nconst slice = createSlice({\r\n  name: \"app\",\r\n  initialState,\r\n  reducers: {\r\n    login(state, action) {\r\n      state.token = action.payload.access_token;\r\n      state.role = action.payload.role;\r\n      state.userId = action.payload.userId;\r\n    },\r\n    logout(state, action) {\r\n      state.token = null;\r\n      state.userInfo = initialState.userInfo;\r\n    },\r\n    loading(state, action) {\r\n      state.loading = true;\r\n    },\r\n    stopLoading(state, action) {\r\n      state.loading = false;\r\n    },\r\n    setua(state, action) {\r\n      state.username = action.payload.username;\r\n      state.avatar = action.payload.avatar;\r\n    },\r\n    setNotification(state, action) {\r\n      state.notifications = action.payload.notifications;\r\n      state.numberNewNotif = action.payload.numberNewNotif;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  login,\r\n  logout,\r\n  loading,\r\n  stopLoading,\r\n  setua,\r\n  setNotification,\r\n} = slice.actions;\r\nexport default slice.reducer;\r\n\r\nexport const onLogout = () => (dispatch) => {\r\n  dispatch(loading());\r\n  deleteAllLocalStorageItem();\r\n  dispatch(logout());\r\n  dispatch(stopLoading());\r\n};\r\n\r\nexport const onLogin = (username, password) => (dispatch) => {\r\n  return new Promise((resolve, reject) => {\r\n    dispatch(loading());\r\n    return loginApi(username, password)\r\n      .then((res) => {\r\n        const { access_token, role, userId } = res;\r\n        dispatch(\r\n          login({ access_token: access_token, role: role, userId: userId })\r\n        );\r\n        setAccessToken(access_token);\r\n        setLocalStorageItem(\"role\", role);\r\n        setLocalStorageItem(\"userId\", userId);\r\n        resolve();\r\n      })\r\n      .catch((error) => {\r\n        reject(error);\r\n      })\r\n      .finally(() => {\r\n        dispatch(stopLoading());\r\n      });\r\n  });\r\n};\r\n\r\nexport const getNotifications = () => (dispatch) => {\r\n  return new Promise((resolve, reject) => {\r\n    return getAllNotifications()\r\n      .then((res) => {\r\n        dispatch(\r\n          setNotification({\r\n            notifications: res.data,\r\n            numberNewNotif: res.data.length > 0 ? res.data[0].TotalNew : 0,\r\n          })\r\n        );\r\n        resolve();\r\n      })\r\n      .catch((err) => {\r\n        reject(err);\r\n      });\r\n  });\r\n};\r\n\r\nexport const onReadNotification = (id) => (dispatch) => {\r\n  return new Promise((resolve, reject) => {\r\n    return putReadNotificationApi(id)\r\n      .then((res) => {\r\n        dispatch(getNotifications());\r\n        resolve();\r\n      })\r\n      .catch((err) => {\r\n        reject(err);\r\n      });\r\n  });\r\n};\r\n","import axios from \"axios/auth.instance\";\r\n\r\nexport const loginApi = (username, password) => {\r\n  return new Promise((resolve, reject) => {\r\n    return axios\r\n      .post(\"/auth/login\", {\r\n        username: username,\r\n        password: password,\r\n      })\r\n      .then((res) => {\r\n        resolve(res.data);\r\n      })\r\n      .catch((error) => {\r\n        reject(error);\r\n      });\r\n  });\r\n};\r\n\r\n","import Axios from \"axios\";\r\n\r\nimport axios from \"axios/auth.instance\";\r\n\r\nexport const getAllNotifications = () => {\r\n  return new Promise((resolve, reject) => {\r\n    return axios\r\n      .get(\"/notifications\")\r\n      .then((res) => {\r\n        resolve(res);\r\n      })\r\n      .catch((err) => {\r\n        reject(err);\r\n      });\r\n  });\r\n};\r\n\r\nexport const putReadNotificationApi = (id) => {\r\n  return new Promise((resolve, reject) => {\r\n    return axios\r\n      .put(`/notifications/read-notification/${id}`)\r\n      .then((res) => {\r\n        resolve();\r\n      })\r\n      .catch((err) => {\r\n        reject(err);\r\n      });\r\n  });\r\n};\r\n","import { createContext } from \"react\";\r\nimport { createContextualCan } from \"@casl/react\";\r\n\r\nexport const AbilityContext = createContext();\r\nexport const Can = createContextualCan(AbilityContext.Consumer);\r\n"],"sourceRoot":""}