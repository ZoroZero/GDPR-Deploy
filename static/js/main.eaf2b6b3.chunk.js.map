{"version":3,"sources":["components/NotFound/index.js","features/App/pages/Login/index.js","features/App/pages/ForgotPassword/index.js","features/App/pages/Home/index.js","components/PrivateRoute/index.js","components/MainMenu/index.js","components/Loading/index.js","store.js","features/App/pages/VerifyScreen/index.js","features/App/index.js","serviceWorker.js","permission/ability.js","index.js","axios/auth.instance.js","utils/localstorage.js","features/App/slice.js","api/authentication.js","permission/can.js","api/user.js"],"names":["NotFound","props","layout","labelCol","span","wrapperCol","tailLayout","offset","LoginPage","dispatch","useDispatch","history","useHistory","className","style","border","padding","src","window","location","origin","height","alt","name","initialValues","remember","onFinish","values","onLogin","username","password","then","message","success","push","catch","error","onFinishFailed","errorInfo","console","log","Item","label","initialValue","rules","required","Password","id","type","htmlType","width","onClick","ForgotPasswordPage","forgotPasswordApi","email","HomePage","content","PrivateRoute","Component","component","rest","render","checkToken","to","pathname","state","from","MainMenu","useSelector","app","avatar","useLocation","ability","useAbility","AbilityContext","theme","mode","selectedKeys","key","icon","marginRight","UserOutlined","process","can","AuditOutlined","CloudServerOutlined","CrownOutlined","Loading","size","createReducer","asyncReducers","combineReducers","appReducer","store","configureStore","reducer","devTools","getStore","VerifyAcc","useState","loading","setLoading","isSuccess","setIsSuccess","useEffect","a","axios","get","match","params","verifyToken","data","display","backgroundColor","alignItems","justifyContent","flexDirection","color","fontSize","href","alignContent","Header","Layout","Content","Sider","ManageUser","React","lazy","module","slide","default","injectReducer","UserSetting","ManageRequest","ManageServer","ManageCustomer","App","collapsed","setCollapsed","token","role","localStorage","getItem","userId","login","access_token","getAccountDetailApi","res","setua","UserName","AvatarPath","handleLogout","onLogout","fallback","minHeight","trigger","collapsible","createElement","MenuUnfoldOutlined","MenuFoldOutlined","float","margin","danger","path","exact","Router","Boolean","hostname","currentAuth","Ability","subjectName","item","__type","subscribe","getState","update","auth","AbilityBuilder","defineRulesFor","require","config","ReactDOM","asyncReducer","replaceReducer","Provider","value","document","getElementById","navigator","serviceWorker","ready","registration","unregister","instance","create","baseURL","interceptors","request","use","req","headers","Authorization","Promise","reject","response","deleteAllLocalStorageItem","clear","setAccessToken","setLocalStorageItem","setItem","initialState","userInfo","exp","fullName","slice","createSlice","reducers","action","payload","logout","stopLoading","actions","resolve","post","loginApi","finally","createContext","Can","createContextualCan","Consumer","getUsersApi","deleteUsersApi","delete","insertUsersApi","updateUsersApi","put","updateAccountApi","updateAccountPassApi","acdeacListUsersApi"],"mappings":"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","file":"static/js/main.eaf2b6b3.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nNotFound.propTypes = {};\r\n\r\nfunction NotFound(props) {\r\n  return <div>Oopss ... Not Found</div>;\r\n}\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\r\nimport { Form, Input, Button, message, Checkbox, Row, Col, Card, Space } from \"antd\";\r\nimport \"./index.scss\";\r\nimport PropTypes from \"prop-types\";\r\nimport { logout, onLogin } from \"features/App/slice\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst layout = {\r\n  labelCol: { span: 8 },\r\n  wrapperCol: { span: 16 },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: { offset: 8, span: 16 },\r\n};\r\n\r\nLoginPage.propTypes = {};\r\n\r\nfunction LoginPage(props) {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const onFinish = (values) => {\r\n    dispatch(onLogin(values.username, values.password))\r\n      .then(() => {\r\n        message.success(\"login successfully\");\r\n        history.push(\"/\");\r\n      })\r\n      .catch((error) => {\r\n        message.error(\"login fail\");\r\n      });\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <div className=\"login-form-container\" style={{ width: \"23vw\"},{ border: \"1px solid gray\" }}>\r\n        <Card className=\"login-form\" style={{ padding: \"15px 27px 15px 0px\" }}>\r\n          <div className=\"header\">\r\n            <img\r\n              src={window.location.origin + \"/logo.png\"}\r\n              height=\"100px\"\r\n              alt=\"React Starter\"\r\n            />\r\n            {/* <h1>GDPR</h1> */}\r\n            {/* <h1>GDPR System</h1> */}\r\n          </div>\r\n\r\n          <Form\r\n            {...layout}\r\n            name=\"basic\"\r\n            initialValues={{ remember: true }}\r\n            onFinish={onFinish}\r\n            onFinishFailed={onFinishFailed}\r\n          >\r\n            <Form.Item\r\n              label=\"Username\"\r\n              name=\"username\"\r\n              initialValue=\"obythelli\"\r\n              rules={[\r\n                { required: true, message: \"Please input your username!\" },\r\n              ]}\r\n            >\r\n              <Input />\r\n            </Form.Item>\r\n            <Form.Item\r\n              label=\"Password\"\r\n              name=\"password\"\r\n              initialValue=\"u7Rg2KBu\"\r\n              rules={[\r\n                { required: true, message: \"Please input your password!\" },\r\n                // { min: 5, message: \"Password must be minimum 5 characters.\" },\r\n                // {\r\n                //   pattern: \"(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])\",\r\n                //   message:\r\n                //     \"Password must include number, uppercase and lowercase character\",\r\n                // },\r\n              ]}\r\n            >\r\n              <Input.Password />\r\n            </Form.Item>\r\n            <Form.Item {...tailLayout}>\r\n              <Button id=\"loginbtn\" type=\"primary\" htmlType=\"submit\" style={{ width: \"35%\" }}>\r\n                Submit\r\n              </Button>\r\n              <Button\r\n              type=\"link\" htmlType=\"button\"\r\n                className=\"login-form-forgot\"\r\n                onClick={() => {\r\n                  history.push(\"/forgotpassword\");\r\n                }}\r\n                style={{ width: \"65%\" }}\r\n              >\r\n                Forgot password?\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n    // <div class=\"container\">\r\n    //   <div class=\"card card-container\">\r\n    //     <img\r\n    //       src={window.location.origin + \"/logo.png\"}\r\n    //       height=\"100px\"\r\n    //       alt=\"React Starter\"\r\n    //     />\r\n    //     <h1 class=\"text-center\">Login Page</h1>\r\n    //     <p id=\"profile-name\" class=\"profile-name-card\"></p>\r\n    //     <form action=\"./RequestList.html\" class=\"form-signin\">\r\n    //       <span id=\"reauth-email\" class=\"reauth-email\"></span>\r\n    //       <input\r\n    //         type=\"username\"\r\n    //         id=\"inputEmail\"\r\n    //         class=\"form-control\"\r\n    //         placeholder=\"Username\"\r\n    //         required\r\n    //         autofocus\r\n    //       />\r\n    //       <input\r\n    //         type=\"password\"\r\n    //         id=\"inputPassword\"\r\n    //         class=\"form-control\"\r\n    //         placeholder=\"Password\"\r\n    //         required\r\n    //       />\r\n    //       {/* <div id=\"remember\" class=\"checkbox\">\r\n    //         <label>\r\n    //           <input type=\"checkbox\" value=\"remember-me\" /> Remember me\r\n    //         </label>\r\n    //       </div> */}\r\n    //       <button class=\"btn btn-block btn-signin\" type=\"submit\">\r\n    //         Sign in\r\n    //       </button>\r\n    //     </form>\r\n    //     <script type=\"text/javascript\" src=\"./js/login.js\"></script>\r\n    //     <a href=\"#\" class=\"forgot-password\">\r\n    //       Forgot the password?\r\n    //     </a>\r\n    //   </div>\r\n    // </div>\r\n  );\r\n}\r\n\r\nLoginPage.propTypes = {\r\n  account: PropTypes.object,\r\n  emailMessages: PropTypes.object,\r\n  error: PropTypes.string,\r\n  idToken: PropTypes.string,\r\n};\r\nexport default LoginPage;\r\n","import React from \"react\";\r\nimport { Form, Input, Button, message, Checkbox } from \"antd\";\r\nimport \"./index.scss\";\r\nimport PropTypes from \"prop-types\";\r\nimport { forgotPasswordApi } from \"../../../../api/user\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst layout = {\r\n  labelCol: { span: 8 },\r\n  wrapperCol: { span: 16 },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: { offset: 8, span: 16 },\r\n};\r\n\r\nfunction ForgotPasswordPage() {\r\n  const history = useHistory();\r\n  const onFinish = (values) => {\r\n    forgotPasswordApi(values.email)\r\n      .then(() => {\r\n        message.success(\r\n          \"Successfully! Check your email for more information!\",\r\n          9\r\n        );\r\n        history.push(\"/\");\r\n      })\r\n      .catch((error) => {\r\n        message.error(\"Error!\");\r\n        message.error(\r\n          \"Tips: Please make sure that you have entered the correct email one!\"\r\n        );\r\n        // message.error(error.data.message);\r\n        console.log(error.message);\r\n      });\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <div style={{ width: \"33%\" }}>\r\n        <Form\r\n          {...layout}\r\n          name=\"basic\"\r\n          initialValues={{ remember: true }}\r\n          onFinish={onFinish}\r\n          onFinishFailed={onFinishFailed}\r\n        >\r\n          <Form.Item\r\n            name=\"email\"\r\n            label=\"E-mail\"\r\n            rules={[\r\n              {\r\n                type: \"email\",\r\n                message: \"The input is not valid E-mail!\",\r\n              },\r\n              {\r\n                required: true,\r\n                message: \"Please input your E-mail!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item {...tailLayout}>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ForgotPasswordPage;\r\n","import React from \"react\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nHomePage.propTypes = {};\r\n\r\nfunction HomePage(props) {\r\n  return (\r\n    <div>\r\n      <Helmet>\r\n        <title>Home</title>\r\n        <meta\r\n          name=\"description\"\r\n          content=\"A very simple app for the internship program at NP\"\r\n        />\r\n      </Helmet>\r\n      Home welcome!!\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n","import React from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport { checkToken } from \"../../utils/localstorage\";\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props) =>\r\n      checkToken() !== null ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect\r\n          to={{\r\n            pathname: \"/login\",\r\n            state: { from: props.location },\r\n          }}\r\n        />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nexport default PrivateRoute;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useLocation, Link } from \"react-router-dom\";\r\nimport { Menu, Avatar, Badge } from \"antd\";\r\nimport {\r\n  UserOutlined,\r\n  VideoCameraOutlined,\r\n  CloudServerOutlined,\r\n  AuditOutlined,\r\n  CrownOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { AbilityContext } from \"permission/can\";\r\nimport { useAbility } from \"@casl/react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nMainMenu.propTypes = {};\r\n\r\nfunction MainMenu(props) {\r\n  const { username, avatar } = useSelector((state) => state.app);\r\n  const location = useLocation();\r\n  const ability = useAbility(AbilityContext);\r\n  return (\r\n    <Menu theme=\"dark\" mode=\"inline\" selectedKeys={[location.pathname]}>\r\n      {\r\n        <Menu.Item\r\n          key=\"/user-setting\"\r\n          icon={\r\n            <Avatar\r\n              style={{ marginRight: \"0.82em\" }}\r\n              icon={<UserOutlined />}\r\n              src={`${process.env.REACT_APP_BASE_URL}/api/users/${avatar}`}\r\n            />\r\n          }\r\n        >\r\n          <b>{`Hi ${username}!`}</b>\r\n          <Link to=\"/user-setting\" />\r\n        </Menu.Item>\r\n      }\r\n      {ability.can(\"access\", \"manage-user\") && (\r\n        <Menu.Item key=\"/user-management\" icon={<UserOutlined />}>\r\n          Manage User\r\n          <Link to=\"/user-management\" />\r\n        </Menu.Item>\r\n      )}\r\n      {ability.can(\"access\", \"manage-request\") && (\r\n        <Menu.Item key=\"/request-management\" icon={<AuditOutlined />}>\r\n          Manage Request\r\n          <Link to=\"/request-management\" />\r\n        </Menu.Item>\r\n      )}\r\n      {ability.can(\"access\", \"manage-server\") && (\r\n        <Menu.Item key=\"/server-management\" icon={<CloudServerOutlined />}>\r\n          Manage Server\r\n          <Link to=\"/server-management\" />\r\n        </Menu.Item>\r\n      )}\r\n      {ability.can(\"access\", \"manage-customer\") && (\r\n        <Menu.Item key=\"/customer-management\" icon={<CrownOutlined />}>\r\n          Manage Customer\r\n          <Link to=\"/customer-management\" />\r\n        </Menu.Item>\r\n      )}\r\n    </Menu>\r\n  );\r\n}\r\n\r\nexport default MainMenu;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Spin } from 'antd';\r\n\r\nimport './index.scss';\r\n\r\nLoading.propTypes = {};\r\n\r\nfunction Loading(props) {\r\n  return (\r\n    <div className=\"loading-container\">\r\n      <Spin size=\"large\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Loading;\r\n","import { configureStore, combineReducers } from \"@reduxjs/toolkit\";\r\nimport appReducer from \"features/App/slice\";\r\n\r\nfunction createReducer(asyncReducers) {\r\n  return combineReducers({\r\n    app: appReducer,\r\n    ...asyncReducers,\r\n  });\r\n}\r\n\r\nconst store = configureStore({\r\n  reducer: createReducer(),\r\n  devTools: true,\r\n});\r\n\r\nexport function configureAppStore() {\r\n  store.asyncReducers = {};\r\n  store.injectReducer = (key, asyncReducer) => {\r\n    store.asyncReducers[key] = asyncReducer;\r\n    store.replaceReducer(createReducer(store.asyncReducers));\r\n  };\r\n  return store;\r\n}\r\n\r\nexport function getStore() {\r\n  return store;\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Loading from \"components/Loading\";\r\nimport axios from \"axios/auth.instance\";\r\nimport \"./index.scss\";\r\n\r\nexport const VerifyAcc = (props) => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [isSuccess, setIsSuccess] = useState(false);\r\n  useEffect(() => {\r\n    (async function () {\r\n      try {\r\n        const res = await axios.get(\r\n          `/api/users/confirm/${props.match.params.verifyToken}`\r\n        );\r\n        if (res.data.success) {\r\n          setLoading(false);\r\n          setIsSuccess(true);\r\n        } else {\r\n          setLoading(false);\r\n          setIsSuccess(false);\r\n        }\r\n      } catch (error) {\r\n        setLoading(false);\r\n        setIsSuccess(false);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <Loading />;\r\n  }\r\n  if (isSuccess) {\r\n    return (\r\n      <div>\r\n        <div\r\n          className=\"swal2-icon swal2-success swal2-animate-success-icon\"\r\n          style={{ display: \"flex\" }}\r\n        >\r\n          <div\r\n            className=\"swal2-success-circular-line-left\"\r\n            style={{ backgroundColor: \"rgb(255, 255, 255)\" }}\r\n          ></div>\r\n          <span className=\"swal2-success-line-tip\"></span>\r\n          <span className=\"swal2-success-line-long\"></span>\r\n          <div className=\"swal2-success-ring\"></div>\r\n          <div\r\n            className=\"swal2-success-fix\"\r\n            style={{ backgroundColor: \"rgb(255, 255, 255)\" }}\r\n          ></div>\r\n          <div\r\n            className=\"swal2-success-circular-line-right\"\r\n            style={{ backgroundColor: \"rgb(255, 255, 255)\" }}\r\n          ></div>\r\n        </div>\r\n        <div\r\n          style={{\r\n            width: \"100%\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-around\",\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n          }}\r\n        >\r\n          <div className=\"container\">\r\n            <div className=\"row text-center\">\r\n              <div className=\"col-sm-12 col-sm-offset-3\">\r\n                <h2 style={{ color: \"#0fad00\" }}>Success</h2>\r\n\r\n                <p style={{ fontSize: \"20px\", color: \"#5C5C5C\" }}>\r\n                  Thank you for verifying the registration. Hope our service\r\n                  will be valued to you.\r\n                </p>\r\n                <p style={{ fontSize: \"20px\", color: \"#5C5C5C\" }}>\r\n                  Please go back now and login.\r\n                </p>\r\n                <a href=\"/login\" className=\"btn btn-outline-success\">\r\n                  Log in\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div>\r\n      <div\r\n        className=\"swal2-icon swal2-error swal2-animate-error-icon\"\r\n        style={{ display: \"flex\" }}\r\n      >\r\n        <span className=\"swal2-x-mark\">\r\n          <span className=\"swal2-x-mark-line-left\"></span>\r\n          <span className=\"swal2-x-mark-line-right\"></span>\r\n        </span>\r\n      </div>\r\n      <div\r\n        style={{\r\n          width: \"100%\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"space-around\",\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n        }}\r\n      >\r\n        <div className=\"container\">\r\n          <div className=\"row text-center\">\r\n            <div\r\n              className=\"col-sm-12 col-sm-offset-3\"\r\n              style={{ alignContent: \"center\" }}\r\n            >\r\n              <h2 style={{ color: \"red\" }}>Fail</h2>\r\n\r\n              <p style={{ fontSize: \"20px\", color: \"#5C5C5C\" }}>\r\n                Something went wrong, we can not verify your account.\r\n              </p>\r\n              <p style={{ fontSize: \"20px\", color: \"#5C5C5C\" }}>\r\n                Please go back now and try again.\r\n              </p>\r\n              <a href=\"/login\" className=\"btn btn-outline-danger\">\r\n                Log in\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { Suspense, useEffect, useState } from \"react\";\r\nimport { BrowserRouter, Route, Switch, Link, Redirect } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Layout, Button, message } from \"antd\";\r\nimport { MenuUnfoldOutlined, MenuFoldOutlined } from \"@ant-design/icons\";\r\nimport \"./index.scss\";\r\nimport { checkToken } from \"utils/localstorage\";\r\nimport PropTypes from \"prop-types\";\r\nimport LoginPage from \"features/App/pages/Login\";\r\nimport ForgotPasswordPage from \"features/App/pages/ForgotPassword\";\r\nimport HomePage from \"features/App/pages/Home\";\r\nimport NotFound from \"components/NotFound\";\r\nimport PrivateRoute from \"components/PrivateRoute\";\r\nimport MainMenu from \"components/MainMenu\";\r\nimport Loading from \"components/Loading\";\r\nimport { getStore } from \"store\";\r\nimport { login, onLogout } from \"./slice\";\r\nimport { AbilityContext } from \"permission/can\";\r\nimport { useAbility } from \"@casl/react\";\r\nimport { VerifyAcc } from \"./pages/VerifyScreen\";\r\nimport { setua } from \"features/App/slice\";\r\nimport { getAccountDetailApi } from \"api/user\";\r\n\r\nconst store = getStore();\r\nconst { Header, Content, Sider } = Layout;\r\n\r\nconst ManageUser = React.lazy(() =>\r\n  import(\"features/ManageUser\").then(async (module) => {\r\n    const reducer = await import(\"features/ManageUser/slice\").then(\r\n      (slide) => slide.default\r\n    );\r\n    store.injectReducer(\"userManagement\", reducer);\r\n    return module;\r\n  })\r\n);\r\n\r\nconst UserSetting = React.lazy(() =>\r\n  import(\"features/UserSetting\").then(async (module) => {\r\n    const reducer = await import(\"features/UserSetting/slice\").then(\r\n      (slide) => slide.default\r\n    );\r\n    store.injectReducer(\"userSetting\", reducer);\r\n    return module;\r\n  })\r\n);\r\n\r\nconst ManageRequest = React.lazy(() =>\r\n  import(\"features/ManageRequest\").then(async (module) => {\r\n    const reducer = await import(\"features/ManageRequest/slice\").then(\r\n      (slide) => slide.default\r\n    );\r\n    store.injectReducer(\"requestManagement\", reducer);\r\n    return module;\r\n  })\r\n);\r\n\r\nconst ManageServer = React.lazy(() =>\r\n  import(\"features/ManageServer\").then(async (module) => {\r\n    const reducer = await import(\"features/ManageServer/slice\").then(\r\n      (slide) => slide.default\r\n    );\r\n    store.injectReducer(\"serverManagement\", reducer);\r\n    return module;\r\n  })\r\n);\r\n\r\nconst ManageCustomer = React.lazy(() =>\r\n  import(\"features/ManageCustomer\").then(async (module) => {\r\n    const reducer = await import(\"features/ManageCustomer/slice\").then(\r\n      (slide) => slide.default\r\n    );\r\n    store.injectReducer(\"customerManagement\", reducer);\r\n    return module;\r\n  })\r\n);\r\n\r\nfunction App(props) {\r\n  const dispatch = useDispatch();\r\n  const { loading } = useSelector((state) => state.app);\r\n  const [collapsed, setCollapsed] = useState(false);\r\n  const ability = useAbility(AbilityContext);\r\n\r\n  useEffect(() => {\r\n    const token = checkToken();\r\n    const role = localStorage.getItem(\"role\");\r\n    const userId = localStorage.getItem(\"userId\");\r\n    if (token)\r\n      dispatch(login({ access_token: token, role: role, userId: userId }));\r\n    getAccountDetailApi()\r\n      .then((res) => {\r\n        dispatch(\r\n          setua({\r\n            username: res.data.UserName,\r\n            avatar: res.data.AvatarPath,\r\n          })\r\n        );\r\n      })\r\n      .catch((error) => {\r\n        handleLogout()\r\n        message.error(error.data.message);\r\n      });\r\n  });\r\n\r\n  const handleLogout = () => {\r\n    dispatch(onLogout());\r\n  };\r\n  const toggle = () => setCollapsed(!collapsed);\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <Suspense fallback={<div>Loading ...</div>}>\r\n        <Layout>\r\n          <Sider\r\n            style={{ minHeight: \"100vh\" }}\r\n            trigger={null}\r\n            collapsible\r\n\r\n            collapsed={collapsed}\r\n          >\r\n            <Link to=\"/\">\r\n              <div className=\"logo\" />\r\n            </Link>\r\n            <MainMenu />\r\n          </Sider>\r\n          <Layout className=\"site-layout\">\r\n            <Header className=\"site-layout-background\" style={{ padding: 0 }}>\r\n              {React.createElement(\r\n                collapsed ? MenuUnfoldOutlined : MenuFoldOutlined,\r\n                {\r\n                  className: \"trigger\",\r\n                  onClick: toggle,\r\n                }\r\n              )}\r\n              <Button\r\n                onClick={handleLogout}\r\n                style={{ float: \"right\", margin: 14 }}\r\n                type=\"dashed\"\r\n                danger\r\n              >\r\n                Logout\r\n              </Button>\r\n            </Header>\r\n\r\n            <Content\r\n              className=\"site-layout-background\"\r\n              style={{\r\n                margin: \"24px 16px\",\r\n                padding: 24,\r\n                minHeight: 280,\r\n              }}\r\n            >\r\n              <Switch>\r\n                {ability.can(\"access\", \"manage-user\") && (\r\n                  <PrivateRoute\r\n                    path=\"/user-management\"\r\n                    component={ManageUser}\r\n                  />\r\n                )}\r\n                {<PrivateRoute path=\"/user-setting\" component={UserSetting} />}\r\n\r\n                {ability.can(\"access\", \"manage-request\") && (\r\n                  <PrivateRoute\r\n                    path=\"/request-management\"\r\n                    component={ManageRequest}\r\n                  />\r\n                )}\r\n                {ability.can(\"access\", \"manage-server\") && (\r\n                  <PrivateRoute\r\n                    path=\"/server-management\"\r\n                    component={ManageServer}\r\n                  />\r\n                )}\r\n                {ability.can(\"access\", \"manage-customer\") && (\r\n                  <PrivateRoute\r\n                    path=\"/customer-management\"\r\n                    component={ManageCustomer}\r\n                  />\r\n                )}\r\n                <PrivateRoute path=\"/\" exact component={HomePage} />\r\n                <Route component={NotFound} />\r\n              </Switch>\r\n            </Content>\r\n          </Layout>\r\n        </Layout>\r\n      </Suspense>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Router(props) {\r\n  const { loading } = useSelector((state) => state.app);\r\n  return (\r\n    <Suspense fallback={<div>Loading ...</div>}>\r\n      {loading && <Loading />}\r\n      <BrowserRouter>\r\n        <Switch>\r\n          <Route exact path=\"/login\" component={LoginPage} />\r\n          <Route exact path=\"/forgotpassword\" component={ForgotPasswordPage} />\r\n          <Route path=\"/confirm/:verifyToken\" component={VerifyAcc} />\r\n          <PrivateRoute path=\"/\" component={App} />\r\n\r\n          <Route component={NotFound} />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </Suspense>\r\n  );\r\n}\r\n\r\nexport default Router;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { Ability, AbilityBuilder } from \"@casl/ability\";\r\nimport { getStore } from \"store\";\r\n\r\nconst store = getStore();\r\n// Defines how to detect object's type\r\nfunction subjectName(item) {\r\n  if (!item || typeof item === \"string\") {\r\n    return item;\r\n  }\r\n  return item.__type;\r\n}\r\n\r\nconst ability = new Ability([], { subjectName });\r\n\r\nlet currentAuth;\r\nstore.subscribe(() => {\r\n  const prevAuth = currentAuth;\r\n  currentAuth = store.getState().app.role;\r\n  if (prevAuth !== currentAuth) {\r\n    ability.update(defineRulesFor(currentAuth));\r\n  }\r\n});\r\n\r\nfunction defineRulesFor(auth) {\r\n  const { can, rules } = new AbilityBuilder();\r\n  if (auth === \"admin\") {\r\n    can(\"access\", \"manage-user\");\r\n    can(\"access\", \"manage-request\");\r\n    can(\"access\", \"manage-server\");\r\n    can(\"access\", \"manage-customer\");\r\n    can(\"approve-cancel\", \"request\");\r\n    can(\"export\", \"request\");\r\n  } else if (auth === \"normal-user\") {\r\n    can(\"access\", \"manage-request\");\r\n  } else if (auth === \"dc-member\") {\r\n    can(\"access\", \"manage-request\");\r\n    can(\"access\", \"manage-server\");\r\n    can(\"approve-cancel\", \"request\");\r\n    can(\"export\", \"request\");\r\n  } else if (auth === \"contact-point\") {\r\n    can(\"access\", \"manage-customer\");\r\n    can(\"access\", \"manage-request\");\r\n  }\r\n  return rules;\r\n}\r\n\r\nexport default ability;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { HelmetProvider } from \"react-helmet-async\";\r\nimport { Provider } from \"react-redux\";\r\nimport App from \"features/App\";\r\n\r\nimport \"./index.scss\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { configureAppStore } from \"./store\";\r\nimport { AbilityContext } from \"permission/can\";\r\nimport ability from \"permission/ability\";\r\nrequire(\"dotenv\").config();\r\nReactDOM.render(\r\n  <Provider store={configureAppStore()}>\r\n    <HelmetProvider>\r\n      <AbilityContext.Provider value={ability}>\r\n        <App />\r\n      </AbilityContext.Provider>\r\n    </HelmetProvider>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import axios from \"axios\";\r\nimport { checkToken } from \"utils/localstorage\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: process.env.REACT_APP_BASE_URL,\r\n});\r\n\r\ninstance.interceptors.request.use(\r\n  (req) => {\r\n    const token = checkToken();\r\n    // console.log(\"token\", token);\r\n    // console.log(token);\r\n    req.headers.Authorization = \"Bearer \" + token;\r\n    return req;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\ninstance.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default instance;\r\n","export function deleteAccessToken() {\r\n  localStorage.removeItem(\"token\");\r\n}\r\n\r\nexport function deleteAllLocalStorageItem() {\r\n  localStorage.clear();\r\n}\r\n\r\nexport function setAccessToken(token) {\r\n  setLocalStorageItem(\"token\", token);\r\n}\r\n\r\nexport function setLocalStorageItem(name, value) {\r\n  localStorage.setItem(name, value);\r\n}\r\n\r\nexport function getLocalStorageItem(name) {\r\n  localStorage.getItem(name);\r\n}\r\n\r\nexport function checkToken() {\r\n  const token = localStorage.getItem(\"token\");\r\n  if (token !== \"\") {\r\n    return token;\r\n  }\r\n  return null;\r\n}\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport {\r\n  setAccessToken,\r\n  setLocalStorageItem,\r\n  deleteAllLocalStorageItem,\r\n} from \"utils/localstorage\";\r\nimport { loginApi } from \"api/authentication\";\r\n\r\nconst initialState = {\r\n  userInfo: {\r\n    exp: null,\r\n    fullName: null,\r\n    email: null,\r\n  },\r\n  role: null,\r\n  token: null,\r\n  loading: false,\r\n  userId: null,\r\n  username: null,\r\n  avatar: null,\r\n};\r\n\r\nconst slice = createSlice({\r\n  name: \"app\",\r\n  initialState,\r\n  reducers: {\r\n    login(state, action) {\r\n      state.token = action.payload.access_token;\r\n      state.role = action.payload.role;\r\n      state.userId = action.payload.userId;\r\n    },\r\n    logout(state, action) {\r\n      state.token = null;\r\n      state.userInfo = initialState.userInfo;\r\n    },\r\n    loading(state, action) {\r\n      state.loading = true;\r\n    },\r\n    stopLoading(state, action) {\r\n      state.loading = false;\r\n    },\r\n    setua(state, action) {\r\n      state.username = action.payload.username;\r\n      state.avatar = action.payload.avatar;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { login, logout, loading, stopLoading, setua } = slice.actions;\r\nexport default slice.reducer;\r\n\r\nexport const onLogout = () => (dispatch) => {\r\n  dispatch(loading());\r\n  deleteAllLocalStorageItem();\r\n  dispatch(logout());\r\n  dispatch(stopLoading());\r\n};\r\n\r\nexport const onLogin = (username, password) => (dispatch) => {\r\n  return new Promise((resolve, reject) => {\r\n    dispatch(loading());\r\n    return loginApi(username, password)\r\n      .then((res) => {\r\n        const { access_token, role, userId } = res;\r\n        dispatch(\r\n          login({ access_token: access_token, role: role, userId: userId })\r\n        );\r\n        setAccessToken(access_token);\r\n        setLocalStorageItem(\"role\", role);\r\n        setLocalStorageItem(\"userId\", userId);\r\n        resolve();\r\n      })\r\n      .catch((error) => {\r\n        reject(error);\r\n      })\r\n      .finally(() => {\r\n        dispatch(stopLoading());\r\n      });\r\n  });\r\n};\r\n","import axios from \"axios/auth.instance\";\r\n\r\nexport const loginApi = (username, password) => {\r\n  return new Promise((resolve, reject) => {\r\n    return axios\r\n      .post(\"/auth/login\", {\r\n        username: username,\r\n        password: password,\r\n      })\r\n      .then((res) => {\r\n        resolve(res.data);\r\n      })\r\n      .catch((error) => {\r\n        reject(error);\r\n      });\r\n  });\r\n};\r\n\r\n","import { createContext } from \"react\";\r\nimport { createContextualCan } from \"@casl/react\";\r\n\r\nexport const AbilityContext = createContext();\r\nexport const Can = createContextualCan(AbilityContext.Consumer);\r\n","import axios from \"axios/auth.instance\";\r\nimport { checkToken } from \"utils/localstorage\";\r\n\r\nexport const listUserApi = () => {\r\n  return new Promise((resolve, reject) => {\r\n    return axios({\r\n      method: \"get\",\r\n      url: \"/unknown\",\r\n    })\r\n      .then((res) => {\r\n        resolve(res.data);\r\n      })\r\n      .catch((error) => {\r\n        reject(error.response);\r\n      });\r\n  });\r\n};\r\n\r\nexport const getUsersApi = (data) => {\r\n  return new Promise((resolve, reject) => {\r\n    const token = checkToken();\r\n    console.log(\"data: \", data);\r\n    console.log(\"check token get userAPI\", token);\r\n    return axios\r\n      .get(\"/api/users/list\", { params: data })\r\n      .then((res) => {\r\n        resolve(res);\r\n      })\r\n      .catch((error) => {\r\n        reject(error.response);\r\n      });\r\n  });\r\n};\r\n\r\nexport const getAccountDetailApi = () => {\r\n  return new Promise((resolve, reject) => {\r\n    const token = checkToken();\r\n    console.log(\"check token get userAPI\", token);\r\n    return axios\r\n      .get(\"/api/users/profile\")\r\n      .then((res) => {\r\n        console.log(\"res\", res);\r\n        resolve(res);\r\n      })\r\n      .catch((error) => {\r\n        reject(error.response);\r\n      });\r\n  });\r\n};\r\n\r\nexport const deleteUsersApi = (data) => {\r\n  return new Promise((resolve, reject) => {\r\n    return axios\r\n      .delete(\"/api/users/\" + data)\r\n      .then((res) => {\r\n        resolve(res);\r\n      })\r\n      .catch((error) => {\r\n        reject(error.response);\r\n      });\r\n  });\r\n};\r\n\r\nexport const insertUsersApi = (data) => {\r\n  return new Promise((resolve, reject) => {\r\n    return axios\r\n      .post(\"/api/users/insert\", { ...data })\r\n      .then((res) => {\r\n        resolve(res);\r\n      })\r\n      .catch((error) => {\r\n        reject(error.response);\r\n      });\r\n  });\r\n};\r\n\r\nexport const updateUsersApi = (id, data) => {\r\n  return new Promise((resolve, reject) => {\r\n    console.log(\"id\", id);\r\n    console.log(\"data\", data);\r\n    return axios\r\n      .put(`/api/users/${id}`, { ...data })\r\n      .then((res) => {\r\n        resolve(res);\r\n      })\r\n      .catch((error) => {\r\n        reject(error.response);\r\n      });\r\n  });\r\n};\r\n\r\nexport const updateAccountApi = (data) => {\r\n  return new Promise((resolve, reject) => {\r\n    // console.log(\"id\", id);\r\n    console.log(\"data\", data);\r\n    return axios\r\n      .put(`/api/users/account/update`, { ...data })\r\n      .then((res) => {\r\n        resolve(res);\r\n      })\r\n      .catch((error) => {\r\n        reject(error.response);\r\n      });\r\n  });\r\n};\r\n\r\nexport const updateAccountPassApi = (data) => {\r\n  return new Promise((resolve, reject) => {\r\n    // console.log(\"id\", id);\r\n    console.log(\"data\", data);\r\n    return axios\r\n      .put(`/api/users/password/update`, { ...data })\r\n      .then((res) => {\r\n        resolve(res);\r\n      })\r\n      .catch((error) => {\r\n        reject(error.response);\r\n      });\r\n  });\r\n};\r\n\r\nexport const forgotPasswordApi = (email) => {\r\n  return new Promise((resolve, reject) => {\r\n    return axios\r\n      .get(`/api/users/forgot/${email}`)\r\n      .then((res) => {\r\n        resolve(res.data);\r\n      })\r\n      .catch((error) => {\r\n        reject(error);\r\n      });\r\n  });\r\n};\r\n\r\nexport const acdeacListUsersApi = (data) => {\r\n  console.log(\"data list\", data);\r\n  return new Promise((resolve, reject) => {\r\n    return axios\r\n      .put(`/api/users`, { ...data })\r\n      .then((res) => {\r\n        resolve(res);\r\n      })\r\n      .catch((error) => {\r\n        reject(error.response);\r\n      });\r\n  });\r\n};\r\n"],"sourceRoot":""}