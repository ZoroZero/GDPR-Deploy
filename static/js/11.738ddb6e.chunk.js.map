{"version":3,"sources":["features/ManageRequest/slice.js","api/requests.js","components/CreateRequestForm/index.js","components/RequestModal/index.js","components/ExportRequestForm/index.js","features/ManageRequest/pages/Main/index.js","components/ApproveRequestForm/index.js","components/ChangeLogBox/index.js","components/Message/index.js","components/Conversation/index.js","features/ManageRequest/pages/Detail/index.js","features/ManageRequest/index.js"],"names":["initialState","blockIds","data","pageSize","totalPage","currentPage","sortOrder","sortBy","showModal","lstServer","requestDetail","requestLogs","filterKeys","slice","createSlice","name","reducers","setFilter","state","action","payload","setData","setPagination","setSortTable","setCurrentPage","setPageSize","setModal","setListServer","setRequestDetail","actions","getListRequests","params","dispatch","Promise","resolve","reject","getListRequestApi","then","res","CurrentPage","TotalPage","catch","error","onCreateNewRequest","loading","createRequestApi","message","success","pageNumber","sortColumn","keyword","response","finally","stopLoading","getListServerOptions","getServerOptionsApi","getListUserOptions","getListUserOptionsApi","approveRequest","value","approveRequestApi","getRequestDetail","requestId","cancelRequest","cancelRequestApi","getRequestDetailApi","detail","logs","onUpdateRequest","updateRequestApi","exportRequestByServer","val","exportRequestApi","axios","get","post","put","getAllMessageApi","Option","Select","RequestForm","props","useDispatch","Form","useForm","form","useSelector","requestManagement","useState","setkeyword","endDate","setEndDate","beginDate","setBeginDate","useEffect","resetFields","request","Title","setFieldsValue","title","startDate","moment","StartDate","EndDate","server","ServerName","IpAddress","description","Description","options","filter","Server","includes","map","index","key","disable","type","style","paddingTop","onFinish","values","format","Id","layout","gutter","span","Item","label","rules","required","disabled","fontWeight","showTime","onChange","disabledDate","d","isBefore","width","isAfter","showSearch","onSearch","TextArea","autoSize","minRows","maxRows","justify","htmlType","RequestModal","onSetModal","isShow","onClick","visible","footer","onCancel","ExportRequestForm","showForm","setShowForm","approverKeyword","setApproverKeyword","requesterKeyword","setRequesterKeyword","setKeyword","userOptions","setUserOptions","length","userOptionsSelection","Email","approverOptionsSelection","RoleName","serverOptions","fromDate","toDate","csvData","fileName","wb","Sheets","XLSX","json_to_sheet","SheetNames","excelBuffer","bookType","Blob","FileSaver","exportToCSV","marginTop","mode","allowClear","columns","dataIndex","fixed","filterMultiple","filters","text","render","IsApproved","IsClosed","color","sorter","to","MainPage","app","searchKey","setSearchKey","console","log","fetchData","mergeDataColumn","status","Status","link","offset","placeholder","enterButton","trim","marginBottom","I","a","bordered","dataSource","pagination","field","order","join","scroll","x","Total","total","current","Page","PageSize","showSizeChanger","onShowSizeChange","size","ApproveRequestForm","ChangeLogBox","listCardLogs","className","UserName","UpdateTime","StatusChange","headStyle","backgroundColor","bodyStyle","height","overflowY","border","React","memo","ref","useRef","userId","msg","focus","replyMsg","ReplyMsg","User","FirstName","CreatedDate","Content","src","process","Avatar","setReplyToMsg","icon","faReply","prevProps","nextProps","ReplyId","ConversationBox","lstMsg","setLstMsg","replyToMsg","token","avatar","reverse","socket","emit","headers","Authorization","once","updateLstMsg","lstMsgCard","display","flexDirection","faTimes","autoFocus","DetailPage","match","Number","Date","toString","CreatedBy","UpdatedDate","UpdatedBy","OwnerId","Request","useRouteMatch","fallback","exact","path","url","component","NotFound"],"mappings":"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","file":"static/js/11.738ddb6e.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { loading, stopLoading } from \"features/App/slice\";\r\nimport {\r\n  getListRequestApi,\r\n  createRequestApi,\r\n  getServerOptionsApi,\r\n  approveRequestApi,\r\n  cancelRequestApi,\r\n  getRequestDetailApi,\r\n  updateRequestApi,\r\n  getListUserOptionsApi,\r\n  exportRequestApi,\r\n} from \"api/requests\";\r\nimport { message } from \"antd\";\r\n\r\nexport const initialState = {\r\n  blockIds: null,\r\n  data: [],\r\n  pageSize: 10,\r\n  totalPage: 1,\r\n  currentPage: 1,\r\n  sortOrder: \"descend\",\r\n  sortBy: \"\",\r\n  showModal: false,\r\n  lstServer: [],\r\n  requestDetail: {},\r\n  requestLogs: [],\r\n  filterKeys: \"\",\r\n};\r\n\r\nconst slice = createSlice({\r\n  name: \"requestManagement\",\r\n  initialState,\r\n  reducers: {\r\n    setFilter: (state, action) => {\r\n      state.blockIds = action.payload.blockIds;\r\n    },\r\n    setData: (state, action) => {\r\n      state.data = action.payload.data;\r\n    },\r\n    setPagination: (state, action) => {\r\n      state.currentPage = action.payload.currentPage;\r\n      state.pageSize = action.payload.pageSize;\r\n      state.totalPage = action.payload.totalPage;\r\n    },\r\n    setSortTable: (state, action) => {\r\n      state.sortBy = action.payload.sortBy;\r\n      state.sortOrder = action.payload.sortOrder;\r\n      state.filterKeys = action.payload.filterKeys;\r\n    },\r\n    setCurrentPage: (state, action) => {\r\n      state.currentPage = action.payload.currentPage;\r\n    },\r\n    setPageSize: (state, action) => {\r\n      state.pageSize = action.payload.pageSize;\r\n      state.currentPage = 1;\r\n    },\r\n    setModal: (state, action) => {\r\n      state.showModal = action.payload.showModal;\r\n    },\r\n    setListServer: (state, action) => {\r\n      state.lstServer = action.payload.lstServer;\r\n    },\r\n    setRequestDetail: (state, action) => {\r\n      state.requestDetail = action.payload.requestDetail;\r\n      state.requestLogs = action.payload.requestLogs;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  setFilter,\r\n  setData,\r\n  setPagination,\r\n  setSortTable,\r\n  setCurrentPage,\r\n  setPageSize,\r\n  setModal,\r\n  setListServer,\r\n  setRequestDetail,\r\n} = slice.actions;\r\nexport default slice.reducer;\r\n\r\nexport const getListRequests = (params = {}) => (dispatch) => {\r\n  return new Promise((resolve, reject) => {\r\n    return getListRequestApi(params)\r\n      .then((res) => {\r\n        dispatch(\r\n          setPagination({\r\n            currentPage: res.CurrentPage,\r\n            pageSize: params.pageSize,\r\n            totalPage: res.TotalPage,\r\n          })\r\n        );\r\n        dispatch(setData({ data: res.data }));\r\n        resolve();\r\n      })\r\n      .catch((error) => {\r\n        reject(error);\r\n      });\r\n  });\r\n};\r\n\r\nexport const onCreateNewRequest = (data = {}) => (dispatch) => {\r\n  return new Promise((resolve, reject) => {\r\n    dispatch(loading());\r\n    return createRequestApi(data)\r\n      .then((res) => {\r\n        message.success(\"success\");\r\n        dispatch(setModal({ showModal: false }));\r\n        dispatch(\r\n          getListRequests({\r\n            pageSize: initialState.pageSize,\r\n            pageNumber: initialState.currentPage,\r\n            sortColumn: initialState.sortBy,\r\n            sortOrder: initialState.sortOrder,\r\n            keyword: \"\",\r\n          })\r\n        );\r\n        resolve(res);\r\n      })\r\n      .catch((error) => {\r\n        message.error(error.response.data.message);\r\n        reject(error);\r\n      })\r\n      .finally(() => {\r\n        dispatch(stopLoading());\r\n      });\r\n  });\r\n};\r\n\r\nexport const getListServerOptions = () => (dispatch) => {\r\n  return new Promise((resolve, reject) => {\r\n    return getServerOptionsApi()\r\n      .then((res) => {\r\n        dispatch(setListServer({ lstServer: res.data.data }));\r\n        resolve(res);\r\n      })\r\n      .catch((error) => {\r\n        reject(error);\r\n      });\r\n  });\r\n};\r\n\r\nexport const getListUserOptions = () => {\r\n  return new Promise((resolve, reject) => {\r\n    return getListUserOptionsApi()\r\n      .then((res) => {\r\n        resolve(res);\r\n      })\r\n      .catch((error) => {\r\n        reject(error);\r\n      });\r\n  });\r\n};\r\n\r\nexport const approveRequest = (value) => (dispatch) => {\r\n  return new Promise((resolve, reject) => {\r\n    dispatch(loading());\r\n    return approveRequestApi(value)\r\n      .then((res) => {\r\n        message.success(\"success\");\r\n        dispatch(getRequestDetail(value.requestId));\r\n        resolve();\r\n      })\r\n      .catch((error) => {\r\n        message.error(error.response.data.message);\r\n        reject(error);\r\n      })\r\n      .finally(() => {\r\n        dispatch(stopLoading());\r\n      });\r\n  });\r\n};\r\n\r\nexport const cancelRequest = (value) => (dispatch) => {\r\n  return new Promise((resolve, reject) => {\r\n    dispatch(loading());\r\n    return cancelRequestApi(value)\r\n      .then((res) => {\r\n        message.success(\"success\");\r\n        dispatch(getRequestDetail(value.requestId));\r\n        resolve();\r\n      })\r\n      .catch((error) => {\r\n        message.error(error.response.data.message);\r\n        reject(error);\r\n      })\r\n      .finally(() => {\r\n        dispatch(stopLoading());\r\n      });\r\n  });\r\n};\r\n\r\nexport const getRequestDetail = (value) => (dispatch) => {\r\n  return new Promise((resolve, reject) => {\r\n    return getRequestDetailApi(value)\r\n      .then((res) => {\r\n        if (res.data) {\r\n          dispatch(\r\n            setRequestDetail({\r\n              requestDetail: res.data.detail,\r\n              requestLogs: res.data.logs,\r\n            })\r\n          );\r\n        }\r\n        resolve();\r\n      })\r\n      .catch((error) => {\r\n        reject(error);\r\n      });\r\n  });\r\n};\r\n\r\nexport const onUpdateRequest = (value, requestId) => (dispatch) => {\r\n  return new Promise((resolve, reject) => {\r\n    dispatch(loading());\r\n    return updateRequestApi(value, requestId)\r\n      .then((res) => {\r\n        dispatch(getRequestDetail(requestId));\r\n        message.success(\"success\");\r\n        resolve();\r\n      })\r\n      .catch((error) => {\r\n        message.error(error.response.data.message);\r\n        reject(error);\r\n      })\r\n      .finally(() => {\r\n        dispatch(stopLoading());\r\n      });\r\n  });\r\n};\r\n\r\nexport const exportRequestByServer = (val) => (dispatch) => {\r\n  return new Promise((resolve, reject) => {\r\n    return exportRequestApi(val)\r\n      .then((res) => {\r\n        message.success(\"success\");\r\n        resolve(res);\r\n      })\r\n      .catch((error) => {\r\n        message.error(\"fail\");\r\n        reject(error);\r\n      });\r\n  });\r\n};\r\n","import axios from \"axios/auth.instance\";\r\n\r\nexport const getListRequestApi = (params = {}) => {\r\n  //   console.log(params);\r\n  return new Promise((resolve, reject) => {\r\n    return axios\r\n      .get(\"/api/requests\", { params: params })\r\n      .then((res) => {\r\n        resolve(res.data);\r\n      })\r\n      .catch((error) => {\r\n        reject(error);\r\n      });\r\n  });\r\n};\r\n\r\nexport const createRequestApi = (data) => {\r\n  return new Promise((resolve, reject) => {\r\n    return axios\r\n      .post(\"/api/requests\", data)\r\n      .then((res) => {\r\n        resolve(res);\r\n      })\r\n      .catch((error) => {\r\n        reject(error);\r\n      });\r\n  });\r\n};\r\n\r\nexport const getServerOptionsApi = () => {\r\n  return new Promise((resolve, reject) => {\r\n    return axios\r\n      .get(\"/api/servers/active\")\r\n      .then((res) => {\r\n        resolve(res);\r\n      })\r\n      .catch((error) => {\r\n        reject(error);\r\n      });\r\n  });\r\n};\r\n\r\nexport const approveRequestApi = (value) => {\r\n  return new Promise((resolve, reject) => {\r\n    return axios\r\n      .put(\"/api/requests/approve-request\", value)\r\n      .then((res) => {\r\n        resolve(res);\r\n      })\r\n      .catch((error) => {\r\n        reject(error);\r\n      });\r\n  });\r\n};\r\n\r\nexport const cancelRequestApi = (value) => {\r\n  return new Promise((resolve, reject) => {\r\n    return axios\r\n      .put(\"/api/requests/cancel-request\", value)\r\n      .then((res) => {\r\n        resolve(res);\r\n      })\r\n      .catch((error) => {\r\n        reject(error);\r\n      });\r\n  });\r\n};\r\n\r\nexport const updateRequestApi = (value, requestId) => {\r\n  return new Promise((resolve, reject) => {\r\n    return axios\r\n      .put(`/api/requests/${requestId}`, value)\r\n      .then((res) => {\r\n        resolve(res);\r\n      })\r\n      .catch((error) => {\r\n        reject(error);\r\n      });\r\n  });\r\n};\r\n\r\nexport const getRequestDetailApi = (value) => {\r\n  return new Promise((resolve, reject) => {\r\n    return axios\r\n      .get(`/api/requests/${value}`)\r\n      .then((res) => {\r\n        resolve(res);\r\n      })\r\n      .catch((error) => {\r\n        reject(error);\r\n      });\r\n  });\r\n};\r\n\r\nexport const getListUserOptionsApi = () => {\r\n  return new Promise((resolve, reject) => {\r\n    return axios\r\n      .get(\"/api/users/listall\")\r\n      .then((res) => {\r\n        resolve(res);\r\n      })\r\n      .catch((error) => {\r\n        reject(error);\r\n      });\r\n  });\r\n};\r\n\r\nexport const exportRequestApi = (val) => {\r\n  return new Promise((resolve, reject) => {\r\n    return axios\r\n      .post(\"/api/requests/export-request\", val)\r\n      .then((res) => {\r\n        resolve(res);\r\n      })\r\n      .catch((error) => {\r\n        reject(error);\r\n      });\r\n  });\r\n};\r\n\r\nexport const getAllMessageApi = (requestId) => {\r\n  return new Promise((resolve, reject) => {\r\n    return axios\r\n      .get(`/api/messages/by-request/${requestId}`)\r\n      .then((res) => {\r\n        resolve(res);\r\n      })\r\n      .catch((error) => {\r\n        reject(error);\r\n      });\r\n  });\r\n};\r\n\r\nexport const getRepliedMsgApi = (msgId) => {\r\n  return new Promise((resolve, reject) => {\r\n    return axios\r\n      .get(`/api/messages/${msgId}`)\r\n      .then((res) => {\r\n        resolve(res);\r\n      })\r\n      .catch((error) => {\r\n        reject(error);\r\n      });\r\n  });\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Form,\r\n  Input,\r\n  DatePicker,\r\n  TimePicker,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Select,\r\n} from \"antd\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  onCreateNewRequest,\r\n  getListServerOptions,\r\n  onUpdateRequest,\r\n} from \"features/ManageRequest/slice\";\r\nimport moment from \"moment\";\r\n\r\nconst { Option } = Select;\r\n\r\nconst RequestForm = (props) => {\r\n  const dispatch = useDispatch();\r\n  const [form] = Form.useForm();\r\n  const { showModal, lstServer } = useSelector(\r\n    (state) => state.requestManagement\r\n  );\r\n  const [keyword, setkeyword] = useState(\"\");\r\n  const [endDate, setEndDate] = useState();\r\n  const [beginDate, setBeginDate] = useState();\r\n\r\n  useEffect(() => {\r\n    form.resetFields();\r\n  }, [showModal]);\r\n\r\n  useEffect(() => {\r\n    dispatch(getListServerOptions());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (props.request && props.request.Title) {\r\n      form.setFieldsValue({\r\n        title: props.request.Title,\r\n        startDate: moment(props.request.StartDate),\r\n        endDate: moment(props.request.EndDate),\r\n        server: props.request.ServerName + \"-\" + props.request.IpAddress,\r\n        description: props.request.Description,\r\n      });\r\n    }\r\n  }, [props.request]);\r\n\r\n  function onSubmitForm(values) {\r\n    const data = {\r\n      ...values,\r\n      startDate: values.startDate.format(\"YYYY-MM-DD hh:mm:ss\"),\r\n      endDate: values.endDate.format(\"YYYY-MM-DD hh:mm:ss\"),\r\n    };\r\n    if (props.type === \"update\")\r\n      dispatch(onUpdateRequest(data, props.request.Id));\r\n    else dispatch(onCreateNewRequest(data));\r\n  }\r\n\r\n  function onSearchServer(value) {\r\n    setkeyword(value);\r\n  }\r\n\r\n  const options = lstServer\r\n    .filter((value) => value.Server.includes(keyword))\r\n    .map((value, index) => {\r\n      return (\r\n        <Option value={value.Server} key={value.Server}>\r\n          {value.Server}\r\n        </Option>\r\n      );\r\n    });\r\n\r\n  const disable = props.disable && props.type !== \"new\";\r\n  return (\r\n    <>\r\n      <Form\r\n        form={form}\r\n        name=\"request-form\"\r\n        style={{ paddingTop: \"30px\" }}\r\n        onFinish={onSubmitForm}\r\n        layout=\"vertical\"\r\n      >\r\n        <Row gutter={[16, 16]}>\r\n          <Col span={24}>\r\n            <Form.Item\r\n              name=\"title\"\r\n              label=\"Title\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Please input the title!\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input disabled={disable} style={{ fontWeight: \"bold\" }} />\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n        <Row gutter={[16, 16]}>\r\n          <Col span={12}>\r\n            <Form.Item\r\n              label=\"From Date\"\r\n              name=\"startDate\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Please input start date!\",\r\n                },\r\n              ]}\r\n            >\r\n              <DatePicker\r\n                showTime\r\n                disabled={disable}\r\n                onChange={(value) => setBeginDate(value)}\r\n                disabledDate={(d) =>\r\n                  !d ||\r\n                  (endDate &&\r\n                    !d.isBefore(moment(endDate).format(\"YYYY-MM-DD HH:mm:ss\")))\r\n                }\r\n                style={{ width: \"100%\", fontWeight: \"bold\" }}\r\n              />\r\n            </Form.Item>\r\n          </Col>\r\n          <Col span={12}>\r\n            <Form.Item\r\n              label=\"To Date\"\r\n              name=\"endDate\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Please input end date!\",\r\n                },\r\n              ]}\r\n            >\r\n              <DatePicker\r\n                showTime\r\n                disabled={disable}\r\n                onChange={(value) => setEndDate(value)}\r\n                disabledDate={(d) => {\r\n                  return (\r\n                    !d ||\r\n                    (beginDate &&\r\n                      !d.isAfter(\r\n                        moment(beginDate).format(\"YYYY-MM-DD HH:mm:ss\")\r\n                      ))\r\n                  );\r\n                }}\r\n                style={{ width: \"100%\", fontWeight: \"bold\" }}\r\n              />\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n\r\n        {/* <Row gutter={[16, 16]}>\r\n          \r\n        </Row> */}\r\n        <Row gutter={[16, 16]}>\r\n          <Col span={24}>\r\n            <Form.Item\r\n              name=\"server\"\r\n              label=\"Server\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Please input the valid server info!\",\r\n                },\r\n              ]}\r\n            >\r\n              <Select\r\n                showSearch\r\n                onSearch={onSearchServer}\r\n                disabled={disable}\r\n                style={{ fontWeight: \"bold\" }}\r\n              >\r\n                {options}\r\n              </Select>\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n        <Row gutter={[16, 16]}>\r\n          <Col span={24}>\r\n            <Form.Item\r\n              name=\"description\"\r\n              label=\"Description\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Please input some description!\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input.TextArea\r\n                autoSize={{ minRows: 3, maxRows: 5 }}\r\n                disabled={disable}\r\n                style={{ fontWeight: \"bold\" }}\r\n              />\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n        <Row gutter={[16, 16]} justify=\"center\">\r\n          <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\" disabled={disable}>\r\n              Submit\r\n            </Button>\r\n          </Form.Item>\r\n        </Row>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RequestForm;\r\n","import React from \"react\";\r\nimport { Button, Modal, Row } from \"antd\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { setModal } from \"features/ManageRequest/slice\";\r\nimport RequestForm from \"components/CreateRequestForm\";\r\n\r\nconst RequestModal = (props) => {\r\n  const dispatch = useDispatch();\r\n  const { showModal } = useSelector((state) => state.requestManagement);\r\n\r\n  function onSetModal(isShow) {\r\n    dispatch(setModal({ showModal: isShow }));\r\n  }\r\n  return (\r\n    <>\r\n      <Button\r\n        type=\"primary\"\r\n        onClick={() => onSetModal(true)}\r\n        style={{ width: \"300px\" }}\r\n      >\r\n        Create new request\r\n      </Button>\r\n      <Modal\r\n        visible={showModal}\r\n        footer={null}\r\n        onCancel={() => onSetModal(false)}\r\n      >\r\n        <Row justify=\"center\">\r\n          <h2>Create new request</h2>\r\n        </Row>\r\n        <RequestForm />\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RequestModal;\r\n","import { Form, Button, Col, Row, DatePicker, Select } from \"antd\";\r\nimport {\r\n  getListServerOptions,\r\n  getListUserOptions,\r\n  exportRequestByServer,\r\n} from \"features/ManageRequest/slice\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport * as FileSaver from \"file-saver\";\r\nimport * as XLSX from \"xlsx\";\r\n\r\nconst { Option } = Select;\r\n\r\nconst ExportRequestForm = (props) => {\r\n  const dispatch = useDispatch();\r\n  const [showForm, setShowForm] = useState(false);\r\n  const [approverKeyword, setApproverKeyword] = useState(\"\");\r\n  const [requesterKeyword, setRequesterKeyword] = useState(\"\");\r\n  const [keyword, setKeyword] = useState(\"\");\r\n  const [userOptions, setUserOptions] = useState([]);\r\n  const { lstServer } = useSelector((state) => state.requestManagement);\r\n  const fileType =\r\n    \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\r\n  const fileExtension = \".xlsx\";\r\n\r\n  const [form] = Form.useForm();\r\n\r\n  function exportToCSV(csvData, fileName) {\r\n    const ws = XLSX.utils.json_to_sheet(csvData);\r\n    const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\r\n    const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\r\n    const data = new Blob([excelBuffer], { type: fileType });\r\n    FileSaver.saveAs(data, fileName + fileExtension);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (lstServer.length <= 0) dispatch(getListServerOptions());\r\n    getListUserOptions().then((res) => {\r\n      setUserOptions(res.data);\r\n    });\r\n  }, []);\r\n\r\n  function onSubmit(value) {\r\n    let fromDate, toDate;\r\n    if (value.fromDate) {\r\n      fromDate = value.fromDate.format(\"YYYY-MM-DD hh:mm:ss\");\r\n    }\r\n    if (value.toDate) {\r\n      toDate = value.toDate.format(\"YYYY-MM-DD hh:mm:ss\");\r\n    }\r\n    dispatch(\r\n      exportRequestByServer({\r\n        ...value,\r\n        fromDate: fromDate,\r\n        toDate: toDate,\r\n      })\r\n    ).then((res) => {\r\n      exportToCSV(res.data, \"RequestFile\");\r\n      form.resetFields();\r\n    });\r\n  }\r\n  function onSearchRequester(keyword) {\r\n    setRequesterKeyword(keyword);\r\n  }\r\n  function onSearchApprover(keyword) {\r\n    setApproverKeyword(keyword);\r\n  }\r\n  function onSearchServer(keyword) {\r\n    setKeyword(keyword);\r\n  }\r\n\r\n  var userOptionsSelection = userOptions\r\n    .filter((val, index) => val.Email.includes(requesterKeyword))\r\n    .map((value, index) => {\r\n      return (\r\n        <Option value={value.Id} key={value.Id}>\r\n          {value.Email}\r\n        </Option>\r\n      );\r\n    });\r\n  var approverOptionsSelection = userOptions\r\n    .filter(\r\n      (val, index) =>\r\n        [\"admin\", \"dc-member\"].includes(val.RoleName) &&\r\n        val.Email.includes(approverKeyword)\r\n    )\r\n    .map((value, index) => {\r\n      return (\r\n        <Option value={value.Id} key={value.Id}>\r\n          {value.Email}\r\n        </Option>\r\n      );\r\n    });\r\n  var serverOptions = lstServer\r\n    .filter((value) => value.Server.includes(keyword))\r\n    .map((value, index) => {\r\n      return (\r\n        <Option value={value.Server} key={value.Server}>\r\n          {value.Server}\r\n        </Option>\r\n      );\r\n    });\r\n  return (\r\n    <>\r\n      <Button onClick={() => setShowForm(!showForm)} style={{ width: \"300px\" }}>\r\n        Export requests by server\r\n      </Button>\r\n      {showForm && (\r\n        <Form\r\n          form={form}\r\n          onFinish={onSubmit}\r\n          style={{ marginTop: \"20px\" }}\r\n          layout=\"vertical\"\r\n        >\r\n          <Row gutter={[16, 16]}>\r\n            <Col span={6}>\r\n              <Form.Item label=\"From Date\" name=\"fromDate\">\r\n                <DatePicker style={{ width: \"100%\" }} />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={6}>\r\n              <Form.Item label=\"To Date\" name=\"toDate\">\r\n                <DatePicker style={{ width: \"100%\" }} />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={6}>\r\n              <Form.Item label=\"Requester\" name=\"createdBy\">\r\n                <Select\r\n                  showSearch\r\n                  onSearch={onSearchRequester}\r\n                  mode=\"multiple\"\r\n                  allowClear\r\n                >\r\n                  {userOptionsSelection}\r\n                </Select>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={6}>\r\n              <Form.Item label=\"Approver\" name=\"approvedBy\">\r\n                <Select\r\n                  showSearch\r\n                  onSearch={onSearchApprover}\r\n                  mode=\"multiple\"\r\n                  allowClear\r\n                >\r\n                  {approverOptionsSelection}\r\n                </Select>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Form.Item label=\"Server\" name=\"server\">\r\n                <Select\r\n                  showSearch\r\n                  onSearch={onSearchServer}\r\n                  mode=\"multiple\"\r\n                  allowClear\r\n                >\r\n                  {serverOptions}\r\n                </Select>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={[16, 16]}>\r\n            <Form.Item>\r\n              <Button htmlType=\"submit\" type=\"primary\">\r\n                Export\r\n              </Button>\r\n            </Form.Item>\r\n          </Row>\r\n        </Form>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ExportRequestForm;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Table, Button, Pagination, Row, Col, Modal, Tag } from \"antd\";\r\nimport \"./index.scss\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  getListRequests,\r\n  setSortTable,\r\n  setPageSize,\r\n  setCurrentPage,\r\n} from \"../../slice\";\r\nimport Search from \"antd/lib/input/Search\";\r\nimport CreateRequestForm from \"components/RequestModal\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ExportRequestForm from \"components/ExportRequestForm\";\r\nimport { Can } from \"permission/can\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Number\",\r\n    width: \"5%\",\r\n    dataIndex: \"Number\",\r\n    key: \"number\",\r\n    fixed: \"left\",\r\n  },\r\n  {\r\n    title: \"Status\",\r\n    width: \"5%\",\r\n    dataIndex: \"Status\",\r\n    key: \"status\",\r\n    // fixed: \"left\",\r\n    filterMultiple: false,\r\n    filters: [\r\n      { text: \"pending\", value: \"pending\" },\r\n      { text: \"approved\", value: \"approved\" },\r\n      { text: \"closed\", value: \"closed\" },\r\n    ],\r\n    render: (data) =>\r\n      !data.IsApproved && !data.IsClosed ? (\r\n        <Tag color=\"blue\">Pending</Tag>\r\n      ) : data.IsClosed ? (\r\n        <Tag>Closed</Tag>\r\n      ) : (\r\n        <Tag color=\"green\">Approved</Tag>\r\n      ),\r\n  },\r\n  {\r\n    title: \"Created Date\",\r\n    width: \"12%\",\r\n    dataIndex: \"CreatedDate\",\r\n    key: \"created-date\",\r\n    sorter: true,\r\n  },\r\n  {\r\n    title: \"Updated Date\",\r\n    dataIndex: \"UpdatedDate\",\r\n    key: \"updated-date\",\r\n    width: \"12%\",\r\n    sorter: true,\r\n  },\r\n  {\r\n    title: \"Server\",\r\n    dataIndex: \"Server\",\r\n    key: \"server\",\r\n    width: \"10%\",\r\n    sorter: true,\r\n  },\r\n  {\r\n    title: \"Title\",\r\n    dataIndex: \"Title\",\r\n    key: \"title\",\r\n    width: \"30%\",\r\n    render: (data) => (\r\n      <div>\r\n        <div>\r\n          <strong>Title: </strong>\r\n          {data.Title}\r\n        </div>\r\n        <div>\r\n          <strong>Description: </strong>\r\n          {data.Description}\r\n        </div>\r\n      </div>\r\n    ),\r\n  },\r\n  {\r\n    title: \"Request From\",\r\n    dataIndex: \"StartDate\",\r\n    key: \"request-from\",\r\n    width: \"10%\",\r\n    sorter: true,\r\n  },\r\n  {\r\n    title: \"Request To\",\r\n    dataIndex: \"EndDate\",\r\n    key: \"request-to\",\r\n    width: \"10%\",\r\n    sorter: true,\r\n  },\r\n  {\r\n    title: \"Action\",\r\n    key: \"operation\",\r\n    dataIndex: \"link\",\r\n    width: \"6%\",\r\n    // fixed: \"right\",\r\n    render: (data) => (\r\n      <Link to={data}>\r\n        <Button>Detail</Button>\r\n      </Link>\r\n    ),\r\n  },\r\n];\r\n\r\nconst MainPage = (props) => {\r\n  const dispatch = useDispatch();\r\n  const {\r\n    data,\r\n    currentPage,\r\n    totalPage,\r\n    pageSize,\r\n    sortBy,\r\n    sortOrder,\r\n    filterKeys,\r\n  } = useSelector((state) => state.requestManagement);\r\n  const { loading } = useSelector((state) => state.app);\r\n  const [searchKey, setSearchKey] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [currentPage, pageSize, sortBy, sortOrder, searchKey, filterKeys]);\r\n\r\n  console.log(sortBy);\r\n  function fetchData(\r\n    params = {\r\n      pageNumber: currentPage,\r\n      pageSize: pageSize,\r\n      sortColumn: sortBy,\r\n      sortOrder: sortOrder,\r\n      keyword: searchKey,\r\n      filterKeys: filterKeys,\r\n    }\r\n  ) {\r\n    console.log(params);\r\n    dispatch(getListRequests({ ...params }));\r\n  }\r\n\r\n  function onTableChange(pagination, filters, sorter) {\r\n    console.log(filters);\r\n    console.log(sorter);\r\n    dispatch(\r\n      setSortTable({\r\n        sortBy: sorter.field ? sorter.field : sortBy,\r\n        sortOrder: sorter.order ? sorter.order : sortOrder,\r\n        filterKeys: filters.status ? filters.status.join(\",\") : \"\",\r\n      })\r\n    );\r\n  }\r\n  function onPageChange(Page, PageSize) {\r\n    dispatch(setCurrentPage({ currentPage: Page }));\r\n  }\r\n  function onPageSizeChange(current, size) {\r\n    dispatch(setPageSize({ pageSize: size }));\r\n  }\r\n  function onSearch(value) {\r\n    setSearchKey(value.trim());\r\n  }\r\n\r\n  const mergeDataColumn = data.map((val, index) => {\r\n    let title = {\r\n      Title: val.Title,\r\n      Description: val.Description,\r\n    };\r\n    let status = {\r\n      IsApproved: val.IsApproved,\r\n      IsClosed: val.IsClosed,\r\n    };\r\n    return {\r\n      ...val,\r\n      Status: status,\r\n      Title: title,\r\n      key: val.Id,\r\n      link: `/request-management/${val.Id}`,\r\n    };\r\n  });\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col span={8}>\r\n          <CreateRequestForm />\r\n        </Col>\r\n        <Col span={8} offset={8}>\r\n          <Search\r\n            placeholder=\"input search text\"\r\n            enterButton\r\n            onSearch={onSearch}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row style={{ marginTop: \"10px\", marginBottom: \"10px\" }}>\r\n        <Col span={8}></Col>\r\n        <Col span={8} offset={8}>\r\n          <Can I=\"export\" a=\"request\">\r\n            <ExportRequestForm />\r\n          </Can>\r\n        </Col>\r\n      </Row>\r\n      {/* <Row gutter={[16, 16]} justify=\"center\">\r\n        <Col span={24}>\r\n          <Can I=\"export\" a=\"request\">\r\n            <Row>\r\n              <Col span={24}></Col>\r\n            </Row>\r\n          </Can>\r\n          <Row justify=\"space-between\" gutter={[16, 16]}>\r\n            <Col span={6}>\r\n              <CreateRequestForm />\r\n            </Col>\r\n            <Col span={6}></Col>\r\n          </Row> */}\r\n      <Table\r\n        bordered={true}\r\n        columns={columns}\r\n        dataSource={mergeDataColumn}\r\n        onChange={onTableChange}\r\n        pagination={false}\r\n        scroll={{ x: 1500}}\r\n      />\r\n      {/* </Col>\r\n      </Row> */}\r\n      <Row gutter={[16, 16]} justify=\"center\">\r\n        <Col>\r\n          <p>Total: {data.length > 0 ? data[0].Total : 0} items</p>\r\n        </Col>\r\n        <Col span={10}>\r\n          <Pagination\r\n            total={totalPage * pageSize}\r\n            current={currentPage}\r\n            pageSize={pageSize}\r\n            onChange={onPageChange}\r\n            showSizeChanger\r\n            onShowSizeChange={onPageSizeChange}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n","import React from \"react\";\r\nimport { Input, Form, Button, Row, Col } from \"antd\";\r\nimport { approveRequest, cancelRequest } from \"features/ManageRequest/slice\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst ApproveRequestForm = (props) => {\r\n  const dispatch = useDispatch();\r\n  const [form] = Form.useForm();\r\n  function onApprove() {\r\n    dispatch(approveRequest({ requestId: props.requestId })).then(() => {\r\n      form.resetFields();\r\n    });\r\n  }\r\n  function onCancel() {\r\n    dispatch(cancelRequest({ requestId: props.requestId })).then(() => {\r\n      form.resetFields();\r\n    });\r\n  }\r\n  return (\r\n    <>\r\n      <Form form={form}>\r\n        <Form.Item\r\n          name=\"Description\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input some description!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input.TextArea\r\n            autoSize={{ minRows: 3, maxRows: 5 }}\r\n            placeholder=\"Type the description...\"\r\n            disabled={props.IsClosed}\r\n          />\r\n        </Form.Item>\r\n        <Row>\r\n          {!props.IsApproved && !props.IsClosed ? (\r\n            <>\r\n              <Col span={4}>\r\n                <Form.Item>\r\n                  <Button type=\"primary\" onClick={onApprove}>\r\n                    Approve Request\r\n                  </Button>\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={4} offset={1}>\r\n                <Form.Item>\r\n                  <Button type=\"danger\" onClick={onCancel}>\r\n                    Cancel Request\r\n                  </Button>\r\n                </Form.Item>\r\n              </Col>\r\n            </>\r\n          ) : !props.IsClosed ? (\r\n            <Col span={4}>\r\n              <Form.Item>\r\n                <Button type=\"danger\" onClick={onCancel}>\r\n                  Cancel Request\r\n                </Button>\r\n              </Form.Item>\r\n            </Col>\r\n          ) : (\r\n            <Col span={4}>\r\n              <Form.Item>\r\n                <Button type=\"ghost\" disabled>\r\n                  Closed\r\n                </Button>\r\n              </Form.Item>\r\n            </Col>\r\n          )}\r\n        </Row>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ApproveRequestForm;\r\n","import { Card, Col, Row } from \"antd\";\r\nimport React from \"react\";\r\nimport \"./index.scss\";\r\n\r\nconst ChangeLogBox = (props) => {\r\n  const listCardLogs = props.logs.map((val, index) => {\r\n    return (\r\n      <div className=\"row\" key={val.Id}>\r\n        <div className=\"col-xs-12 col-sm-6 col-sm-offset-3\">\r\n          <div className=\"new-message-box\">\r\n            <div className=\"new-message-box-alert\">\r\n              <div className=\"info-tab tip-icon-alert\" title=\"error\">\r\n                <i></i>\r\n              </div>\r\n              <div className=\"tip-box-alert\">\r\n                <div className=\"status-header\">\r\n                  <p>{val.UserName} </p>\r\n                  <p> {val.UpdateTime}</p>\r\n                </div>\r\n                <p>{val.StatusChange}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  });\r\n  return (\r\n    <Card\r\n      title=\"Change logs\"\r\n      bordered={true}\r\n      headStyle={{ backgroundColor: \"#99ccff\", color: \"white\" }}\r\n      bodyStyle={{\r\n        height: \"450px\",\r\n        overflowY: \"auto\",\r\n        backgroundColor: \"#E7EBF0\",\r\n        border: \"1px solid #99ccff\",\r\n      }}\r\n    >\r\n      {listCardLogs}\r\n    </Card>\r\n  );\r\n};\r\nexport default ChangeLogBox;\r\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faReply } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { getRepliedMsgApi } from \"api/requests\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Message = (props) => {\r\n  const ref = useRef(null);\r\n  const { userId } = useSelector((state) => state.app);\r\n  const val = props.msg;\r\n  const [repliedMsg, setRepliedMsg] = useState(null);\r\n\r\n  // useEffect(() => {\r\n  //   if (val.ReplyId) {\r\n  //     fetchRepliedMsg(val.ReplyId);\r\n  //   }\r\n  // }, [val.ReplyId]);\r\n\r\n  // function fetchRepliedMsg(ReplyId) {\r\n  //   getRepliedMsgApi(ReplyId).then((res) => {\r\n  //     setRepliedMsg(res.data);\r\n  //   });\r\n  // }\r\n\r\n  useEffect(() => {\r\n    if (props.focus) {\r\n      ref.current.focus();\r\n    }\r\n  }, [props.focus]);\r\n\r\n  let replyMsg = null;\r\n  if (\r\n    val.ReplyMsg &&\r\n    val.ReplyMsg.Id &&\r\n    val.ReplyMsg.User &&\r\n    val.ReplyMsg.User.Id\r\n  )\r\n    replyMsg = (\r\n      <div className=\"flr\">\r\n        <span className=\"timestamp\">\r\n          <span>Reply to: </span>\r\n          <span className=\"username\">{val.ReplyMsg.User.FirstName}</span>&bull;\r\n          <span className=\"posttime\">{val.ReplyMsg.CreatedDate}</span>\r\n        </span>\r\n        <div className=\"messages\">\r\n          <p className={val.User.Id === userId ? \"msg-right\" : \"msg\"}>\r\n            {val.ReplyMsg.Content}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  function setReplyToMsg() {\r\n    if (val.ReplyMsg && val.ReplyMsg.Id) {\r\n      props.setReplyToMsg(val.ReplyMsg);\r\n    } else {\r\n      props.setReplyToMsg({\r\n        Id: val.Id,\r\n        CreatedDate: val.CreatedDate,\r\n        User: { FirstName: val.User.FirstName, Id: val.User.Id },\r\n        Content: val.Content,\r\n        Avatar: val.Avatar,\r\n      });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div ref={ref}>\r\n      <article\r\n        className={`msg-container ${\r\n          val.User.Id === userId ? \"msg-self\" : \"msg-remote\"\r\n        }`}\r\n      >\r\n        {replyMsg}\r\n        <div className=\"msg-box\">\r\n          <img\r\n            className=\"user-img\"\r\n            src={`${process.env.REACT_APP_BASE_URL}/api/users/thumbnails/${val.Avatar}`}\r\n          />\r\n          <div className=\"flr\">\r\n            <span className=\"timestamp\">\r\n              <span className=\"username\">{val.User.FirstName}</span>&bull;\r\n              <span className=\"posttime\">{val.CreatedDate}</span>\r\n            </span>\r\n            <div className=\"messages\">\r\n              <p className=\"msg\">{val.Content}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <button className=\"reply-btn\" onClick={setReplyToMsg}>\r\n          <FontAwesomeIcon icon={faReply} />\r\n        </button>\r\n      </article>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction areEqual(prevProps, nextProps) {\r\n  return (\r\n    prevProps.msg.Id === nextProps.msg.Id &&\r\n    prevProps.msg.ReplyId === nextProps.msg.ReplyId &&\r\n    prevProps.focus === nextProps.focus\r\n  );\r\n}\r\n\r\nexport default React.memo(Message, areEqual);\r\n","import { Button, Card, Form, Input, Row, Col } from \"antd\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport socket from \"socket/socket\";\r\nimport { getAllMessageApi } from \"api/requests\";\r\nimport \"./index.scss\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nimport Message from \"components/Message\";\r\n\r\nconst ConversationBox = (props) => {\r\n  const [form] = Form.useForm();\r\n  const [lstMsg, setLstMsg] = useState([]);\r\n  const [replyToMsg, setReplyToMsg] = useState(null);\r\n  const { token, userId, avatar } = useSelector((state) => state.app);\r\n\r\n  useEffect(() => {\r\n    if (props.request.Id) fetchOldMessage(props.request.Id);\r\n  }, [props.request.Id]);\r\n\r\n  useEffect(() => {\r\n    socket.emit(\"joinRoom\", {\r\n      requestId: props.request.Id,\r\n      headers: {\r\n        Authorization: token,\r\n      },\r\n    });\r\n    return () => {\r\n      socket.emit(\"leaveRoom\", {\r\n        requestId: props.request.Id,\r\n        headers: {\r\n          Authorization: token,\r\n        },\r\n      });\r\n    };\r\n  }, [props.request.Id]);\r\n\r\n  socket.once(props.request.Id, (data) => {\r\n    updateLstMsg(data);\r\n    form.resetFields();\r\n  });\r\n\r\n  function fetchOldMessage(requestId) {\r\n    getAllMessageApi(requestId)\r\n      .then((res) => {\r\n        setLstMsg(res.data.reverse());\r\n      })\r\n      .catch((error) => {});\r\n  }\r\n  function updateLstMsg(data) {\r\n    setLstMsg([data, ...lstMsg]);\r\n  }\r\n\r\n  function onSendMessage(val) {\r\n    socket.emit(\"msgToServer\", {\r\n      ...val,\r\n      requestId: props.request.Id,\r\n      ReplyId: replyToMsg ? replyToMsg.Id : null,\r\n      ReplyMsg: replyToMsg,\r\n      avatar: avatar,\r\n      headers: {\r\n        Authorization: token,\r\n      },\r\n    });\r\n  }\r\n\r\n  function setReplytoMsg(msg) {\r\n    setReplyToMsg(msg);\r\n  }\r\n\r\n  const lstMsgCard = lstMsg.map((val, index) => {\r\n    return (\r\n      <Message\r\n        msg={val}\r\n        key={val.Id}\r\n        setReplyToMsg={setReplyToMsg}\r\n        focus={index === lstMsg.length - 1}\r\n      />\r\n    );\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Card\r\n        title=\"Conversation\"\r\n        bordered={true}\r\n        headStyle={{ backgroundColor: \"#339966\", color: \"white\" }}\r\n        bodyStyle={{\r\n          height: \"500px\",\r\n          border: \"1px solid #339966\",\r\n          overflowY: \"auto\",\r\n          display: \"flex\",\r\n          flexDirection: \"column-reverse\",\r\n        }}\r\n      >\r\n        {lstMsgCard}\r\n      </Card>\r\n      {replyToMsg && (\r\n        <article className={`msg-container msg-remote`}>\r\n          <div className=\"msg-box\">\r\n            <img\r\n              className=\"user-img\"\r\n              src={`${process.env.REACT_APP_BASE_URL}/api/users/thumbnails/${replyToMsg.Avatar}`}\r\n            />\r\n            <div className=\"flr\">\r\n              <span className=\"timestamp\">\r\n                <span className=\"username\">{replyToMsg.User.FirstName}</span>\r\n                &bull;\r\n                <span className=\"posttime\">{replyToMsg.CreatedDate}</span>\r\n              </span>\r\n              <div className=\"messages\">\r\n                <p className=\"msg\">{replyToMsg.Content}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <button className=\"reply-btn\" onClick={() => setReplyToMsg(null)}>\r\n            <FontAwesomeIcon icon={faTimes} />\r\n          </button>\r\n        </article>\r\n      )}\r\n      <Form form={form} onFinish={onSendMessage}>\r\n        <Row>\r\n          <Col span={22}>\r\n            <Form.Item name=\"message\">\r\n              <Input autoFocus />\r\n            </Form.Item>\r\n          </Col>\r\n          <Col span={2}>\r\n            <Form.Item>\r\n              <Button htmlType=\"submit\" type=\"primary\">\r\n                Send\r\n              </Button>\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ConversationBox;\r\n","import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Col, Card, Row } from \"antd\";\r\nimport ApproveRequestForm from \"components/ApproveRequestForm\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getRequestDetail } from \"features/ManageRequest/slice\";\r\nimport RequestForm from \"components/CreateRequestForm\";\r\nimport { Can } from \"permission/can\";\r\nimport ChangeLogBox from \"components/ChangeLogBox\";\r\nimport ConversationBox from \"components/Conversation\";\r\n\r\nDetailPage.propTypes = {};\r\n\r\nfunction DetailPage(props) {\r\n  const dispatch = useDispatch();\r\n  const requestId = props.match.params.requestId;\r\n  const { requestDetail, requestLogs } = useSelector(\r\n    (state) => state.requestManagement\r\n  );\r\n  const { userId } = useSelector((state) => state.app);\r\n  useEffect(() => {\r\n    fetchData(requestId);\r\n  }, []);\r\n\r\n  function fetchData(value) {\r\n    dispatch(getRequestDetail(value));\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h2>Request #{requestDetail.Number}</h2>\r\n      <Row gutter={[16, 16]}>\r\n        <Col span={12}>\r\n          <Can I=\"approve-cancel\" a=\"request\">\r\n            <Card\r\n              title=\"Response\"\r\n              bordered={true}\r\n              headStyle={{ backgroundColor: \"#0066ff\", color: \"white\" }}\r\n              bodyStyle={{ border: \"1px solid #0066ff\" }}\r\n            >\r\n              <ApproveRequestForm\r\n                requestId={requestId}\r\n                IsApproved={requestDetail.IsApproved}\r\n                IsClosed={requestDetail.IsClosed}\r\n              />\r\n            </Card>\r\n          </Can>\r\n          <Card\r\n            title=\"Update Detail\"\r\n            bordered={true}\r\n            headStyle={{ backgroundColor: \"#0066ff\", color: \"white\" }}\r\n            bodyStyle={{ border: \"1px solid #0066ff\" }}\r\n          >\r\n            <Row>\r\n              <p>\r\n                <strong>Status: </strong>\r\n                {!requestDetail.IsApproved && !requestDetail.IsClosed\r\n                  ? \"Pending\"\r\n                  : requestDetail.IsClosed\r\n                  ? \"Closed\"\r\n                  : \"Approved\"}\r\n              </p>\r\n            </Row>\r\n            <Row>\r\n              <p>\r\n                <strong>Created Date: </strong>\r\n                {new Date(requestDetail.CreatedDate).toString()}\r\n              </p>\r\n            </Row>\r\n            <Row>\r\n              <p>\r\n                <strong>Created By: </strong>\r\n                {requestDetail.CreatedBy}\r\n              </p>\r\n            </Row>\r\n            <Row>\r\n              <p>\r\n                <strong>Updated Date: </strong>\r\n                {requestDetail.UpdatedDate\r\n                  ? new Date(requestDetail.UpdatedDate).toString()\r\n                  : \"\"}\r\n              </p>\r\n            </Row>\r\n            <Row>\r\n              <p>\r\n                <strong>Update By: </strong>\r\n                {requestDetail.UpdatedBy}\r\n              </p>\r\n            </Row>\r\n            <RequestForm\r\n              request={requestDetail}\r\n              type=\"update\"\r\n              disable={\r\n                requestDetail.OwnerId !== userId ||\r\n                requestDetail.IsApproved ||\r\n                requestDetail.IsClosed\r\n              }\r\n            />\r\n          </Card>\r\n        </Col>\r\n        <Col span={12}>\r\n          <ConversationBox request={requestDetail} />\r\n          <ChangeLogBox logs={requestLogs} />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default DetailPage;\r\n","import React, { Suspense } from \"react\";\r\nimport { Route, Switch, useRouteMatch } from \"react-router-dom\";\r\n\r\nimport \"./index.scss\";\r\n\r\nimport NotFound from \"components/NotFound\";\r\nimport MainPage from \"./pages/Main\";\r\nimport DetailPage from \"./pages/Detail\";\r\n\r\nRequest.propTypes = {};\r\n\r\nfunction Request() {\r\n  const match = useRouteMatch();\r\n  return (\r\n    <Suspense fallback={<div>Loading ...</div>}>\r\n      <Switch>\r\n        <Route exact path={match.url} component={MainPage} />\r\n        <Route exact path={`${match.url}/:requestId`} component={DetailPage} />\r\n        <Route component={NotFound} />\r\n      </Switch>\r\n    </Suspense>\r\n  );\r\n}\r\n\r\nexport default Request;\r\n"],"sourceRoot":""}