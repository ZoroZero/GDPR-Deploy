{"version":3,"sources":["axios/auth.instance.js","components/NotFound/index.js","utils/cookies.js","features/App/slice.js","api/authentication.js","features/App/pages/Login/index.js","components/PrivateRoute/index.js","components/MainMenu/index.js","components/Loading/index.js","store.js","features/App/index.js","serviceWorker.js","index.js"],"names":["instance","axios","create","baseURL","interceptors","request","use","req","defaults","headers","common","message","error","Promise","reject","response","userId","id","title","completed","setAuthToken","token","NotFound","props","getCookie","cname","name","ca","document","cookie","split","i","length","c","trim","indexOf","substring","initialState","userInfo","accessToken","exp","fullName","email","loading","slice","createSlice","reducers","login","state","action","payload","logout","stopLoading","actions","onLogout","dispatch","cookies","eqPos","substr","deleteAllCookies","onLogin","password","resolve","post","then","res","data","catch","loginApi","console","log","cvalue","hours","d","Date","setTime","getTime","expires","toUTCString","setCookie","layout","labelCol","span","wrapperCol","tailLayout","offset","LoginPage","useDispatch","history","useHistory","className","style","width","initialValues","remember","onFinish","values","success","push","onFinishFailed","errorInfo","Item","label","initialValue","rules","required","Password","type","htmlType","PrivateRoute","Component","component","rest","render","checkToken","to","pathname","from","location","MainMenu","useLocation","theme","mode","selectedKeys","key","icon","UserOutlined","VideoCameraOutlined","Loading","size","createReducer","asyncReducers","combineReducers","app","appReducer","store","configureStore","reducer","Header","Layout","Content","Sider","User","React","lazy","module","a","slide","default","injectReducer","ManageRequest","propTypes","account","PropTypes","object","emailMessages","string","idToken","App","useSelector","useState","collapsed","setCollapsed","useEffect","tokenCookie","fallback","minHeight","trigger","collapsible","padding","createElement","MenuUnfoldOutlined","MenuFoldOutlined","onClick","float","margin","danger","exact","path","Boolean","window","hostname","match","ReactDOM","asyncReducer","replaceReducer","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.745e56c8.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst instance = axios.create({ baseURL: \"https://reqres.in/api\" });\r\n\r\ninstance.interceptors.request.use(\r\n  (req) => {\r\n    if (axios.defaults.headers.common[\"Authorization\"]) return req;\r\n    throw { message: \"the token is not available\" };\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\ninstance.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    const fallbackValue = [\r\n      {\r\n        userId: \"Not authorized\",\r\n        id: \"aerw15311sq\",\r\n        title: \"Please try again\",\r\n        completed: false,\r\n      },\r\n    ];\r\n    return Promise.reject(fallbackValue);\r\n  }\r\n);\r\n\r\nexport const setAuthToken = (token) => {\r\n  if (token) {\r\n    //applying token\r\n    instance.defaults.headers.common[\"Authorization\"] = token;\r\n  } else {\r\n    //deleting token\r\n    delete instance.defaults.headers.common[\"Authorization\"];\r\n  }\r\n};\r\n\r\nexport default instance;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nNotFound.propTypes = {};\r\n\r\nfunction NotFound(props) {\r\n  return <div>Oopss ... Not Found</div>;\r\n}\r\n\r\nexport default NotFound;\r\n","export function deleteAllCookies() {\r\n  const cookies = document.cookie.split(\";\");\r\n  for (let i = 0; i < cookies.length; i++) {\r\n    const cookie = cookies[i];\r\n    const eqPos = cookie.indexOf(\"=\");\r\n    const name = eqPos > -1 ? cookie.substr(0, eqPos) : cookie;\r\n    document.cookie = `${name} =;expires=Thu, 01 Jan 1970 00:00:00 GMT`;\r\n  }\r\n}\r\n\r\nexport function setCookie(cname, cvalue, hours) {\r\n  const d = new Date();\r\n  d.setTime(d.getTime() + hours * 60 * 60 * 1000); // (exdays * 24 * 60 * 60 * 1000));\r\n  const expires = `expires=${d.toUTCString()}`;\r\n  document.cookie = `${cname}=${cvalue};${expires};path=/`;\r\n}\r\n\r\nexport function getCookie(cname) {\r\n  const name = `${cname}=`;\r\n  const ca = document.cookie.split(\";\");\r\n\r\n  for (let i = 0; i < ca.length; i++) {\r\n    let c = ca[i];\r\n    c = c.trim();\r\n    if (c.indexOf(name) === 0) {\r\n      return c.substring(name.length, c.length);\r\n    }\r\n  }\r\n\r\n  return \"\";\r\n}\r\n\r\nexport function checkToken() {\r\n  const token = getCookie(\"token\");\r\n  if (token !== \"\") {\r\n    return token;\r\n  }\r\n  return null;\r\n}\r\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { setCookie, deleteAllCookies } from \"utils/cookies\";\r\nimport { loginApi } from \"api/authentication\";\r\nimport { setAuthToken } from \"axios/auth.instance\";\r\n\r\nexport const initialState = {\r\n  userInfo: {\r\n    accessToken: null,\r\n    exp: null,\r\n    fullName: null,\r\n    email: null,\r\n  },\r\n  token: null,\r\n  loading: false,\r\n};\r\n\r\nconst slice = createSlice({\r\n  name: \"app\",\r\n  initialState,\r\n  reducers: {\r\n    login(state, action) {\r\n      state.token = action.payload.token;\r\n    },\r\n    logout(state, action) {\r\n      state.token = null;\r\n      state.userInfo = initialState.userInfo;\r\n    },\r\n    loading(state, action) {\r\n      state.loading = true;\r\n    },\r\n    stopLoading(state, action) {\r\n      state.loading = false;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { login, logout, loading, stopLoading } = slice.actions;\r\nexport default slice.reducer;\r\n\r\nexport const onLogout = () => (dispatch) => {\r\n  dispatch(loading());\r\n  deleteAllCookies();\r\n  dispatch(logout());\r\n  dispatch(stopLoading());\r\n};\r\n\r\nexport const onLogin = (email, password) => (dispatch) => {\r\n  return new Promise((resolve, reject) => {\r\n    dispatch(loading());\r\n    return loginApi(email, password)\r\n      .then((res) => {\r\n        const { token } = res;\r\n        console.log(token);\r\n        setCookie(\"token\", token);\r\n        setAuthToken(token);\r\n        dispatch(login({ token }));\r\n        dispatch(stopLoading());\r\n        resolve();\r\n      })\r\n      .catch((error) => {\r\n        dispatch(stopLoading());\r\n        reject(error);\r\n      });\r\n  });\r\n};\r\n","import axios from \"axios\";\r\n\r\nexport const loginApi = (email, password) => {\r\n  return new Promise((resolve, reject) => {\r\n    return axios\r\n      .post(\"https://reqres.in/api/login\", {\r\n        email: email,\r\n        password: password,\r\n      })\r\n      .then((res) => {\r\n        resolve(res.data);\r\n      })\r\n      .catch((error) => {\r\n        reject(error);\r\n      });\r\n  });\r\n};\r\n","import React from \"react\";\r\nimport { Form, Input, Button, message } from \"antd\";\r\nimport \"./index.scss\";\r\nimport PropTypes from \"prop-types\";\r\nimport { onLogin } from \"features/App/slice\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst layout = {\r\n  labelCol: { span: 8 },\r\n  wrapperCol: { span: 16 },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: { offset: 8, span: 16 },\r\n};\r\n\r\nLoginPage.propTypes = {};\r\n\r\nfunction LoginPage(props) {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const onFinish = (values) => {\r\n    dispatch(onLogin(values.email, values.password))\r\n      .then(() => {\r\n        message.success(\"login successfully\");\r\n        history.push(\"/\");\r\n      })\r\n      .catch((error) => {\r\n        message.error(error[0].title);\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <div style={{ width: \"33%\" }}>\r\n        <Form\r\n          {...layout}\r\n          name=\"basic\"\r\n          initialValues={{ remember: true }}\r\n          onFinish={onFinish}\r\n          onFinishFailed={onFinishFailed}\r\n        >\r\n          <Form.Item\r\n            label=\"Email\"\r\n            name=\"email\"\r\n            initialValue=\"eve.holt@reqres.in\"\r\n            rules={[{ required: true, message: \"Please input your email!\" }]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Password\"\r\n            name=\"password\"\r\n            initialValue=\"cityslicka\"\r\n            rules={[{ required: true, message: \"Please input your password!\" }]}\r\n          >\r\n            <Input.Password />\r\n          </Form.Item>\r\n          <Form.Item {...tailLayout}>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nLoginPage.propTypes = {\r\n  account: PropTypes.object,\r\n  emailMessages: PropTypes.object,\r\n  error: PropTypes.string,\r\n  idToken: PropTypes.string,\r\n};\r\nexport default LoginPage;\r\n","import React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport { checkToken } from '../../utils/cookies';\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={props =>\r\n      checkToken() !== null ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect\r\n          to={{\r\n            pathname: '/login',\r\n            state: { from: props.location },\r\n          }}\r\n        />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nexport default PrivateRoute;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useLocation, Link } from \"react-router-dom\";\r\nimport { Menu } from \"antd\";\r\nimport { UserOutlined, VideoCameraOutlined } from \"@ant-design/icons\";\r\n\r\nMainMenu.propTypes = {};\r\n\r\nfunction MainMenu(props) {\r\n  const location = useLocation();\r\n  return (\r\n    <Menu theme=\"dark\" mode=\"inline\" selectedKeys={[location.pathname]}>\r\n      <Menu.Item key=\"/users\" icon={<UserOutlined />}>\r\n        User\r\n        <Link to=\"/users\" />\r\n      </Menu.Item>\r\n      <Menu.Item key=\"/request-management\" icon={<VideoCameraOutlined />}>\r\n        Manage Request\r\n        <Link to=\"/request-management\" />\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n}\r\n\r\nexport default MainMenu;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Spin } from 'antd';\r\n\r\nimport './index.scss';\r\n\r\nLoading.propTypes = {};\r\n\r\nfunction Loading(props) {\r\n  return (\r\n    <div className=\"loading-container\">\r\n      <Spin size=\"large\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Loading;\r\n","import { configureStore, combineReducers } from \"@reduxjs/toolkit\";\r\nimport appReducer from \"features/App/slice\";\r\n\r\nfunction createReducer(asyncReducers) {\r\n  return combineReducers({\r\n    app: appReducer,\r\n    ...asyncReducers,\r\n  });\r\n}\r\n\r\nconst store = configureStore({\r\n  reducer: createReducer(),\r\n});\r\n\r\nexport function configureAppStore() {\r\n  store.asyncReducers = {};\r\n  store.injectReducer = (key, asyncReducer) => {\r\n    store.asyncReducers[key] = asyncReducer;\r\n    store.replaceReducer(createReducer(store.asyncReducers));\r\n  };\r\n  return store;\r\n}\r\n\r\nexport function getStore() {\r\n  return store;\r\n}\r\n","import React, { Suspense, useEffect, useState } from \"react\";\r\nimport { BrowserRouter, Route, Switch, Link, Redirect } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Layout, Button } from \"antd\";\r\nimport { MenuUnfoldOutlined, MenuFoldOutlined } from \"@ant-design/icons\";\r\n\r\nimport \"./index.scss\";\r\n\r\nimport { getCookie } from \"utils/cookies\";\r\nimport PropTypes from \"prop-types\";\r\nimport LoginPage from \"features/App/pages/Login\";\r\nimport NotFound from \"components/NotFound\";\r\nimport PrivateRoute from \"components/PrivateRoute\";\r\nimport MainMenu from \"components/MainMenu\";\r\nimport Loading from \"components/Loading\";\r\nimport { getStore } from \"store\";\r\nimport { login, onLogout } from \"./slice\";\r\n\r\nconst store = getStore();\r\nconst { Header, Content, Sider } = Layout;\r\n\r\nconst User = React.lazy(() =>\r\n  import(\"features/ManageUser\").then(async (module) => {\r\n    const reducer = await import(\"features/ManageUser/slice\").then(\r\n      (slide) => slide.default\r\n    );\r\n    store.injectReducer(\"users\", reducer);\r\n    return module;\r\n  })\r\n);\r\n\r\nconst ManageRequest = React.lazy(() =>\r\n  import(\"features/ManageRequest\").then(async (module) => {\r\n    const reducer = await import(\"features/ManageRequest/slice\").then(\r\n      (slide) => slide.default\r\n    );\r\n    store.injectReducer(\"requestManagement\", reducer);\r\n    return module;\r\n  })\r\n);\r\n\r\nfunction App(props) {\r\n  const dispatch = useDispatch();\r\n  const { token, loading } = useSelector((state) => state.app);\r\n  const [collapsed, setCollapsed] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const tokenCookie = getCookie(\"token\");\r\n    if (tokenCookie) dispatch(login({ token: tokenCookie }));\r\n  }, []);\r\n\r\n  const handleLogout = () => {\r\n    dispatch(onLogout());\r\n  };\r\n  const toggle = () => setCollapsed(!collapsed);\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <Suspense fallback={<div>Loading ...</div>}>\r\n        <BrowserRouter>\r\n          <Layout>\r\n            {loading && <Loading />}\r\n            {token && (\r\n              <Sider\r\n                style={{ minHeight: \"100vh\" }}\r\n                trigger={null}\r\n                collapsible\r\n                collapsed={collapsed}\r\n              >\r\n                <Link to=\"/\">\r\n                  <div className=\"logo\" />\r\n                </Link>\r\n                <MainMenu />\r\n              </Sider>\r\n            )}\r\n            <Layout className=\"site-layout\">\r\n              {token && (\r\n                <Header\r\n                  className=\"site-layout-background\"\r\n                  style={{ padding: 0 }}\r\n                >\r\n                  {React.createElement(\r\n                    collapsed ? MenuUnfoldOutlined : MenuFoldOutlined,\r\n                    {\r\n                      className: \"trigger\",\r\n                      onClick: toggle,\r\n                    }\r\n                  )}\r\n                  <Button\r\n                    onClick={handleLogout}\r\n                    style={{ float: \"right\", margin: 14 }}\r\n                    type=\"dashed\"\r\n                    danger\r\n                  >\r\n                    Logout\r\n                  </Button>\r\n                </Header>\r\n              )}\r\n              <Content\r\n                className=\"site-layout-background\"\r\n                style={{\r\n                  margin: \"24px 16px\",\r\n                  padding: 24,\r\n                  minHeight: 280,\r\n                }}\r\n              >\r\n                <Switch>\r\n                  {/* <PrivateRoute path=\"/\" component={User} /> */}\r\n                  <Redirect exact from=\"/\" to=\"/users\" />\r\n                  <PrivateRoute path=\"/users\" component={User} />\r\n                  <PrivateRoute\r\n                    path=\"/request-management\"\r\n                    component={ManageRequest}\r\n                  />\r\n                  <Route exact path=\"/login\" component={LoginPage} />\r\n                  <Route component={NotFound} />\r\n                </Switch>\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n        </BrowserRouter>\r\n      </Suspense>\r\n    </div>\r\n  );\r\n}\r\n\r\nLoginPage.propTypes = {\r\n  account: PropTypes.object,\r\n  emailMessages: PropTypes.object,\r\n  error: PropTypes.string,\r\n  idToken: PropTypes.string,\r\n};\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { HelmetProvider } from \"react-helmet-async\";\r\nimport { Provider } from \"react-redux\";\r\nimport App from \"features/App\";\r\n\r\nimport \"./index.scss\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { configureAppStore } from \"./store\";\r\n\r\nReactDOM.render(\r\n  <Provider store={configureAppStore()}>\r\n    <HelmetProvider>\r\n      <App />\r\n    </HelmetProvider>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}