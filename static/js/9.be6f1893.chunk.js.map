{"version":3,"sources":["api/server.js","constants/ManageServer/server.js","features/ManageServer/slice.js","constants/global.js","utils/helper.js","../node_modules/antd/es/space/index.js","../node_modules/rc-switch/es/index.js","../node_modules/antd/es/switch/index.js","../node_modules/@ant-design/icons-svg/es/asn/ExclamationCircleOutlined.js","../node_modules/@ant-design/icons/es/icons/ExclamationCircleOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/DownOutlined.js","../node_modules/@ant-design/icons/es/icons/DownOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/VerticalAlignBottomOutlined.js","../node_modules/@ant-design/icons/es/icons/VerticalAlignBottomOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/InboxOutlined.js","../node_modules/@ant-design/icons/es/icons/InboxOutlined.js","components/ManageServer/AddEditServerModal.js","components/ManageServer/ExportServer.js","components/ManageServer/ImportServer.js","features/ManageServer/pages/Main/index.js","features/ManageServer/index.js"],"names":["getAllServerApi","Promise","resolve","reject","axios","method","url","then","res","data","catch","error","getServersApi","get","params","pageNumber","current","pageSize","sortColumn","sortOrder","keyword","filterColumn","filterKeys","createServerApi","post","serverName","ipAddress","startDate","endDate","updateServerApi","put","Id","id","Name","IpAddress","StartDate","EndDate","IsActive","status","deleteServerApi","delete","updateMultipleStatusApi","listServer","exportServerListApi","serverIpList","ipAddressList","importServerListApi","recoverServerApi","SERVER_CONSTANTS","ADD_SERVER_REQUEST","type","ADD_SERVER_TYPE","UPDATE_SERVER_TYPE","DEFAULT_FILTER_KEYS","DEFAULT_FILTER_COLUMN","DEFAULT_SORT_COLUMN","DEFAULT_SORT_ORDER","SERVER_EXPORT_FILE","initialState","blockIds","refresh","lstServer","slice","createSlice","name","reducers","setFilter","state","action","payload","setSort","setData","setRefresh","setListServer","actions","getListServerOptions","dispatch","console","log","GLOBAL_CONSTANTS","TIME_FORMAT","CUSTOMER_EXPORT_FILE","getExtension","filename","parts","split","length","__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","propertyIsEnumerable","spaceSize","small","middle","large","Space","props","_classNames","_React$useContext","React","ConfigContext","getPrefixCls","space","directionConfig","direction","_props$size","size","align","className","children","_props$direction","customizePrefixCls","prefixCls","otherProps","items","toArray","len","mergedAlign","undefined","cn","classNames","concat","_defineProperty","itemClassName","marginDirection","_extends","map","child","key","style","Switch","_ref","ref","_ref$prefixCls","checked","defaultChecked","disabled","loadingIcon","checkedChildren","unCheckedChildren","onClick","onChange","onKeyDown","restProps","_objectWithoutProperties","_useMergedState","useMergedState","value","defaultValue","_useMergedState2","_slicedToArray","innerChecked","setInnerChecked","triggerChange","newChecked","event","mergedChecked","switchClassName","assign","role","which","KeyCode","LEFT","RIGHT","ret","displayName","_a","customizeSize","loading","_a$className","devWarning","SizeContext","LoadingOutlined","classes","Wave","insertExtraNode","RcSwitch","__ANT_SWITCH","ExclamationCircleOutlined","AntdIcon","icon","ExclamationCircleOutlinedSvg","DownOutlined","DownOutlinedSvg","VerticalAlignBottomOutlined","VerticalAlignBottomOutlinedSvg","InboxOutlined","InboxOutlinedSvg","RangePicker","DatePicker","AddEditServerModal","useSelector","serverManagement","useDispatch","Form","useForm","form","useState","title","setTitle","active","setActive","shouldGetData","modalVisible","useEffect","setFieldsValue","ServerName","Time","request","onFill","moment","handleClose","setEditRequest","setModalVisible","centered","visible","onCancel","okButtonProps","display","cancelButtonProps","forceRender","footer","htmlType","onFinish","values","trim","format","message","success","resetFields","err","layout","Item","label","rules","required","pattern","width","height","showTime","disabledDate","subtract","endOf","Option","Select","ExportServer","csvData","setCSVData","setkeyword","fileName","options","filter","includes","index","handleExport","CreatedBy","CreatedDate","UpdatedBy","UpdatedDate","DeletedBy","DeletedDate","IsDeleted","wb","Sheets","XLSX","json_to_sheet","OwnerId","OwnerName","SheetNames","excelBuffer","bookType","Blob","FileSaver","exportToXLSX","menu","statusOptions","setVisible","Status","x","join","FromDate","ToDate","margin","showSearch","onSearch","mode","placeholder","overlay","Dragger","Upload","ImportServer","fileList","setFileList","importFile","setImportFile","uploadProps","info","multiple","beforeUpload","accept","file","originFileObj","fileReader","FileReader","onload","binary","bytes","Uint8Array","target","result","byteLength","String","fromCharCode","workbook","cellDates","cellStyles","sheet_name_list","importData","sheet_to_json","dateNF","finally","readAsArrayBuffer","Search","Input","confirm","Modal","MainPage","setLoading","total","setTotal","page","pagination","setPagination","sorter","setSorter","searchKeyword","setSearchKeyword","exporting","setExporting","importing","setImporting","editRequest","selectingServerIdList","setSelectingServerIdList","fetch","handleModalActivate","columns","dataIndex","render","record","color","filters","text","danger","showRecoverModal","showDeleteModal","setTableData","showTotal","content","onOk","handleDeleteServer","handleRecoverServer","rowSelection","selectedRowKeys","selectedRows","actionMenu","span","offset","enterButton","marginTop","marginBottom","padding","flexDirection","justifyContent","rowKey","dataSource","pagi","newSortColumn","column","newSortOrder","order","scroll","showQuickJumper","showSizeChanger","newPageNum","Math","ceil","Server","ability","useAbility","AbilityContext","can","match","useRouteMatch","fallback","exact","path","component","NotFound"],"mappings":"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","file":"static/js/9.be6f1893.chunk.js","sourcesContent":["import axios from \"axios/auth.instance\";\r\n// const FormData = require('form-data');\r\n\r\nexport const getAllServerApi = () => {\r\n  return new Promise((resolve, reject) => {\r\n    return axios({\r\n      method: \"get\",\r\n      url: \"/api/servers/all\",\r\n    })\r\n      .then((res) => {\r\n        resolve(res.data);\r\n      })\r\n      .catch((error) => {\r\n        reject(error);\r\n      });\r\n  });\r\n};\r\n\r\nexport const getServersApi = (data) => {\r\n  //console.log(\"Send params\", data);\r\n  return new Promise((resolve, reject) => {\r\n    return axios\r\n      .get(`/api/servers`, {\r\n          params: {\r\n              pageNumber: data.current,\r\n              pageSize: data.pageSize,\r\n              sortColumn: data.sortColumn,\r\n              sortOrder: data.sortOrder,\r\n              keyword: data.keyword,\r\n              filterColumn: data.filterColumn,\r\n              filterKeys: data.filterKeys\r\n          }\r\n      })\r\n      .then((res) => {\r\n        resolve(res.data);\r\n      })\r\n      .catch((error) => {\r\n        reject(error);\r\n      });\r\n  });\r\n};\r\n\r\n\r\nexport const createServerApi = (data) => {\r\n  return new Promise((resolve, reject) => {\r\n    return axios\r\n      .post(`/api/servers`, {\r\n          serverName: data.serverName,\r\n          ipAddress: data.ipAddress,\r\n          startDate: data.startDate,\r\n          endDate: data.endDate\r\n      })\r\n      .then((res) => {\r\n        resolve(res.data);\r\n      })\r\n      .catch((error) => {\r\n        reject(error);\r\n      });\r\n  }); \r\n}\r\n\r\n\r\nexport const updateServerApi = (data) => {\r\n  return new Promise((resolve, reject) => {\r\n    //console.log(\"Send data\", data)\r\n    return axios\r\n      .put(`/api/servers`, {\r\n          Id: data.id,\r\n          Name: data.serverName,\r\n          IpAddress: data.ipAddress,\r\n          StartDate: data.startDate,\r\n          EndDate: data.endDate,\r\n          IsActive: data.status\r\n      })\r\n      .then((res) => {\r\n        resolve(res.data);\r\n      })\r\n      .catch((error) => {\r\n        reject(error);\r\n      });\r\n  });  \r\n}\r\n\r\nexport const deleteServerApi = (data) => {\r\n  return new Promise((resolve, reject) => {\r\n    //console.log(\"Delete data\", data)\r\n    return axios\r\n      .delete(`/api/servers`, {\r\n          params: {\r\n              id: data.id\r\n          }\r\n      })\r\n      .then((res) => {\r\n        resolve(res.data);\r\n      })\r\n      .catch((error) => {\r\n        reject(error);\r\n      });\r\n  });\r\n}\r\n\r\nexport const updateMultipleStatusApi = (data) => {\r\n  return new Promise((resolve, reject) => {\r\n    //console.log(\"Send data\", data)\r\n    return axios\r\n      .put(`/api/servers/multi`, {\r\n          status: data.status,\r\n          listServer: data.listServer\r\n      })\r\n      .then((res) => {\r\n        resolve(res.data);\r\n      })\r\n      .catch((error) => {\r\n        reject(error);\r\n      });\r\n  });  \r\n}\r\n\r\n\r\nexport const exportServerListApi = (data) => {\r\n  return new Promise((resolve, reject) => {\r\n    //console.log(\"Data for export\", data);\r\n    return axios\r\n      .get(`/api/servers/export`, {\r\n          params: {\r\n            serverName: data.serverName,\r\n            serverIpList: data.ipAddressList,\r\n            startDate: data.startDate,\r\n            endDate: data.endDate,\r\n            filterColumn: data.filterColumn,\r\n            filterKeys: data.filterKeys\r\n          }\r\n      })\r\n      .then((res) => {\r\n        resolve(res.data);\r\n      })\r\n      .catch((error) => {\r\n        reject(error);\r\n      });\r\n  });\r\n}\r\n\r\nexport const importServerListApi = (data) => {\r\n  //console.log(data);\r\n  return new Promise((resolve, reject) => {\r\n    return axios\r\n      .post(`/api/servers/import`, {\r\n        listServer : data.data\r\n      })\r\n      .then((res) => {\r\n        resolve(res.data);\r\n      })\r\n      .catch((error) => {\r\n        reject(error);\r\n      });\r\n  }); \r\n}\r\n\r\n\r\nexport const recoverServerApi = (data) => {\r\n  return new Promise((resolve, reject) => {\r\n    //console.log(\"Recover data\", data)\r\n    return axios\r\n      .put(`/api/servers/recover`, {\r\n          id: data.id\r\n      })\r\n      .then((res) => {\r\n        resolve(res.data);\r\n      })\r\n      .catch((error) => {\r\n        reject(error);\r\n      });\r\n  });\r\n}","export const SERVER_CONSTANTS = {\r\n    ADD_SERVER_REQUEST: {\r\n        type: 'add',\r\n        data: null\r\n    },\r\n    ADD_SERVER_TYPE: 'add',\r\n    UPDATE_SERVER_TYPE: 'update',\r\n    DEFAULT_FILTER_KEYS: '1,0',\r\n    DEFAULT_FILTER_COLUMN: 'Status',\r\n    DEFAULT_SORT_COLUMN: 'Name',\r\n    DEFAULT_SORT_ORDER: 'ascend',\r\n    SERVER_EXPORT_FILE: 'Server_list'\r\n}","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { SERVER_CONSTANTS } from \"constants/ManageServer/server\";\r\nimport { getAllServerApi } from \"api/server\";\r\nexport const initialState = {\r\n  blockIds: null,\r\n  sortColumn: SERVER_CONSTANTS.DEFAULT_SORT_COLUMN,\r\n  sortOrder: SERVER_CONSTANTS.DEFAULT_SORT_ORDER,\r\n  data: [], \r\n  refresh: false,\r\n  lstServer: []\r\n};\r\n\r\nconst slice = createSlice({\r\n  name: \"serverManagement\",\r\n  initialState,\r\n  reducers: {\r\n    setFilter: (state, action) => {\r\n      state.blockIds = action.payload.blockIds;\r\n    },\r\n\r\n    setSort: (state, action) => {\r\n      state.sortColumn = action.payload.sortColumn;\r\n      state.sortOrder = action.payload.sortOrder;\r\n    },\r\n\r\n    setData:  (state, action) => {\r\n      state.data = action.payload.data;\r\n    },\r\n\r\n\r\n    setRefresh: (state, action) => {\r\n      state.refresh = action.payload\r\n    },\r\n\r\n    setListServer: (state, action) => {\r\n      state.lstServer = action.payload.lstServer;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setFilter, setSort, setData, setRefresh, setListServer } = slice.actions;\r\nexport default slice.reducer;\r\n\r\n\r\nexport const getListServerOptions = () => (dispatch) => {\r\n  return new Promise((resolve, reject) => {\r\n    return getAllServerApi()\r\n      .then((res) => {\r\n        console.log(res);\r\n        dispatch(setListServer({ lstServer: res.data }));\r\n        resolve(res);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        reject(error);\r\n      });\r\n  });\r\n};\r\n","export const GLOBAL_CONSTANTS = { \r\n    TIME_FORMAT: 'DD/MM/YYYY HH:mm:ss',\r\n    CUSTOMER_EXPORT_FILE: 'customer_list'\r\n}","export function getExtension(filename) {\r\n    var parts = filename.split('.');\r\n    return parts[parts.length - 1];\r\n}","import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport toArray from \"rc-util/es/Children/toArray\";\nimport { ConfigContext } from '../config-provider';\nvar spaceSize = {\n  small: 8,\n  middle: 16,\n  large: 24\n};\n\nvar Space = function Space(props) {\n  var _classNames;\n\n  var _React$useContext = React.useContext(ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls,\n      space = _React$useContext.space,\n      directionConfig = _React$useContext.direction;\n\n  var _props$size = props.size,\n      size = _props$size === void 0 ? (space === null || space === void 0 ? void 0 : space.size) || 'small' : _props$size,\n      align = props.align,\n      className = props.className,\n      children = props.children,\n      _props$direction = props.direction,\n      direction = _props$direction === void 0 ? 'horizontal' : _props$direction,\n      customizePrefixCls = props.prefixCls,\n      otherProps = __rest(props, [\"size\", \"align\", \"className\", \"children\", \"direction\", \"prefixCls\"]);\n\n  var items = toArray(children);\n  var len = items.length;\n\n  if (len === 0) {\n    return null;\n  }\n\n  var mergedAlign = align === undefined && direction === 'horizontal' ? 'center' : align;\n  var prefixCls = getPrefixCls('space', customizePrefixCls);\n  var cn = classNames(prefixCls, \"\".concat(prefixCls, \"-\").concat(direction), (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-rtl\"), directionConfig === 'rtl'), _defineProperty(_classNames, \"\".concat(prefixCls, \"-align-\").concat(mergedAlign), mergedAlign), _classNames), className);\n  var itemClassName = \"\".concat(prefixCls, \"-item\");\n  var marginDirection = directionConfig === 'rtl' ? 'marginLeft' : 'marginRight';\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: cn\n  }, otherProps), items.map(function (child, i) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: itemClassName // eslint-disable-next-line react/no-array-index-key\n      ,\n      key: \"\".concat(itemClassName, \"-\").concat(i),\n      style: i === len - 1 ? {} : _defineProperty({}, direction === 'vertical' ? 'marginBottom' : marginDirection, typeof size === 'string' ? spaceSize[size] : size)\n    }, child);\n  }));\n};\n\nexport default Space;","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport KeyCode from \"rc-util/es/KeyCode\";\nvar Switch = React.forwardRef(function (_ref, ref) {\n  var _classNames;\n\n  var _ref$prefixCls = _ref.prefixCls,\n      prefixCls = _ref$prefixCls === void 0 ? 'rc-switch' : _ref$prefixCls,\n      className = _ref.className,\n      checked = _ref.checked,\n      defaultChecked = _ref.defaultChecked,\n      disabled = _ref.disabled,\n      loadingIcon = _ref.loadingIcon,\n      checkedChildren = _ref.checkedChildren,\n      unCheckedChildren = _ref.unCheckedChildren,\n      onClick = _ref.onClick,\n      onChange = _ref.onChange,\n      onKeyDown = _ref.onKeyDown,\n      restProps = _objectWithoutProperties(_ref, [\"prefixCls\", \"className\", \"checked\", \"defaultChecked\", \"disabled\", \"loadingIcon\", \"checkedChildren\", \"unCheckedChildren\", \"onClick\", \"onChange\", \"onKeyDown\"]);\n\n  var _useMergedState = useMergedState(false, {\n    value: checked,\n    defaultValue: defaultChecked\n  }),\n      _useMergedState2 = _slicedToArray(_useMergedState, 2),\n      innerChecked = _useMergedState2[0],\n      setInnerChecked = _useMergedState2[1];\n\n  function triggerChange(newChecked, event) {\n    var mergedChecked = innerChecked;\n\n    if (!disabled) {\n      mergedChecked = newChecked;\n      setInnerChecked(mergedChecked);\n      onChange === null || onChange === void 0 ? void 0 : onChange(mergedChecked, event);\n    }\n\n    return mergedChecked;\n  }\n\n  function onInternalKeyDown(e) {\n    if (e.which === KeyCode.LEFT) {\n      triggerChange(false, e);\n    } else if (e.which === KeyCode.RIGHT) {\n      triggerChange(true, e);\n    }\n\n    onKeyDown === null || onKeyDown === void 0 ? void 0 : onKeyDown(e);\n  }\n\n  function onInternalClick(e) {\n    var ret = triggerChange(!innerChecked, e); // [Legacy] trigger onClick with value\n\n    onClick === null || onClick === void 0 ? void 0 : onClick(ret, e);\n  }\n\n  var switchClassName = classNames(prefixCls, className, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-checked\"), innerChecked), _defineProperty(_classNames, \"\".concat(prefixCls, \"-disabled\"), disabled), _classNames));\n  return React.createElement(\"button\", Object.assign({}, restProps, {\n    type: \"button\",\n    role: \"switch\",\n    \"aria-checked\": innerChecked,\n    disabled: disabled,\n    className: switchClassName,\n    ref: ref,\n    onKeyDown: onInternalKeyDown,\n    onClick: onInternalClick\n  }), loadingIcon, React.createElement(\"span\", {\n    className: \"\".concat(prefixCls, \"-inner\")\n  }, innerChecked ? checkedChildren : unCheckedChildren));\n});\nSwitch.displayName = 'Switch';\nexport default Switch;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport RcSwitch from 'rc-switch';\nimport classNames from 'classnames';\nimport LoadingOutlined from '@ant-design/icons/LoadingOutlined';\nimport Wave from '../_util/wave';\nimport { ConfigContext } from '../config-provider';\nimport SizeContext from '../config-provider/SizeContext';\nimport devWarning from '../_util/devWarning';\nvar Switch = /*#__PURE__*/React.forwardRef(function (_a, ref) {\n  var _classNames;\n\n  var customizePrefixCls = _a.prefixCls,\n      customizeSize = _a.size,\n      loading = _a.loading,\n      _a$className = _a.className,\n      className = _a$className === void 0 ? '' : _a$className,\n      disabled = _a.disabled,\n      props = __rest(_a, [\"prefixCls\", \"size\", \"loading\", \"className\", \"disabled\"]);\n\n  devWarning('checked' in props || !('value' in props), 'Switch', '`value` is not a valid prop, do you mean `checked`?');\n\n  var _React$useContext = React.useContext(ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls,\n      direction = _React$useContext.direction;\n\n  var size = React.useContext(SizeContext);\n  var prefixCls = getPrefixCls('switch', customizePrefixCls);\n  var loadingIcon = /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefixCls, \"-handle\")\n  }, loading && /*#__PURE__*/React.createElement(LoadingOutlined, {\n    className: \"\".concat(prefixCls, \"-loading-icon\")\n  }));\n  var classes = classNames(className, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-small\"), (customizeSize || size) === 'small'), _defineProperty(_classNames, \"\".concat(prefixCls, \"-loading\"), loading), _defineProperty(_classNames, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), _classNames));\n  return /*#__PURE__*/React.createElement(Wave, {\n    insertExtraNode: true\n  }, /*#__PURE__*/React.createElement(RcSwitch, _extends({}, props, {\n    prefixCls: prefixCls,\n    className: classes,\n    disabled: disabled || loading,\n    ref: ref,\n    loadingIcon: loadingIcon\n  })));\n});\nSwitch.__ANT_SWITCH = true;\nSwitch.displayName = 'Switch';\nexport default Switch;","// This icon file is generated automatically.\nvar ExclamationCircleOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M464 688a48 48 0 1096 0 48 48 0 10-96 0zm24-112h48c4.4 0 8-3.6 8-8V296c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8v272c0 4.4 3.6 8 8 8z\" } }] }, \"name\": \"exclamation-circle\", \"theme\": \"outlined\" };\nexport default ExclamationCircleOutlined;\n","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport ExclamationCircleOutlinedSvg from \"@ant-design/icons-svg/es/asn/ExclamationCircleOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar ExclamationCircleOutlined = function ExclamationCircleOutlined(props, ref) {\n  return React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: ExclamationCircleOutlinedSvg\n  }));\n};\n\nExclamationCircleOutlined.displayName = 'ExclamationCircleOutlined';\nexport default React.forwardRef(ExclamationCircleOutlined);","// This icon file is generated automatically.\nvar DownOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z\" } }] }, \"name\": \"down\", \"theme\": \"outlined\" };\nexport default DownOutlined;\n","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport DownOutlinedSvg from \"@ant-design/icons-svg/es/asn/DownOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar DownOutlined = function DownOutlined(props, ref) {\n  return React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: DownOutlinedSvg\n  }));\n};\n\nDownOutlined.displayName = 'DownOutlined';\nexport default React.forwardRef(DownOutlined);","// This icon file is generated automatically.\nvar VerticalAlignBottomOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M859.9 780H164.1c-4.5 0-8.1 3.6-8.1 8v60c0 4.4 3.6 8 8.1 8h695.8c4.5 0 8.1-3.6 8.1-8v-60c0-4.4-3.6-8-8.1-8zM505.7 669a8 8 0 0012.6 0l112-141.7c4.1-5.2.4-12.9-6.3-12.9h-74.1V176c0-4.4-3.6-8-8-8h-60c-4.4 0-8 3.6-8 8v338.3H400c-6.7 0-10.4 7.7-6.3 12.9l112 141.8z\" } }] }, \"name\": \"vertical-align-bottom\", \"theme\": \"outlined\" };\nexport default VerticalAlignBottomOutlined;\n","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport VerticalAlignBottomOutlinedSvg from \"@ant-design/icons-svg/es/asn/VerticalAlignBottomOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar VerticalAlignBottomOutlined = function VerticalAlignBottomOutlined(props, ref) {\n  return React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: VerticalAlignBottomOutlinedSvg\n  }));\n};\n\nVerticalAlignBottomOutlined.displayName = 'VerticalAlignBottomOutlined';\nexport default React.forwardRef(VerticalAlignBottomOutlined);","// This icon file is generated automatically.\nvar InboxOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"0 0 1024 1024\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M885.2 446.3l-.2-.8-112.2-285.1c-5-16.1-19.9-27.2-36.8-27.2H281.2c-17 0-32.1 11.3-36.9 27.6L139.4 443l-.3.7-.2.8c-1.3 4.9-1.7 9.9-1 14.8-.1 1.6-.2 3.2-.2 4.8V830a60.9 60.9 0 0060.8 60.8h627.2c33.5 0 60.8-27.3 60.9-60.8V464.1c0-1.3 0-2.6-.1-3.7.4-4.9 0-9.6-1.3-14.1zm-295.8-43l-.3 15.7c-.8 44.9-31.8 75.1-77.1 75.1-22.1 0-41.1-7.1-54.8-20.6S436 441.2 435.6 419l-.3-15.7H229.5L309 210h399.2l81.7 193.3H589.4zm-375 76.8h157.3c24.3 57.1 76 90.8 140.4 90.8 33.7 0 65-9.4 90.3-27.2 22.2-15.6 39.5-37.4 50.7-63.6h156.5V814H214.4V480.1z\" } }] }, \"name\": \"inbox\", \"theme\": \"outlined\" };\nexport default InboxOutlined;\n","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport InboxOutlinedSvg from \"@ant-design/icons-svg/es/asn/InboxOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar InboxOutlined = function InboxOutlined(props, ref) {\n  return React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: InboxOutlinedSvg\n  }));\n};\n\nInboxOutlined.displayName = 'InboxOutlined';\nexport default React.forwardRef(InboxOutlined);","import React, { useEffect, useState } from \"react\";\r\nimport { Modal, Form, Input, DatePicker, Button, Switch, message } from \"antd\";\r\nimport { createServerApi, updateServerApi } from 'api/server';\r\nimport { SERVER_CONSTANTS } from \"constants/ManageServer/server\";\r\nimport { GLOBAL_CONSTANTS } from 'constants/global'\r\nimport moment from 'moment';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setRefresh } from 'features/ManageServer/slice';\r\n// import { getDefaultErrorMessage } from \"@casl/ability\";\r\nconst { RangePicker } = DatePicker;\r\n\r\n\r\nfunction AddEditServerModal(props) {\r\n    const { refresh } = useSelector((state) => state.serverManagement)\r\n    const dispatch = useDispatch()\r\n    const [form] = Form.useForm();\r\n    const [title, setTitle] = useState('Create new server');\r\n    const [active, setActive] = useState(true);\r\n    const shouldGetData = props.modalVisible !== false;\r\n    useEffect(() => {\r\n        if(shouldGetData){\r\n            //console.log(\"Request\", props.request);\r\n            form.setFieldsValue({ \r\n                ServerName: null,\r\n                IpAddress: null,\r\n                Time: [null, null],\r\n            });\r\n\r\n            setTitle(props.request && props.request.type === SERVER_CONSTANTS.UPDATE_SERVER_TYPE?'Update server information' : 'Creat new server')\r\n            if(props.request && props.request.data){\r\n                onFill()\r\n            }\r\n        }\r\n      }, [shouldGetData]);\r\n\r\n    const onFill = () => {\r\n        //console.log(props)\r\n        form.setFieldsValue({\r\n            ServerName: props.request.data.Name,\r\n            IpAddress: props.request.data.IpAddress,\r\n            Time: [moment(props.request.data.StartDate, GLOBAL_CONSTANTS.TIME_FORMAT), moment(props.request.data.EndDate, GLOBAL_CONSTANTS.TIME_FORMAT)]\r\n        });\r\n\r\n        setActive(props.request.data.IsActive)\r\n    };\r\n\r\n    const handleClose = () => {\r\n        props.setEditRequest(null);\r\n        props.setModalVisible(false);\r\n    }\r\n\r\n    const onFinish = values => {\r\n        //console.log(values);\r\n        if(props.request.type === SERVER_CONSTANTS.ADD_SERVER_TYPE){\r\n            return createServerApi({\r\n                    serverName: values.ServerName.trim(),\r\n                    ipAddress: values.IpAddress,\r\n                    startDate: values.Time[0].format(GLOBAL_CONSTANTS.TIME_FORMAT),\r\n                    endDate: values.Time[1].format(GLOBAL_CONSTANTS.TIME_FORMAT)\r\n                })\r\n                .then((res) => {\r\n                    //console.log(\"Sucessfully add new server\", res)\r\n                    message.success(\"Sucessfully add new server\")\r\n                    // openNotification(`Sucessfully add new server at ${res.createAt}`)\r\n                    props.setModalVisible(false)\r\n                    form.resetFields()\r\n                    dispatch(setRefresh(!refresh));\r\n                })\r\n                .catch((err) => {\r\n                    //console.log(\"Add error\", err); \r\n                    message.error(\"Something went wrong.\\nYour server name or ip is already existed. Please check again\")\r\n                }) \r\n        }\r\n        else if(props.request.type === SERVER_CONSTANTS.UPDATE_SERVER_TYPE){\r\n            const id = props.request.data.Id\r\n            //console.log(active);\r\n            return updateServerApi({\r\n                id: id,\r\n                serverName: values.ServerName.trim(),\r\n                ipAddress: values.IpAddress,\r\n                startDate: values.Time[0].format(GLOBAL_CONSTANTS.TIME_FORMAT),\r\n                endDate: values.Time[1].format(GLOBAL_CONSTANTS.TIME_FORMAT),\r\n                status: active\r\n            })\r\n            .then((res) => {\r\n                //console.log(\"Sucessfully update server information\", res)\r\n                // openNotification(`Sucessfully update server information at ${res.updateAt}`)\r\n                message.success(\"Successfully update server information\")\r\n                props.setModalVisible(false)\r\n                form.resetFields();\r\n                dispatch(setRefresh(!refresh));\r\n            })\r\n            .catch((err) => {\r\n                //console.log(\"Update error\", err); \r\n                message.error(\"Something went wrong.\\nYour server name or ip is already existed. Please check again\")\r\n            })\r\n        }\r\n    };\r\n    \r\n    function range(start, end) {\r\n        const result = [];\r\n        for (let i = start; i < end; i++) {\r\n          result.push(i);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    function disabledDate(current) {\r\n        // Can not select days before today\r\n        return current && current < moment().subtract(1, 'day').endOf('day');\r\n    }\r\n\r\n    return (    \r\n        <Modal\r\n            title= {title}\r\n            centered\r\n            visible={props.modalVisible}\r\n            onCancel={handleClose}\r\n            okButtonProps={{ style: { display: 'none' } }}\r\n            cancelButtonProps={{ style: { display: 'none' } }}\r\n            forceRender={true} \r\n            footer={[\r\n                <Button form=\"myForm\" key=\"submit\" type=\"primary\" htmlType=\"submit\">\r\n                    Submit\r\n                </Button>,\r\n                <Button key=\"cancel\" onClick={handleClose}>\r\n                    Cancel\r\n                </Button>\r\n            ]}>\r\n                <Form  form={form} onFinish={onFinish} id=\"myForm\"\r\n                    layout=\"vertical\">\r\n                    <Form.Item label=\"Server name\"\r\n                            name='ServerName'\r\n                            rules={[{\r\n                                    required: true,\r\n                                    message: \"Please input the name of server!\"\r\n                                }]}>\r\n                            <Input  />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item label=\"IP Address\"\r\n                                name='IpAddress'\r\n                                rules={[\r\n                                    {required: true,message: \"Please input the ip address of server!\"},\r\n                                    // {pattern: \"^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?).(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?).(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?).(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$\", message: \"Ip format is not correct\"}\r\n                                    {pattern: /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/, message: \"Ip format is not correct\"}]}>\r\n                        <Input />\r\n                    </Form.Item>\r\n                    \r\n                    <Form.Item name='Time' label='Time' rules={[\r\n                                    {required: true,message: \"Please input the ip address of server!\"} ]} style={{ display: 'inline-block', width: \"100%\", height: 'auto'}}>\r\n                        {/* <Form.Item label=\"Start date\" style={{ display: 'inline-block', width: 'calc(50% - 8px)' }} \r\n                                    name='StartDate'\r\n                                    rules={[{\r\n                                        required: true,\r\n                                        message: \"Please input the start date of server!\"\r\n                                    }]}>\r\n                            <DatePicker showTime  disabledDate={d => !d || d.isBefore(moment().format('YYYY-MM-DD HH:mm:ss'))} style={{  width: '100%' }}/>\r\n                        </Form.Item>\r\n\r\n                        <Form.Item label=\"End date\" style={{ display: 'inline-block', width: 'calc(50% - 8px)', margin: '0 8px' }}\r\n                                    name='EndDate'\r\n                                    rules={[{\r\n                                        required: true,\r\n                                        message: \"Please input the end date of server!\"\r\n                                    }]}>\r\n                            <DatePicker showTime disabledDate={d => !d || d.isBefore(moment().format('YYYY-MM-DD HH:mm:ss'))} style={{  width: '100%' }}/>\r\n                        </Form.Item> */}\r\n                        <RangePicker\r\n                            showTime \r\n                            disabledDate={disabledDate}\r\n                            format=\"YYYY-MM-DD HH:mm:ss\"\r\n                            style={{ width: \"100%\"}}/>\r\n                    </Form.Item>\r\n                    \r\n                    {props.request && props.request.type === SERVER_CONSTANTS.UPDATE_SERVER_TYPE &&\r\n                        <Form.Item name='Status'>\r\n                            <Switch checkedChildren=\"Active\" unCheckedChildren=\"Inactive\" checked={active} onChange={(checked)=>{setActive(checked)}}/>\r\n                            <br />\r\n                        </Form.Item>\r\n                    }\r\n                </Form>\r\n        </Modal>)\r\n}\r\n\r\nexport default AddEditServerModal;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Form, Input, DatePicker, Button, Modal,  Menu, Dropdown, Select } from \"antd\";\r\nimport { DownOutlined } from '@ant-design/icons';\r\nimport * as FileSaver from 'file-saver';\r\nimport * as XLSX from 'xlsx';\r\nimport { exportServerListApi } from 'api/server';\r\nimport { SERVER_CONSTANTS } from 'constants/ManageServer/server';\r\nimport { VerticalAlignBottomOutlined } from '@ant-design/icons'\r\nimport { getListServerOptions } from \"features/ManageServer/slice\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nconst { Option } = Select;\r\nfunction ExportServer(props){ \r\n    \r\n    const dispatch = useDispatch()\r\n    const [form] = Form.useForm();\r\n    const fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\r\n    // const fileExtension = '.xlsx';\r\n    const [csvData, setCSVData] = useState(null)\r\n    const [keyword, setkeyword] = useState(\"\");\r\n    const fileName = SERVER_CONSTANTS.SERVER_EXPORT_FILE; \r\n    const { lstServer } = useSelector(\r\n        (state) => state.serverManagement\r\n    );\r\n    const shouldGetData = props.visible\r\n    useEffect(() => {\r\n        if(shouldGetData)\r\n            dispatch(getListServerOptions());\r\n      }, [shouldGetData]);\r\n\r\n\r\n    const options = lstServer.filter((value) => value.IpAddress.includes(keyword))\r\n        .map((value, index) => {\r\n        return (\r\n            <Option value={value.IpAddress} key={value.IpAddress}>\r\n            {value.IpAddress}\r\n            </Option>\r\n        );\r\n    });\r\n\r\n    function exportToXLSX(csvData, fileName, type)  {\r\n        if(csvData.length === 0){\r\n            csvData = [{\r\n                Name: null,\r\n                IpAddress: null,\r\n                StartDate: null,\r\n                EndDate: null,\r\n                IsActive: null,\r\n                CreatedBy: null,\r\n                CreatedDate: null,\r\n                UpdatedBy: null,\r\n                UpdatedDate: null,\r\n                DeletedBy: null,\r\n                DeletedDate: null,\r\n                IsDeleted: null\r\n            }]\r\n        }\r\n        const ws = XLSX.utils.json_to_sheet(csvData.map(({OwnerId, OwnerName, ...data}) => data));\r\n        const wb = { Sheets: { 'data': ws }, SheetNames: ['data'] };\r\n        const excelBuffer = XLSX.write(wb, { bookType: type, type: 'array' });\r\n        const data = new Blob([excelBuffer], {type: fileType});\r\n        FileSaver.saveAs(data, fileName + '.' + type);\r\n    }\r\n\r\n    function onFinish(values) {\r\n        //console.log(values);\r\n        // props.setLoading(true);\r\n        let filterColumn = SERVER_CONSTANTS.DEFAULT_FILTER_COLUMN\r\n        let filterKeys = SERVER_CONSTANTS.DEFAULT_FILTER_KEYS\r\n        if(values.Status){\r\n            if(values.Status.includes('deleted')){\r\n                if(values.Status.length === 1){\r\n                    filterColumn = 'Deleted'\r\n                }\r\n                else{\r\n                    filterColumn = 'Status+Deleted'\r\n                    filterKeys = values.Status.filter(x => x !== 'deleted').join(',')\r\n                }\r\n            }   \r\n            else{\r\n                filterColumn = 'Status'\r\n                filterKeys = values.Status.join(',')\r\n            }\r\n        }\r\n        return exportServerListApi(\r\n            {\r\n                serverName: values.ServerName? values.ServerName.trim(): undefined,\r\n                ipAddressList: values.IpAddress? values.IpAddress: undefined,\r\n                startDate: values.FromDate? values.FromDate.format(\"YYYY-MM-DD HH:mm:ss\"): undefined,\r\n                endDate: values.ToDate? values.ToDate.format(\"YYYY-MM-DD HH:mm:ss\"): undefined,\r\n                filterColumn: filterColumn,\r\n                filterKeys: filterKeys\r\n            }\r\n        )\r\n        .then((res) => {\r\n            //console.log(res)\r\n            setCSVData(res.data)\r\n        })\r\n        // .catch((err) => {//console.log(err)});\r\n    }\r\n\r\n    const handleExport = (type) => {\r\n        exportToXLSX(csvData, fileName, type);\r\n        // props.setVisible(false);\r\n    }\r\n\r\n    const handleMenuClick = (e) => {\r\n        handleExport(e.key);\r\n    }\r\n\r\n    const menu = (\r\n        <Menu onClick={handleMenuClick}>\r\n            <Menu.Item key=\"csv\">\r\n                <VerticalAlignBottomOutlined /> .CSV \r\n            </Menu.Item>\r\n            <Menu.Item key=\"xlsx\">\r\n                <VerticalAlignBottomOutlined /> .XLSX\r\n            </Menu.Item>\r\n        </Menu>\r\n    );\r\n\r\n    \r\n    function onSearchServer(value) {\r\n        setkeyword(value);\r\n    }\r\n\r\n    const statusOptions = [\r\n        <Option value={'1'} key={'active'}>Active</Option>,\r\n        <Option value={'0'} key={'inactive'}>Inactive</Option>,\r\n        <Option value={'deleted'} key={'deleted'}>Deleted</Option>\r\n    ]\r\n\r\n    return (\r\n        <Modal\r\n            title= {\"Export server list\"}\r\n            centered     \r\n            visible={props.visible}\r\n            onCancel={()=>{props.setVisible(false);}}\r\n            okButtonProps={{ style: { display: 'none' } }}\r\n            cancelButtonProps={{ style: { display: 'none' } }}\r\n            forceRender={true} \r\n            width={'70vw'}>\r\n            <Form  form={form} id=\"exportForm\"  onFinish={onFinish} \r\n                layout=\"vertical\">\r\n                <Form.Item>\r\n                    <Form.Item label=\"Server name\"  style={{ display: 'inline-block', width: 'calc(50% - 16px)', margin: '0 8px' }}\r\n                            name='ServerName'>\r\n                            <Input  />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item label=\"IP Address\"  style={{ display: 'inline-block', width: 'calc(50% - 16px)', margin: '0 8px' }}\r\n                                name='IpAddress'>\r\n                        <Select showSearch onSearch={onSearchServer} mode=\"multiple\" >\r\n                            {options}\r\n                        </Select>\r\n                        {/* <Input></Input> */}\r\n                    </Form.Item>\r\n                </Form.Item> \r\n\r\n                <Form.Item>\r\n                    <Form.Item label=\"From date\" style={{ display: 'inline-block', width: 'calc(50% - 16px)', margin: '0 8px'  }} \r\n                                name='FromDate'>\r\n                        <DatePicker showTime  style={{  width: '100%' }}/>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item label=\"To date\" style={{ display: 'inline-block', width: 'calc(50% - 16px)', margin: '0 8px' }}\r\n                                name='ToDate'>\r\n                        <DatePicker showTime style={{  width: '100%' }}/>\r\n                        \r\n                    </Form.Item>\r\n                </Form.Item>\r\n\r\n                <Form.Item>\r\n                    <Form.Item label=\"Status\" name='Status' style={{ display: 'inline-block', width: 'calc(50% - 16px)', margin: '0 8px' }}>\r\n                        <Select placeholder=\"Select a status\" mode=\"multiple\"  >\r\n                            {statusOptions}\r\n                        </Select>\r\n                    </Form.Item>\r\n                </Form.Item>\r\n\r\n                <Form.Item>\r\n                    <Button form=\"exportForm\" key=\"submit\" type=\"primary\" htmlType=\"submit\" style={{margin: '0px 8px'}}>Filter</Button>\r\n                    <Dropdown overlay={menu} disabled={!csvData} style={{margin: '0px 8px'}}>\r\n                        <Button>\r\n                            <VerticalAlignBottomOutlined /> Export <DownOutlined />\r\n                        </Button>\r\n                    </Dropdown>\r\n                </Form.Item>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default ExportServer;","import React, { useState } from 'react';\r\nimport { Button, Modal, Upload, message} from \"antd\";\r\nimport { InboxOutlined } from '@ant-design/icons';\r\nimport { importServerListApi } from 'api/server';\r\nimport * as XLSX from 'xlsx';\r\nimport { setRefresh } from 'features/ManageServer/slice';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getExtension } from 'utils/helper';\r\n\r\nconst { Dragger } = Upload;\r\n\r\nfunction ImportServer(props){\r\n    const dispatch = useDispatch()\r\n    const [fileList, setFileList] = useState([]);\r\n    const [importFile, setImportFile] = useState(null);\r\n    const {refresh} = useSelector((state) => state.serverManagement)\r\n    // Handle upload file change\r\n    const handleChange = info => {\r\n      let fileList = [...info.fileList];\r\n      fileList = fileList.slice(-1);\r\n      setFileList( fileList );\r\n      setImportFile(fileList[0]?fileList[0]: null);\r\n    };\r\n\r\n    // Upload properties\r\n    const uploadProps = {\r\n      name:'file',\r\n      onChange: handleChange,\r\n      multiple: false,\r\n      beforeUpload: () => { return false },\r\n      accept:\".xlsx, .csv\"\r\n    }\r\n\r\n    // Handle import  \r\n    const handleImport = () => {\r\n        //console.log(importFile)\r\n        if(importFile){\r\n          var file = importFile.originFileObj\r\n          if(['xlsx', 'csv'].includes(getExtension(file.name))){\r\n                let fileReader = new FileReader();\r\n                fileReader.onload = function (e) {\r\n                    // pre-process data\r\n                    let binary = \"\";\r\n                    let bytes = new Uint8Array(e.target.result);\r\n                    let length = bytes.byteLength;\r\n                    for (var i = 0; i < length; i++) {\r\n                        binary += String.fromCharCode(bytes[i]);\r\n                    }\r\n                    // call 'xlsx' to read the file\r\n                    let workbook = XLSX.read(binary, {type: 'binary', cellDates:true, cellStyles:true});\r\n                    let sheet_name_list = workbook.SheetNames;\r\n                    let importData = XLSX.utils.sheet_to_json(workbook.Sheets[sheet_name_list[0]], {dateNF:'yyyy/mm/dd HH:mm:ss'});\r\n\r\n                    importServerListApi({\r\n                        data: importData\r\n                    })\r\n                    .then((res) => {\r\n                        //console.log('Import customer res',res)\r\n                        dispatch(setRefresh(!refresh))\r\n                        props.setVisible(false)\r\n                    }).catch((err) => {\r\n                        //console.log(\"Import error\", err)\r\n                        message.error(\"Some records might be in incorrect format\")\r\n                    }).finally(() => {\r\n                        message.success(\"Import server list done\")\r\n                    });\r\n                };\r\n                fileReader.readAsArrayBuffer(file);\r\n            }\r\n            else{\r\n                message.error(\"Wrong file type\")\r\n            }\r\n        }\r\n        else{\r\n          message.error(`No file chosen`);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            title= {\"Import server list\"}\r\n            centered\r\n            visible={props.visible}\r\n            onCancel={()=>{props.setVisible(false)}}\r\n            okButtonProps={{ style: { display: 'none' } }}\r\n            cancelButtonProps={{ style: { display: 'none' } }}\r\n            forceRender={true} \r\n            width={'70vw'}\r\n            footer={[\r\n              <Button key=\"submit\" type=\"primary\" onClick={handleImport} disabled={!importFile}>\r\n                  Import\r\n              </Button>\r\n              ,\r\n              <Button key=\"cancel\" onClick={()=>{props.setVisible(false); setImportFile(null); setFileList([])}}>\r\n                  Cancel\r\n              </Button>\r\n            ]}\r\n            >\r\n            <Dragger {...uploadProps} fileList={fileList}>\r\n                <p className=\"ant-upload-drag-icon\">\r\n                <InboxOutlined />\r\n                </p>\r\n                <p className=\"ant-upload-text\">Click or drag file to this area to upload</p>\r\n                <p className=\"ant-upload-hint\">\r\n                Support for a single or bulk upload. Strictly prohibit from uploading company data or other\r\n                band files\r\n                </p>\r\n            </Dragger>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default ImportServer;","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Table,\r\n  Pagination,\r\n  Input,\r\n  Button,\r\n  Modal,\r\n  Tag,\r\n  Menu,\r\n  Dropdown,\r\n  message,\r\n  Row,\r\n  Col,\r\n  Space,\r\n} from \"antd\";\r\n// import { UploadOutlined } from '@ant-design/icons';\r\nimport \"./index.scss\";\r\nimport {\r\n  getServersApi,\r\n  deleteServerApi,\r\n  updateMultipleStatusApi,\r\n  recoverServerApi,\r\n} from \"api/server\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setRefresh } from \"features/ManageServer/slice\";\r\nimport AddEditServerModal from \"components/ManageServer/AddEditServerModal\";\r\nimport { SERVER_CONSTANTS } from \"constants/ManageServer/server\";\r\nimport { ExclamationCircleOutlined } from \"@ant-design/icons\";\r\nimport ExportServer from \"components/ManageServer/ExportServer\";\r\nimport ImportServer from \"components/ManageServer/ImportServer\";\r\nimport { DownOutlined, UploadOutlined } from \"@ant-design/icons\";\r\n\r\nMainPage.propTypes = {};\r\n\r\nconst { Search } = Input;\r\nconst { confirm } = Modal;\r\n\r\nfunction MainPage() {\r\n  const dispatch = useDispatch();\r\n  const { refresh } = useSelector((state) => state.serverManagement);\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [total, setTotal] = useState(0);\r\n  const [pagination, setPagination] = useState({\r\n    page: 1,\r\n    pageSize: 10,\r\n  });\r\n  const [sorter, setSorter] = useState({\r\n    sortColumn: SERVER_CONSTANTS.DEFAULT_SORT_COLUMN,\r\n    sortOrder: SERVER_CONSTANTS.DEFAULT_SORT_ORDER,\r\n  });\r\n  const [searchKeyword, setSearchKeyword] = useState(\"\");\r\n  const [filter, setFilter] = useState({\r\n    filterColumn: SERVER_CONSTANTS.DEFAULT_FILTER_COLUMN,\r\n    filterKeys: SERVER_CONSTANTS.DEFAULT_FILTER_KEYS,\r\n  });\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const [exporting, setExporting] = useState(false);\r\n  const [importing, setImporting] = useState(false);\r\n  const [editRequest, setEditRequest] = useState(null);\r\n  // const [checkingRows, setCheckingRows] = useState([])\r\n  const [selectingServerIdList, setSelectingServerIdList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(\r\n      pagination,\r\n      sorter.sortColumn,\r\n      sorter.sortOrder,\r\n      searchKeyword,\r\n      filter\r\n    );\r\n  }, [pagination, sorter, searchKeyword, refresh, filter]);\r\n\r\n  useEffect(() => {\r\n    handleModalActivate();\r\n  }, [editRequest]);\r\n\r\n  // Table columns\r\n  const columns = [\r\n    {\r\n      title: \"Server\",\r\n      dataIndex: \"Name\",\r\n      width: \"30%\",\r\n      sorter: true,\r\n    },\r\n    {\r\n      title: \"Ip address\",\r\n      dataIndex: \"IpAddress\",\r\n      width: \"12%\",\r\n      sorter: true,\r\n    },\r\n    {\r\n      title: \"Start Date\",\r\n      dataIndex: \"StartDate\",\r\n      width: \"12%\",\r\n      sorter: true,\r\n    },\r\n    {\r\n      title: \"End Date\",\r\n      dataIndex: \"EndDate\",\r\n      sorter: true,\r\n      width: \"12%\",\r\n    },\r\n    {\r\n      title: \"Status\",\r\n      width: \"12%\",\r\n      key: \"Status\",\r\n      render: (record) => {\r\n        if (record.IsDeleted) return <Tag color=\"gray\">Deleted</Tag>;\r\n        return record.IsActive ? (\r\n          <Tag color=\"green\">Active</Tag>\r\n        ) : (\r\n          <Tag color=\"red\">InActive</Tag>\r\n        );\r\n      },\r\n      filters: [\r\n        { text: \"Active\", value: \"1\" },\r\n        { text: \"InActive\", value: \"0\" },\r\n        { text: \"Deleted\", value: \"deleted\" },\r\n      ],\r\n    },\r\n    {\r\n      title: \"Owner\",\r\n      dataIndex: \"OwnerName\",\r\n      width: \"12%\",\r\n      sorter: true,\r\n    },\r\n    {\r\n      title: \"Action\",\r\n      key: \"operation\",\r\n      width: \"10%\",\r\n      render: (record) => (\r\n        <Space size=\"middle\" style={{ display: \"flex\" }}>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => {\r\n              setEditRequest({\r\n                type: SERVER_CONSTANTS.UPDATE_SERVER_TYPE,\r\n                data: record,\r\n              });\r\n            }}\r\n          >\r\n            Edit\r\n          </Button>\r\n          {record.IsDeleted ? (\r\n            <Button\r\n              danger\r\n              type=\"primary\"\r\n              onClick={() => {\r\n                showRecoverModal(record);\r\n              }}\r\n            >\r\n              Recover\r\n            </Button>\r\n          ) : (\r\n            <Button\r\n              danger\r\n              type=\"primary\"\r\n              onClick={() => {\r\n                showDeleteModal(record);\r\n              }}\r\n            >\r\n              Delete\r\n            </Button>\r\n          )}\r\n        </Space>\r\n      ),\r\n    },\r\n    //   {\r\n    //     title: 'Delete',\r\n    //     key: 'operation',\r\n    //     width: \"10%\",\r\n    //     render: (record) => ,\r\n    //   }\r\n  ];\r\n\r\n  // Handle change in page number\r\n  const handlePageChange = (pageNumber, pageSize) => {\r\n    // //console.log(pageNumber);\r\n    var newPageNum = pageNumber;\r\n    if (\r\n      pageSize !== pagination.pageSize &&\r\n      Math.ceil(total / pageSize) < pagination.pageNumber\r\n    )\r\n      newPageNum = Math.ceil(\r\n        (pagination.pageSize * pagination.page) / pageSize\r\n      );\r\n    setPagination({ page: newPageNum, pageSize: pageSize });\r\n    //console.log(\"Fetch after pagination change\");\r\n    setSelectingServerIdList([]);\r\n  };\r\n\r\n  // Fetch data\r\n  const fetch = (pagination, sortColumn, sortOrder, keyword, filter) => {\r\n    // //console.log(filter);\r\n    if (!exporting) {\r\n      setLoading(true);\r\n      return getServersApi({\r\n        current: pagination.page,\r\n        pageSize: pagination.pageSize,\r\n        sortColumn: sortColumn,\r\n        sortOrder: sortOrder,\r\n        keyword: keyword,\r\n        filterColumn: filter.filterColumn,\r\n        filterKeys: filter.filterKeys,\r\n      })\r\n        .then((res) => {\r\n          //console.log(\"Fetch res\", res);\r\n          setLoading(false);\r\n          setTableData(res.data, res.total);\r\n          if(res.total!=total){\r\n            setSelectingServerIdList([])\r\n          }\r\n          showTotal(res.total);\r\n        })\r\n        .catch((err) => {\r\n          //console.log(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  // Set table data\r\n  const setTableData = (data, total) => {\r\n    //console.log(data);\r\n    setTotal(total);\r\n    setData(data);\r\n  };\r\n\r\n  // Handle table change: sort, filter\r\n  const handleTableChange = (pagi, filters, sorter) => {\r\n    //console.log(\"Filters; \", filters);\r\n    var newSortColumn = sorter.column ? sorter.column.dataIndex : \"Name\";\r\n    var newSortOrder = sorter.order === \"descend\" ? \"descend\" : \"ascend\";\r\n    // dispatch(setSort({sortColumn: newSortColumn, sortOrder: newSortOrder }));\r\n    setSorter({ sortColumn: newSortColumn, sortOrder: newSortOrder });\r\n    // Filter\r\n    let filterColumn = SERVER_CONSTANTS.DEFAULT_FILTER_COLUMN;\r\n    let filterKeys = SERVER_CONSTANTS.DEFAULT_FILTER_KEYS;\r\n    if (filters.Status) {\r\n      if (filters.Status.includes(\"deleted\")) {\r\n        if (filters.Status.length === 1) {\r\n          filterColumn = \"Deleted\";\r\n        } else {\r\n          filterColumn = \"Status+Deleted\";\r\n          filterKeys = filters.Status.filter((x) => x !== \"deleted\").join(\",\");\r\n        }\r\n      } else {\r\n        filterColumn = \"Status\";\r\n        filterKeys = filters.Status.join(\",\");\r\n      }\r\n    }\r\n    //console.log(\"New filter column\", filterColumn);\r\n    //console.log(\"New filter keys\", filterKeys);\r\n    // var filterKeys = filters.Status? filters.Status.join(): SERVER_CONSTANTS.DEFAULT_FILTER_KEYS\r\n    if (filter.filterKeys !== filterKeys) {\r\n      setPagination({ page: 1, pageSize: pagination.pageSize });\r\n    }\r\n    setFilter({ filterColumn: filterColumn, filterKeys: filterKeys });\r\n    // //console.log(\"Fetch after sort change\");\r\n    setSelectingServerIdList([]);\r\n  };\r\n\r\n  //Handle search\r\n  const handleSearchServer = (keyword) => {\r\n    setSearchKeyword(keyword);\r\n    setPagination({ page: 1, pageSize: pagination.pageSize });\r\n    // setCheckingRows([])\r\n    setSelectingServerIdList([]);\r\n    // //console.log(\"Fetch after search\");\r\n  };\r\n\r\n  // Handle on edit click\r\n  const handleModalActivate = () => {\r\n    if (editRequest) {\r\n      setModalVisible(true);\r\n    }\r\n  };\r\n\r\n  // Show delete modal\r\n  const showDeleteModal = (record) => {\r\n    confirm({\r\n      title: \"Do you want to delete server \" + record.Name,\r\n      icon: <ExclamationCircleOutlined />,\r\n      content: \"Warning: The deletion will affect customers\",\r\n      onOk() {\r\n        handleDeleteServer(record.Id);\r\n      },\r\n      onCancel() {},\r\n    });\r\n  };\r\n\r\n  // Handle delete server\r\n  const handleDeleteServer = (id) => {\r\n    return deleteServerApi({ id: id })\r\n      .then((res) => {\r\n        //console.log(\"Delete response\", res);\r\n        dispatch(setRefresh(!refresh));\r\n      })\r\n      .catch(() => message.error(\"Oops errors!\"));\r\n  };\r\n\r\n  // Show delete modal\r\n  const showRecoverModal = (record) => {\r\n    confirm({\r\n      title: \"Do you want to recover server \" + record.Name,\r\n      icon: <ExclamationCircleOutlined />,\r\n      content: \"Warning: You need to edit start date and end date of server\",\r\n      onOk() {\r\n        handleRecoverServer(record.Id);\r\n      },\r\n      onCancel() {},\r\n    });\r\n  };\r\n\r\n  // Handle recover server\r\n  const handleRecoverServer = (id) => {\r\n    return recoverServerApi({ id: id })\r\n      .then((res) => {\r\n        //console.log(\"Recover response\", res);\r\n        dispatch(setRefresh(!refresh));\r\n      })\r\n      .catch(() => message.error(\"Oops errors!\"));\r\n  };\r\n\r\n  // Handle toggle export\r\n  const toggleExport = () => {\r\n    setExporting((exporting) => !exporting);\r\n  };\r\n\r\n  // Toggle import modal\r\n  const toggleImport = () => {\r\n    setImporting((importing) => !importing);\r\n  };\r\n\r\n  // Handle row selected\r\n  const rowSelection = {\r\n    selectedRowKeys: selectingServerIdList,\r\n    onChange: (selectedRowKeys, selectedRows) => {\r\n      // //console.log(\r\n      //   `selectedRowKeys: ${selectedRowKeys}`,\r\n      //   \"selectedRows: \",\r\n      //   selectedRows\r\n      // );\r\n      // setCheckingRows(selectedRows);\r\n      setSelectingServerIdList(selectedRowKeys);\r\n    },\r\n  };\r\n\r\n  // Show total record\r\n  const showTotal = (total) => {\r\n    return `Total ${total} items`;\r\n  };\r\n\r\n  // Handle set status of checking rows\r\n  const handleSetStatus = (status) => {\r\n    return updateMultipleStatusApi({\r\n      listServer: selectingServerIdList,\r\n      status: status,\r\n    })\r\n      .then((res) => {\r\n        // //console.log(\"Multiple update\", res);\r\n        message.success(\"Successfully change status of servers\");\r\n        dispatch(setRefresh(!refresh));\r\n      })\r\n      .catch((err) => {\r\n        // //console.log(\"Activate all err\", err);\r\n        message.error(\"Something went wrong\");\r\n      });\r\n  };\r\n\r\n  // Handle action menu onClick\r\n  const handleMenuClick = (e) => {\r\n    // //console.log(e)\r\n    handleSetStatus(e.key === \"activate\");\r\n  };\r\n\r\n  // Menu of action button\r\n  const actionMenu = (\r\n    <Menu onClick={handleMenuClick}>\r\n      <Menu.Item key=\"activate\">Activate all</Menu.Item>\r\n      <Menu.Item key=\"deactivate\">Deactivate all</Menu.Item>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col span={8}>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => setEditRequest(SERVER_CONSTANTS.ADD_SERVER_REQUEST)}\r\n          >\r\n            Create new server\r\n          </Button>\r\n\r\n          <AddEditServerModal\r\n            request={editRequest}\r\n            modalVisible={modalVisible}\r\n            setModalVisible={setModalVisible}\r\n            setEditRequest={setEditRequest}\r\n          ></AddEditServerModal>\r\n        </Col>\r\n        <Col span={8} offset={8}>\r\n          <Search\r\n            className=\"search-bar\"\r\n            placeholder=\"Input search text\"\r\n            enterButton\r\n            onSearch={(value) => handleSearchServer(value.trim())}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row style={{ marginTop: \"10px\", marginBottom: \"10px\" }}>\r\n        <Col span={8}>\r\n          <Dropdown\r\n            overlay={actionMenu}\r\n            disabled={selectingServerIdList.length === 0}\r\n          >\r\n            <Button>\r\n              Multi actions <DownOutlined />\r\n            </Button>\r\n          </Dropdown>\r\n          {selectingServerIdList.length > 0 && (\r\n            <div\r\n              style={{ display: \"inline-block\", padding: \"0px 20px 0px 20px\" }}\r\n            >\r\n              {\" \"}\r\n              {selectingServerIdList.length} selected!\r\n            </div>\r\n          )}\r\n        </Col>\r\n        <Col span={8}></Col>\r\n        <Col\r\n          span={8}\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            justifyContent: \"space-between\",\r\n          }}\r\n        >\r\n          <Button onClick={toggleImport}>Import server list</Button>\r\n          <ImportServer\r\n            visible={importing}\r\n            setVisible={setImporting}\r\n          ></ImportServer>\r\n\r\n          <Button onClick={toggleExport}>Export server list</Button>\r\n          <ExportServer\r\n            id=\"export-server\"\r\n            className=\"export-server\"\r\n            visible={exporting}\r\n            setVisible={setExporting}\r\n          ></ExportServer>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Table\r\n        columns={columns}\r\n        rowKey={(record) => record.Id}\r\n        rowSelection={rowSelection}\r\n        dataSource={data}\r\n        pagination={false}\r\n        loading={loading}\r\n        onChange={handleTableChange}\r\n        scroll={{ x: 1500}}\r\n      />\r\n      <Row>\r\n        <Col span={12} offset={6}>\r\n          <Pagination\r\n            showQuickJumper\r\n            showSizeChanger\r\n            total={total}\r\n            current={pagination.page}\r\n            pageSize={pagination.pageSize}\r\n            onChange={handlePageChange}\r\n            showTotal={showTotal}\r\n            style={{ margin: \"8px 8px\" }}\r\n            \r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MainPage;\r\n","import React, { Suspense } from \"react\";\r\nimport { Route, Switch, useRouteMatch } from \"react-router-dom\";\r\n\r\n// import \"./index.scss\";\r\n\r\nimport NotFound from \"../../components/NotFound\";\r\nimport MainPage from \"./pages/Main\";\r\n// import DetailPage from \"./pages/Detail\";\r\nimport { AbilityContext } from \"permission/can\";\r\nimport { useAbility } from \"@casl/react\";\r\n\r\nServer.propTypes = {};\r\n\r\nfunction Server() {\r\n  const ability = useAbility(AbilityContext);\r\n  console.log(ability.can(\"access\", \"manage-user\"));\r\n  const match = useRouteMatch();\r\n  return (\r\n    <Suspense fallback={<div>Loading ...</div>}>\r\n      <Switch>\r\n        <Route exact path={match.url} component={MainPage} />\r\n        {/* <Route exact path={`${match.url}/:userId`} component={DetailPage} /> */}\r\n        <Route component={NotFound} />\r\n      </Switch>\r\n    </Suspense>\r\n  );\r\n}\r\n\r\nexport default Server;\r\n"],"sourceRoot":""}