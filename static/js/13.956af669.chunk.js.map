{"version":3,"sources":["components/ManageUser/CreateUserModal.js","components/ManageUser/UpdateUserModal.js","features/ManageUser/pages/Main/index.js","features/ManageUser/pages/Detail/index.js","features/ManageUser/index.js"],"names":["roles","Select","Option","AutoComplete","value","label","formItemLayout","labelCol","xs","span","sm","wrapperCol","CollectionCreateForm","visible","onCreate","onCancel","Form","useForm","form","title","okText","cancelText","onOk","validateFields","then","values","resetFields","catch","info","console","log","name","onFinish","initialValues","role","prefix","scrollToFirstError","Item","rules","type","message","required","min","pattern","hasFeedback","Password","dependencies","getFieldValue","validator","rule","Promise","reject","resolve","QuestionCircleOutlined","whitespace","options","CreateUserModal","pros","useState","setVisible","onClick","insertUsersApi","rolelist","firstname","trim","lastname","username","res","status","success","statusText","onSubmitModal","error","data","record","switchState","setSwitchState","useEffect","IsActive","email","Email","FirstName","LastName","UserName","RoleName","disabled","checkedChildren","unCheckedChildren","checked","onChange","UpdateUserModal","updateUsersApi","Id","confirm","Modal","Search","Input","MainPage","selectedRowKeys","setSelectedRowKeys","columns","dataIndex","sorter","filters","text","render","val","color","key","filterMultiple","_","size","refetch","danger","row","icon","ExclamationCircleOutlined","content","deleteUsersApi","setTimeout","Math","random","e","a","warning","acdeacListUsersApi","listid","join","isactive","menu","CheckCircleOutlined","CloseCircleOutlined","SearchKey","setSearchKey","SortBy","setSortBy","SortOrder","setSortOrder","Role","setRole","undefined","setIsActive","PageNo","setPageNo","PageSize","setPageSize","useDispatch","setData","total","setTotal","loading","setLoading","useSelector","state","userManagement","fetch","showTotal","params","getUsersApi","length","TotalItem","rowSelection","newSelectedRowKeys","hasSelected","placeholder","onSearch","SearchKeyw","enterButton","autoFocus","style","marginBottom","marginTop","overlay","DownOutlined","marginLeft","rowKey","dataSource","pagination","field","order","scroll","x","offset","showQuickJumper","showSizeChanger","pageNumber","pageSize","ceil","current","DetailPage","props","User","ability","useAbility","AbilityContext","can","match","useRouteMatch","fallback","exact","path","url","component","NotFound"],"mappings":"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","file":"static/js/13.956af669.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { insertUsersApi } from \"../../api/user\";\r\nimport \"antd/dist/antd.css\";\r\nimport {\r\n  Form,\r\n  Input,\r\n  Tooltip,\r\n  Cascader,\r\n  Select,\r\n  Button,\r\n  AutoComplete,\r\n  Modal,\r\n  message,\r\n} from \"antd\";\r\nimport { QuestionCircleOutlined } from \"@ant-design/icons\";\r\n\r\nconst { Option } = Select;\r\nconst AutoCompleteOption = AutoComplete.Option;\r\n\r\nconst roles = [\r\n  {\r\n    value: \"admin\",\r\n    label: \"admin\",\r\n  },\r\n  {\r\n    value: \"normal-user\",\r\n    label: \"normal-user\",\r\n  },\r\n  {\r\n    value: \"contact-point\",\r\n    label: \"contact-point\",\r\n  },\r\n  {\r\n    value: \"dc-member\",\r\n    label: \"dc-member\",\r\n  },\r\n];\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 8,\r\n    },\r\n  },\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n    },\r\n  },\r\n};\r\nconst tailFormItemLayout = {\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n      offset: 0,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n      offset: 8,\r\n    },\r\n  },\r\n};\r\n\r\nconst CollectionCreateForm = ({ visible, onCreate, onCancel }) => {\r\n  const [form] = Form.useForm();\r\n  const onFinish = (values) => {\r\n    console.log(\"Received values of form: \", values);\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      visible={visible}\r\n      title=\"Create a new user\"\r\n      okText=\"Create\"\r\n      cancelText=\"Cancel\"\r\n      onCancel={onCancel}\r\n      onOk={() => {\r\n        form\r\n          .validateFields()\r\n          .then((values) => {\r\n            form.resetFields();\r\n            onCreate(values);\r\n          })\r\n          .catch((info) => {\r\n            console.log(\"Validate Failed:\", info);\r\n          });\r\n      }}\r\n    >\r\n      <Form\r\n        {...formItemLayout}\r\n        form={form}\r\n        name=\"register\"\r\n        onFinish={onFinish}\r\n        initialValues={{\r\n          role: [],\r\n          prefix: \"86\",\r\n        }}\r\n        scrollToFirstError\r\n      >\r\n        <Form.Item\r\n          name=\"email\"\r\n          label=\"E-mail\"\r\n          rules={[\r\n            {\r\n              type: \"email\",\r\n              message: \"The input is not valid E-mail!\",\r\n            },\r\n            {\r\n              required: true,\r\n              message: \"Please input your E-mail!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"password\"\r\n          label=\"Password\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input your password!\",\r\n            },\r\n            { min: 5, message: \"Password must be minimum 5 characters.\" },\r\n            {\r\n              pattern: \"(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])\",\r\n              message:\r\n                \"Password must include number, uppercase and lowercase character\",\r\n            },\r\n          ]}\r\n          hasFeedback\r\n        >\r\n          <Input.Password />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"confirm\"\r\n          label=\"Confirm Password\"\r\n          dependencies={[\"password\"]}\r\n          hasFeedback\r\n          rules={[\r\n            { min: 5, message: \"Password must be minimum 5 characters.\" },\r\n            {\r\n              pattern: \"(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])\",\r\n              message:\r\n                \"Password must include number, uppercase and lowercase character\",\r\n            },\r\n            {\r\n              required: true,\r\n              message: \"Please confirm your password!\",\r\n            },\r\n            ({ getFieldValue }) => ({\r\n              validator(rule, value) {\r\n                if (!value || getFieldValue(\"password\") === value) {\r\n                  return Promise.resolve();\r\n                }\r\n\r\n                return Promise.reject(\r\n                  \"The two passwords that you entered do not match!\"\r\n                );\r\n              },\r\n            }),\r\n          ]}\r\n        >\r\n          <Input.Password />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"username\"\r\n          label={\r\n            <span>\r\n              Username&nbsp;\r\n              <Tooltip title=\"What do you want others to call you?\">\r\n                <QuestionCircleOutlined />\r\n              </Tooltip>\r\n            </span>\r\n          }\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input your username!\",\r\n              whitespace: true,\r\n            },\r\n            { min: 5, message: \"Username must be minimum 5 characters.\" },\r\n            {\r\n              pattern: \"(?=[0-9a-zA-Z](.*))\",\r\n              message: \"Username must not null\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"rolelist\"\r\n          label=\"Role permission\"\r\n          rules={[\r\n            {\r\n              type: \"array\",\r\n              required: true,\r\n              message: \"Please select role!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Cascader options={roles} />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"firstname\"\r\n          label=\"First Name\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input Firstname!\",\r\n            },\r\n            {\r\n              pattern: \"(?=[0-9a-zA-Z](.*))\",\r\n              message: \"Firstname must not null\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"lastname\"\r\n          label=\"Last Name\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input Lastname!\",\r\n            },\r\n            {\r\n              pattern: \"(?=[0-9a-zA-Z](.*))\",\r\n              message: \"Lastname must not null\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst CreateUserModal = (pros) => {\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  const onCreate = (values) => {\r\n    console.log(\"Received values of form: \", values);\r\n    insertUsersApi({\r\n      ...values,\r\n      role: values.rolelist[0],\r\n      firstname: values.firstname.trim(),\r\n      lastname: values.lastname.trim(),\r\n      username: values.username.trim(),\r\n    })\r\n      .then((res) => {\r\n        console.log(\"res from insert\", res);\r\n        if (res.status === 201) {\r\n          message.success(res.statusText);\r\n        }\r\n        pros.onSubmitModal();\r\n      })\r\n      .catch((error) => {\r\n        message.error(error.data.message);\r\n      });\r\n    pros.onSubmitModal();\r\n    setVisible(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        type=\"primary\"\r\n        onClick={() => {\r\n          setVisible(true);\r\n        }}\r\n      >\r\n        Create New User\r\n      </Button>\r\n      <CollectionCreateForm\r\n        visible={visible}\r\n        onCreate={onCreate}\r\n        onCancel={() => {\r\n          setVisible(false);\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreateUserModal;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { updateUsersApi } from \"../../api/user\";\r\nimport \"antd/dist/antd.css\";\r\nimport {\r\n  Form,\r\n  Input,\r\n  Tooltip,\r\n  Cascader,\r\n  Select,\r\n  Button,\r\n  AutoComplete,\r\n  Modal,\r\n  Switch,\r\n  message,\r\n} from \"antd\";\r\nimport { QuestionCircleOutlined } from \"@ant-design/icons\";\r\n\r\nconst { Option } = Select;\r\nconst AutoCompleteOption = AutoComplete.Option;\r\n\r\nconst roles = [\r\n  {\r\n    value: \"admin\",\r\n    label: \"admin\",\r\n  },\r\n  {\r\n    value: \"normal-user\",\r\n    label: \"normal-user\",\r\n  },\r\n  {\r\n    value: \"contact-point\",\r\n    label: \"contact-point\",\r\n  },\r\n  {\r\n    value: \"dc-member\",\r\n    label: \"dc-member\",\r\n  },\r\n];\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 8,\r\n    },\r\n  },\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n    },\r\n  },\r\n};\r\nconst tailFormItemLayout = {\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n      offset: 0,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n      offset: 8,\r\n    },\r\n  },\r\n};\r\n\r\nconst CollectionCreateForm = ({\r\n  visible,\r\n  onCreate,\r\n  onCancel,\r\n  record,\r\n  switchState,\r\n  setSwitchState,\r\n}) => {\r\n  const [form] = Form.useForm();\r\n\r\n  useEffect(() => {\r\n    // console.log(\"didamount record\", record);\r\n    // form.setFieldsValue({\r\n    //   email: record.Email,\r\n    //   firstname: record.FirstName,\r\n    //   lastname: record.LastName,\r\n    //   password: record.HashPasswd,\r\n    //   confirm: record.HashPasswd,\r\n    //   username: record.UserName,\r\n    //   role: [record.RoleName],\r\n    // });\r\n    setSwitchState(record.IsActive);\r\n  }, [record]);\r\n\r\n  const onFinish = (values) => {\r\n    console.log(\"Received values of form: \", { ...values, switchState });\r\n  };\r\n\r\n  const [autoCompleteResult, setAutoCompleteResult] = useState([]);\r\n\r\n  function onChange(checked) {\r\n    console.log(`switch to ${checked}`);\r\n    setSwitchState(checked);\r\n  }\r\n  return (\r\n    <Modal\r\n      visible={visible}\r\n      // title={record.Id}\r\n      title=\"Update User\"\r\n      okText=\"Update\"\r\n      cancelText=\"Cancel\"\r\n      onCancel={onCancel}\r\n      onOk={() => {\r\n        form\r\n          .validateFields()\r\n          .then((values) => {\r\n            form.resetFields();\r\n            onCreate(values);\r\n          })\r\n          .catch((info) => {\r\n            console.log(\"Validate Failed:\", info);\r\n          });\r\n      }}\r\n    >\r\n      <Form\r\n        {...formItemLayout}\r\n        form={form}\r\n        name=\"register\"\r\n        onFinish={onFinish}\r\n        initialValues={{\r\n          email: record.Email,\r\n          firstname: record.FirstName,\r\n          lastname: record.LastName,\r\n          // password: record.HashPasswd,\r\n          // confirm: record.HashPasswd,\r\n          username: record.UserName,\r\n          rolelist: [record.RoleName],\r\n          prefix: \"86\",\r\n        }}\r\n        scrollToFirstError\r\n      >\r\n        <Form.Item\r\n          name=\"email\"\r\n          label=\"E-mail\"\r\n          rules={[\r\n            {\r\n              type: \"email\",\r\n              message: \"The input is not valid E-mail!\",\r\n            },\r\n            {\r\n              required: true,\r\n              message: \"Please input your E-mail!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input disabled={true} />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"password\"\r\n          label=\"Password\"\r\n          rules={[\r\n            { min: 5, message: \"Password must be minimum 5 characters.\" },\r\n            {\r\n              pattern: \"(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])\",\r\n              message:\r\n                \"Password must include number, uppercase and lowercase character\",\r\n            },\r\n          ]}\r\n          hasFeedback\r\n        >\r\n          <Input.Password />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"confirm\"\r\n          label=\"Confirm Password\"\r\n          dependencies={[\"password\"]}\r\n          hasFeedback\r\n          rules={[\r\n            { min: 5, message: \"Password must be minimum 5 characters.\" },\r\n            {\r\n              pattern: \"(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])\",\r\n              message:\r\n                \"Password must include number, uppercase and lowercase character\",\r\n            },\r\n            ({ getFieldValue }) => ({\r\n              validator(rule, value) {\r\n                if (!value || getFieldValue(\"password\") === value) {\r\n                  return Promise.resolve();\r\n                }\r\n\r\n                return Promise.reject(\r\n                  \"The two passwords that you entered do not match!\"\r\n                );\r\n              },\r\n            }),\r\n          ]}\r\n        >\r\n          <Input.Password />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"username\"\r\n          label={\r\n            <span>\r\n              Username&nbsp;\r\n              <Tooltip title=\"What do you want others to call you?\">\r\n                <QuestionCircleOutlined />\r\n              </Tooltip>\r\n            </span>\r\n          }\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input your username!\",\r\n              whitespace: true,\r\n            },\r\n          ]}\r\n        >\r\n          <Input disabled={true} />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"rolelist\"\r\n          label=\"Role permission\"\r\n          rules={[\r\n            {\r\n              type: \"array\",\r\n              required: true,\r\n              message: \"Please select role!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Cascader options={roles} />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"firstname\"\r\n          label=\"First Name\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input Firstname!\",\r\n            },\r\n            {\r\n              pattern: \"(?=[0-9a-zA-Z](.*))\",\r\n              message: \"Firstname must not null\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"lastname\"\r\n          label=\"Last Name\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input Lastname!\",\r\n            },\r\n            {\r\n              pattern: \"(?=[0-9a-zA-Z](.*))\",\r\n              message: \"Lastname must not null\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item name=\"isactive\" label=\"Status\">\r\n          <Switch\r\n            checkedChildren=\"Active\"\r\n            unCheckedChildren=\"InActive\"\r\n            checked={switchState}\r\n            onChange={onChange}\r\n          />\r\n        </Form.Item>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst UpdateUserModal = (pros) => {\r\n  const [switchState, setSwitchState] = useState(pros.record.IsActive);\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  const onCreate = (values) => {\r\n    console.log(\"Received values of form: \", {\r\n      ...values,\r\n      IsActive: switchState,\r\n    });\r\n    updateUsersApi(pros.record.Id, {\r\n      ...values,\r\n      role: values.rolelist[0],\r\n      IsActive: switchState,\r\n    })\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          message.success(res.statusText);\r\n        }\r\n        pros.onSubmitModal();\r\n      })\r\n      .catch((error) => {\r\n        if(!switchState) setSwitchState(!switchState);\r\n        message.error(error.data.message);\r\n      });\r\n\r\n    setVisible(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        type=\"primary\"\r\n        // size={\"small\"}\r\n        // style={{ color: \"blue\", borderColor: \"blue\" }}\r\n        onClick={() => {\r\n          setVisible(true);\r\n        }}\r\n      >\r\n        Edit\r\n      </Button>\r\n      <CollectionCreateForm\r\n        visible={visible}\r\n        onCreate={onCreate}\r\n        onCancel={() => {\r\n          setVisible(false);\r\n        }}\r\n        record={pros.record}\r\n        switchState={switchState}\r\n        setSwitchState={setSwitchState}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UpdateUserModal;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Modal,\r\n  Table,\r\n  Space,\r\n  Button,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  Pagination,\r\n  Tag,\r\n  message,\r\n  Menu,\r\n  Dropdown,\r\n} from \"antd\";\r\nimport {\r\n  ExclamationCircleOutlined,\r\n  UserOutlined,\r\n  DownOutlined,\r\n  CheckCircleOutlined,\r\n  CloseCircleOutlined,\r\n} from \"@ant-design/icons\";\r\nimport \"./index.scss\";\r\nimport CreateUserModal from \"../../../../components/ManageUser/CreateUserModal.js\";\r\nimport UpdateUserModal from \"../../../../components/ManageUser/UpdateUserModal.js\";\r\nimport { getUsersApi, deleteUsersApi, acdeacListUsersApi } from \"api/user\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n// import {\r\n//   setSearchKey,\r\n//   setPageNo,\r\n//   setPageSize,\r\n//   setSortBy,\r\n//   setSortOrder,\r\n//   setRole,\r\n// } from \"../../slice\";\r\n\r\nMainPage.propTypes = {};\r\nconst { confirm } = Modal;\r\nconst { Search } = Input;\r\n\r\nfunction MainPage() {\r\n  const [selectedRowKeys, setSelectedRowKeys] = useState([]);\r\n\r\n  function showPromiseConfirm(row) {\r\n    confirm({\r\n      title: \"Do you want to delete user \" + row.UserName,\r\n      icon: <ExclamationCircleOutlined />,\r\n      content: \"Warning: The delete user cannot be recover\",\r\n      onOk() {\r\n        return new Promise((resolve, reject) => {\r\n          deleteUsersApi(row.Id)\r\n            .then((res) => {\r\n              if (res.status === 200) {\r\n                // message.success(res.statusText);\r\n              } else {\r\n                message.error(res.statusText);\r\n              }\r\n            })\r\n            .catch((error) => {\r\n              message.error(error.data.message);\r\n            });\r\n          setTimeout(Math.random() > 0.5 ? resolve : reject, 200);\r\n        })\r\n          .catch(() => console.log(\"Oops errors!\"))\r\n          .then(() => {\r\n            refetch();\r\n          });\r\n      },\r\n      onCancel() {},\r\n    });\r\n  }\r\n  const columns = [\r\n    {\r\n      title: \"FirstName\",\r\n      dataIndex: \"FirstName\",\r\n      sorter: true,\r\n    },\r\n    {\r\n      title: \"LastName\",\r\n      dataIndex: \"LastName\",\r\n      sorter: true,\r\n    },\r\n    {\r\n      title: \"Email\",\r\n      dataIndex: \"Email\",\r\n      sorter: true,\r\n    },\r\n    {\r\n      title: \"Username\",\r\n      dataIndex: \"UserName\",\r\n      sorter: true,\r\n    },\r\n    // {\r\n    //   title: \"HashPasswd\",\r\n    //   dataIndex: \"HashPasswd\",\r\n    // },\r\n    {\r\n      title: \"Role\",\r\n      dataIndex: \"RoleName\",\r\n      filters: [\r\n        { text: \"admin\", value: \"admin\" },\r\n        { text: \"normal-user\", value: \"normal-user\" },\r\n        { text: \"dc-member\", value: \"dc-member\" },\r\n        { text: \"contact-point\", value: \"contact-point\" },\r\n      ],\r\n      render: (val) =>\r\n        val === \"admin\" ? (\r\n          <Tag color=\"green\">ADMIN</Tag>\r\n        ) : val === \"normal-user\" ? (\r\n          <Tag color=\"blue\">NORMAL USER</Tag>\r\n        ) : val === \"dc-member\" ? (\r\n          <Tag color=\"red\">DC-MEMBER</Tag>\r\n        ) : (\r\n          <Tag color=\"orange\">CONTACT POINT</Tag>\r\n        ),\r\n    },\r\n    {\r\n      title: \"IsActive\",\r\n      dataIndex: \"IsActive\",\r\n      key: \"IsActive\",\r\n      filterMultiple: false,\r\n      filters: [\r\n        { text: \"Active\", value: true },\r\n        { text: \"InActive\", value: false },\r\n      ],\r\n      render: (val) =>\r\n        val ? <Tag color=\"green\">Active</Tag> : <Tag color=\"red\">InActive</Tag>,\r\n    },\r\n    {\r\n      title: \"UpdatedDate\",\r\n      dataIndex: \"UpdatedDate\",\r\n      sorter: true,\r\n    },\r\n    {\r\n      title: \"Action\",\r\n      key: \"action\",\r\n      render: (_, record) => (\r\n        <Space size=\"middle\">\r\n          <UpdateUserModal record={record} onSubmitModal={refetch} />\r\n          <Button\r\n            type=\"primary\"\r\n            danger\r\n            onClick={() => showPromiseConfirm(record)}\r\n          >\r\n            Delete\r\n          </Button>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  async function handleMenuClick(e) {\r\n    console.log(\"click\", e);\r\n    if (e.key == \"active\") {\r\n      message.warning(\"Active all selected items\");\r\n      await acdeacListUsersApi({\r\n        listid: selectedRowKeys.join(\",\"),\r\n        isactive: 1,\r\n      })\r\n        .then((res) => {\r\n          if (res.status === 200) {\r\n            message.success(res.statusText);\r\n          } else {\r\n            message.error(res.statusText);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          message.error(error.data.message);\r\n        });\r\n      refetch();\r\n    } else if (e.key == \"deactive\") {\r\n      message.warning(\"Deactive all selected items\");\r\n      await acdeacListUsersApi({\r\n        listid: selectedRowKeys.join(\",\"),\r\n        isactive: 0,\r\n      })\r\n        .then((res) => {\r\n          if (res.status === 200) {\r\n            message.success(res.statusText);\r\n          } else {\r\n            message.error(res.statusText);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          message.error(\"Oops, error!\");\r\n        });\r\n      refetch();\r\n    }\r\n  }\r\n  const menu = (\r\n    <Menu onClick={handleMenuClick}>\r\n      <Menu.Item key=\"active\" icon={<CheckCircleOutlined />}>\r\n        Active all selected items\r\n      </Menu.Item>\r\n      <Menu.Item key=\"deactive\" icon={<CloseCircleOutlined />}>\r\n        Deactive all selected items\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n  const [SearchKey, setSearchKey] = useState(\"\");\r\n  const [SortBy, setSortBy] = useState(\"\");\r\n  const [SortOrder, setSortOrder] = useState(\"ascend\");\r\n  const [Role, setRole] = useState(\"\");\r\n  const [IsActive, setIsActive] = useState(undefined);\r\n  const [PageNo, setPageNo] = useState(1);\r\n  const [PageSize, setPageSize] = useState(10);\r\n  const dispatch = useDispatch();\r\n  const [exportData, setExportData] = useState([]);\r\n  const [data, setData] = useState([]);\r\n  const [total, setTotal] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n  const {} = useSelector((state) => state.userManagement);\r\n  useEffect(() => {\r\n    console.log(\"useeffect\");\r\n    fetch({\r\n      PageNo: PageNo,\r\n      PageSize: PageSize,\r\n      SearchKey: SearchKey,\r\n      SortBy: SortBy,\r\n      SortOrder: SortOrder,\r\n      Role: Role,\r\n      IsActive: IsActive,\r\n    });\r\n  }, [PageNo, PageSize, SearchKey, SortBy, SortOrder, Role, IsActive]);\r\n  function refetch() {\r\n    fetch({\r\n      PageNo: PageNo,\r\n      PageSize: PageSize,\r\n      SearchKey: SearchKey,\r\n      SortBy: SortBy,\r\n      SortOrder: SortOrder,\r\n      Role: Role,\r\n      IsActive: IsActive,\r\n    });\r\n  }\r\n  function showTotal(total) {\r\n    return `Total ${total} items`;\r\n  }\r\n  function search(SearchKeyw) {\r\n    setSelectedRowKeys([]);\r\n    setSearchKey(SearchKeyw.trim());\r\n    setPageNo(1);\r\n  }\r\n  function handleTableChange(pagination, filters, sorter) {\r\n    console.log(\"filter\", filters);\r\n    if (sorter.length !== 0) {\r\n      setSelectedRowKeys([]);\r\n      setSortBy(sorter.field);\r\n      setSortOrder(sorter.order);\r\n    }\r\n    if (filters.RoleName !== null) {\r\n      setSelectedRowKeys([]);\r\n      setRole(filters.RoleName.join(\",\"));\r\n      setPageNo(1);\r\n    } else {\r\n      setRole(\"\");\r\n    }\r\n    if (filters.IsActive !== null) {\r\n      setSelectedRowKeys([]);\r\n      setIsActive(filters.IsActive[0]);\r\n      setPageNo(1);\r\n    } else {\r\n      setIsActive(undefined);\r\n    }\r\n  }\r\n\r\n  // Handle change in page number\r\n  const handlePageChange = (pageNumber, pageSize) => {\r\n    if (pageSize !== PageSize && PageNo > Math.ceil(total / pageSize)) {\r\n      console.log(\"Total1\", total);\r\n      setPageSize(pageSize);\r\n      if (Math.ceil(total / pageSize) !== 0) {\r\n        setPageNo(Math.ceil(total / pageSize));\r\n      } else {\r\n        setPageNo(1);\r\n      }\r\n    } else {\r\n      console.log(\"Total2\", total);\r\n      setPageSize(pageSize);\r\n      setPageNo(pageNumber);\r\n    }\r\n  };\r\n\r\n  const fetch = (params) => {\r\n    setLoading(true);\r\n    return getUsersApi(params)\r\n      .then((res) => {\r\n        setLoading(false);\r\n        setData(res.data);\r\n        if (res.status === 200) {\r\n        } else {\r\n          message.error(res.statusText);\r\n        }\r\n        if (res.data.length !== 0) setTotal(res.data[0].TotalItem);\r\n        else setTotal(0);\r\n        showTotal({ total });\r\n      })\r\n      .catch((error) => {\r\n        message.error(error.data.message);\r\n      });\r\n  };\r\n\r\n  const rowSelection = {\r\n    selectedRowKeys,\r\n    onChange: (newSelectedRowKeys) => {\r\n      console.log(\"selectedRowKeys changed: \", newSelectedRowKeys);\r\n      setSelectedRowKeys(newSelectedRowKeys);\r\n    },\r\n  };\r\n  const hasSelected = selectedRowKeys.length > 0;\r\n  return (\r\n    <div>\r\n      <Row>\r\n        <Col span={8}>\r\n          <CreateUserModal onSubmitModal={refetch} />\r\n        </Col>\r\n        <Col span={8}></Col>\r\n        <Col span={8}>\r\n          <Search\r\n            placeholder=\"input search text\"\r\n            onSearch={(value) => search(value)}\r\n            enterButton\r\n            autoFocus={true}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row style={{ marginBottom: \"10px\", marginTop: \"10px\" }}>\r\n        <Dropdown overlay={menu} disabled={!hasSelected}>\r\n          <Button>\r\n            Multi actions <DownOutlined />\r\n          </Button>\r\n        </Dropdown>\r\n        <span style={{ marginLeft: 8 }}>\r\n          {hasSelected ? `Selected ${selectedRowKeys.length} items` : \"\"}\r\n        </span>\r\n      </Row>\r\n\r\n      <Table\r\n        columns={columns}\r\n        rowKey={(record) => record.Id}\r\n        dataSource={data}\r\n        pagination={false}\r\n        loading={loading}\r\n        rowSelection={rowSelection}\r\n        onChange={handleTableChange}\r\n        scroll={{ x: 1500}}\r\n      />\r\n      <br />\r\n      <Row>\r\n        <Col span={12} offset={6}>\r\n          <Pagination\r\n            showQuickJumper\r\n            showSizeChanger\r\n            // onShowSizeChange={onShowSizeChange}\r\n            onChange={handlePageChange}\r\n            current={PageNo}\r\n            total={total}\r\n            showTotal={showTotal}\r\n            pageSize={PageSize}\r\n            // onChange={onChange}\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n      <br />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MainPage;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nDetailPage.propTypes = {};\r\n\r\nfunction DetailPage(props) {\r\n  return <div>User Detail Page</div>;\r\n}\r\n\r\nexport default DetailPage;\r\n","import React, { Suspense } from \"react\";\r\nimport { Route, Switch, useRouteMatch } from \"react-router-dom\";\r\n\r\nimport \"./index.scss\";\r\n\r\nimport NotFound from \"../../components/NotFound\";\r\nimport MainPage from \"./pages/Main\";\r\nimport DetailPage from \"./pages/Detail\";\r\nimport { AbilityContext } from \"permission/can\";\r\nimport { useAbility } from \"@casl/react\";\r\n\r\nUser.propTypes = {};\r\n\r\nfunction User() {\r\n  const ability = useAbility(AbilityContext);\r\n  console.log(ability.can(\"access\", \"manage-user\"));\r\n  const match = useRouteMatch();\r\n  return (\r\n    <Suspense fallback={<div>Loading ...</div>}>\r\n      <Switch>\r\n        <Route exact path={match.url} component={MainPage} />\r\n        <Route exact path={`${match.url}/:userId`} component={DetailPage} />\r\n        <Route component={NotFound} />\r\n      </Switch>\r\n    </Suspense>\r\n  );\r\n}\r\n\r\nexport default User;\r\n"],"sourceRoot":""}